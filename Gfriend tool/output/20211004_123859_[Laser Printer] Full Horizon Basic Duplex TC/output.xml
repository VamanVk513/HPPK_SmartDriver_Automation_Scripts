<?xml version="1.0" encoding="UTF-8"?>
<TestSuite Name="[Laser Printer] Full Horizon Basic Duplex TC">
  <StartTime>
2021-10-04 12:39:20
</StartTime>
  <TestCase Name="General Everyday Printing">
    <StartTime>
2021-10-04 12:39:20
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_General_Everyday_Printing">
      <StartTime>
2021-10-04 12:39:20
</StartTime>
      <StartTime>
2021-10-04 12:39:20
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_General_Everyday_Printing.pdf,HP Smart Printing)">
        <StartTime>
2021-10-04 12:39:20
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:39:51
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2021-10-04 12:39:51
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:39:51
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2021-10-04 12:39:51
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:39:57
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:39:57
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:39:57
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2021-10-04 12:39:57
</StartTime>
      <StartTime>
2021-10-04 12:39:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:39:57
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:39:57
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_GeneralPrint)">
      <StartTime>
2021-10-04 12:39:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:39:57
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:39:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:40:02
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2021-10-04 12:40:02
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:40:03
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:40:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:40:08
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2021-10-04 12:40:08
</StartTime>
      <StartTime>
2021-10-04 12:40:08
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2021-10-04 12:40:08
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:40:10
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:40:10
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:40:30
</EndTime>
      </Statement>
      <If Condition=" Hallasan.Close Application">
        <StartTime>
2021-10-04 12:40:30
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2021-10-04 12:40:30
</StartTime>
          <Block>
            <StartTime>
2021-10-04 12:40:30
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:40:30
</EndTime>
          </Block>
          <EndTime>
2021-10-04 12:40:30
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2021-10-04 12:40:30
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:40:30
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:40:50
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:40:50
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
      <StartTime>
2021-10-04 12:40:50
</StartTime>
      <StartTime>
2021-10-04 12:40:50
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:TwoSidedLongEdge)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:TwoSidedLongEdge are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 12:40:50
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:40:50
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:40:50
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:40:50
</EndTime>
  </TestCase>
  <TestCase Name="EcoSMART Settings">
    <StartTime>
2021-10-04 12:40:50
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_EcoSMART_Settings">
      <StartTime>
2021-10-04 12:40:50
</StartTime>
      <StartTime>
2021-10-04 12:40:50
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_EcoSMART_Settings.pdf,HP Smart Printing)">
        <StartTime>
2021-10-04 12:40:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:41:21
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2021-10-04 12:41:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:41:21
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2021-10-04 12:41:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:41:27
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:27
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:27
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2021-10-04 12:41:27
</StartTime>
      <StartTime>
2021-10-04 12:41:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:27
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:27
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_EcoSmart)">
      <StartTime>
2021-10-04 12:41:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:27
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:41:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:32
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2021-10-04 12:41:32
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:33
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:41:33
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:41:38
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2021-10-04 12:41:38
</StartTime>
      <StartTime>
2021-10-04 12:41:38
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2021-10-04 12:41:38
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:41:40
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:41:40
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:42:00
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2021-10-04 12:42:00
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2021-10-04 12:42:00
</StartTime>
          <Block>
            <StartTime>
2021-10-04 12:42:00
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:42:00
</EndTime>
          </Block>
          <EndTime>
2021-10-04 12:42:00
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2021-10-04 12:42:00
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:42:00
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:20
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:20
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
      <StartTime>
2021-10-04 12:42:20
</StartTime>
      <StartTime>
2021-10-04 12:42:20
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:TwoSidedLongEdge)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:TwoSidedLongEdge are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 12:42:20
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:42:20
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:42:20
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:42:20
</EndTime>
  </TestCase>
  <TestCase Name="Envelopes">
    <StartTime>
2021-10-04 12:42:20
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelopes">
      <StartTime>
2021-10-04 12:42:20
</StartTime>
      <StartTime>
2021-10-04 12:42:20
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Envelopes.pdf,HP Smart Printing)">
        <StartTime>
2021-10-04 12:42:20
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:42:51
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2021-10-04 12:42:51
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:42:51
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2021-10-04 12:42:51
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:42:57
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:57
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:57
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2021-10-04 12:42:57
</StartTime>
      <StartTime>
2021-10-04 12:42:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:57
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:57
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_Envelope)">
      <StartTime>
2021-10-04 12:42:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:42:58
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:42:58
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:43:03
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2021-10-04 12:43:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:43:03
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:43:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:43:08
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2021-10-04 12:43:08
</StartTime>
      <StartTime>
2021-10-04 12:43:08
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2021-10-04 12:43:08
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:43:10
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:43:10
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:43:30
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2021-10-04 12:43:30
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2021-10-04 12:43:30
</StartTime>
          <Block>
            <StartTime>
2021-10-04 12:43:30
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:43:30
</EndTime>
          </Block>
          <EndTime>
2021-10-04 12:43:30
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2021-10-04 12:43:30
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:43:30
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:43:50
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:43:50
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_EnvelopePlain">
      <StartTime>
2021-10-04 12:43:50
</StartTime>
      <StartTime>
2021-10-04 12:43:50
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:EnvelopePlain)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:EnvelopePlain are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 12:43:50
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:43:50
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:43:50
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:43:50
</EndTime>
  </TestCase>
  <TestCase Name="Labels">
    <StartTime>
2021-10-04 12:43:50
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Labels">
      <StartTime>
2021-10-04 12:43:50
</StartTime>
      <StartTime>
2021-10-04 12:43:50
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Labels.pdf,HP Smart Printing)">
        <StartTime>
2021-10-04 12:43:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:44:21
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2021-10-04 12:44:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:44:21
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2021-10-04 12:44:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:44:27
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:27
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:27
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2021-10-04 12:44:27
</StartTime>
      <StartTime>
2021-10-04 12:44:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:27
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:27
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_Labels)">
      <StartTime>
2021-10-04 12:44:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:27
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:44:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:32
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2021-10-04 12:44:32
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:33
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2021-10-04 12:44:33
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:44:38
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2021-10-04 12:44:38
</StartTime>
      <StartTime>
2021-10-04 12:44:38
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2021-10-04 12:44:38
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:44:40
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:44:40
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:45:00
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2021-10-04 12:45:00
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2021-10-04 12:45:00
</StartTime>
          <Block>
            <StartTime>
2021-10-04 12:45:00
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:45:00
</EndTime>
          </Block>
          <EndTime>
2021-10-04 12:45:00
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2021-10-04 12:45:00
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2021-10-04 12:45:00
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:45:20
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2021-10-04 12:45:20
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_Label">
      <StartTime>
2021-10-04 12:45:20
</StartTime>
      <StartTime>
2021-10-04 12:45:20
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:Label)">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:Label are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 12:45:20
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:45:20
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 12:45:20
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:45:20
</EndTime>
  </TestCase>
  <TestCase Name="Two-Sided Printing:TwoSidedLongEdge">
    <StartTime>
2021-10-04 12:45:20
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:45:20
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:45:20
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_TwoSidedLongEdge">
          <StartTime>
2021-10-04 12:45:20
</StartTime>
          <StartTime>
2021-10-04 12:45:20
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_TwoSidedLongEdge.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:45:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:45:51
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:45:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:45:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:45:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:45:57
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:45:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:45:57
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:45:57
</StartTime>
          <StartTime>
2021-10-04 12:45:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:45:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:45:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobDuplexAllDocumentsContiguously,Option.TwoSidedLongEdge)">
          <StartTime>
2021-10-04 12:45:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:45:57
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:45:57
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12455794.png
</ScreenShot>
          <EndTime>
2021-10-04 12:45:57
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:45:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:46:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:46:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:46:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:46:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:46:08
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:46:08
</StartTime>
          <StartTime>
2021-10-04 12:46:08
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:46:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:46:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:46:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:46:30
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:46:30
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:46:30
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:46:30
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:46:30
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:46:30
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:46:30
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:46:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:46:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:46:50
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
          <StartTime>
2021-10-04 12:46:50
</StartTime>
          <StartTime>
2021-10-04 12:46:50
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:TwoSidedLongEdge)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:TwoSidedLongEdge are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:46:50
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:46:50
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:46:50
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:46:50
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:46:50
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:46:50
</EndTime>
  </TestCase>
  <TestCase Name="Two-Sided Printing:TwoSidedShortEdge">
    <StartTime>
2021-10-04 12:46:50
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:46:50
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:46:50
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_TwoSidedShortEdge">
          <StartTime>
2021-10-04 12:46:50
</StartTime>
          <StartTime>
2021-10-04 12:46:50
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_TwoSidedShortEdge.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:46:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:47:21
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:47:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:47:21
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:47:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:47:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:27
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:47:27
</StartTime>
          <StartTime>
2021-10-04 12:47:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobDuplexAllDocumentsContiguously,Option.TwoSidedShortEdge)">
          <StartTime>
2021-10-04 12:47:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:27
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:47:27
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12472800.png
</ScreenShot>
          <EndTime>
2021-10-04 12:47:28
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:47:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:47:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:33
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:47:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:47:38
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:47:38
</StartTime>
          <StartTime>
2021-10-04 12:47:38
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:47:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:47:40
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:47:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:48:00
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:48:00
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:48:00
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:48:00
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:48:00
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:48:00
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:48:00
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:48:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:20
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedShortEdge">
          <StartTime>
2021-10-04 12:48:20
</StartTime>
          <StartTime>
2021-10-04 12:48:20
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:TwoSidedShortEdge)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:TwoSidedShortEdge are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:48:20
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:48:20
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:48:20
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:48:20
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:48:20
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:48:20
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_RightBottom">
    <StartTime>
2021-10-04 12:48:20
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:48:20
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:48:20
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_RightBottom">
          <StartTime>
2021-10-04 12:48:20
</StartTime>
          <StartTime>
2021-10-04 12:48:20
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:48:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:48:51
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:48:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:48:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:48:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:48:57
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:57
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:48:57
</StartTime>
          <StartTime>
2021-10-04 12:48:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:48:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 12:48:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:48:58
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:48:58
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12485828.png
</ScreenShot>
          <EndTime>
2021-10-04 12:48:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:48:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:49:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:49:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:49:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:49:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:49:08
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:49:08
</StartTime>
          <StartTime>
2021-10-04 12:49:08
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:49:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:49:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:49:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:49:30
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:49:30
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:49:30
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:49:30
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:49:30
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:49:30
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:49:30
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:49:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:49:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:49:50
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_RightBottom">
          <StartTime>
2021-10-04 12:49:50
</StartTime>
          <StartTime>
2021-10-04 12:49:50
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:49:50
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:49:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:49:51
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:49:51
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:49:51
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:49:51
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:49:51
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:49:51
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_BottomRight">
    <StartTime>
2021-10-04 12:49:51
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:49:51
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:49:51
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomRight">
          <StartTime>
2021-10-04 12:49:51
</StartTime>
          <StartTime>
2021-10-04 12:49:51
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_ BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:49:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:50:21
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:50:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:50:21
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:50:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:50:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:27
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:50:27
</StartTime>
          <StartTime>
2021-10-04 12:50:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:50:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 12:50:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:28
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:50:28
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12502853.png
</ScreenShot>
          <EndTime>
2021-10-04 12:50:28
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:50:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:50:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:33
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:50:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:50:38
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:50:38
</StartTime>
          <StartTime>
2021-10-04 12:50:38
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:50:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:50:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:50:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:51:01
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:51:01
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:51:01
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:51:01
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:51:01
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:51:01
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:51:01
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:51:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:21
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:21
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomRight">
          <StartTime>
2021-10-04 12:51:21
</StartTime>
          <StartTime>
2021-10-04 12:51:21
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:51:21
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:51:21
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:51:21
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:51:21
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:51:21
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:51:21
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_LeftBottom">
    <StartTime>
2021-10-04 12:51:21
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:51:21
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:51:21
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_LeftBottom">
          <StartTime>
2021-10-04 12:51:21
</StartTime>
          <StartTime>
2021-10-04 12:51:21
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:51:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:51:52
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:51:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:51:52
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:51:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:51:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:51:58
</StartTime>
          <StartTime>
2021-10-04 12:51:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:51:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 12:51:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:51:58
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12515887.png
</ScreenShot>
          <EndTime>
2021-10-04 12:51:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:51:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:52:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:52:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:52:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:52:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:52:09
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:52:09
</StartTime>
          <StartTime>
2021-10-04 12:52:09
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:52:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:52:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:52:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:52:31
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:52:31
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:52:31
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:52:31
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:52:31
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:52:31
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:52:31
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:52:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:52:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:52:51
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_LeftBottom">
          <StartTime>
2021-10-04 12:52:51
</StartTime>
          <StartTime>
2021-10-04 12:52:51
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:52:51
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:52:51
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:52:51
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:52:51
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:52:51
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:52:51
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_BottomLeft">
    <StartTime>
2021-10-04 12:52:51
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:52:51
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:52:51
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomLeft">
          <StartTime>
2021-10-04 12:52:51
</StartTime>
          <StartTime>
2021-10-04 12:52:51
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:52:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:53:22
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:53:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:53:22
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:53:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:53:28
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:28
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:28
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:53:28
</StartTime>
          <StartTime>
2021-10-04 12:53:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:28
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:53:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 12:53:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:29
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:53:29
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12532920.png
</ScreenShot>
          <EndTime>
2021-10-04 12:53:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:53:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:53:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:34
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:53:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:53:39
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:53:39
</StartTime>
          <StartTime>
2021-10-04 12:53:39
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:53:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:53:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:53:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:54:01
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:54:01
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:54:01
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:54:01
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:54:01
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:54:01
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:54:01
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:54:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:21
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:21
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomLeft">
          <StartTime>
2021-10-04 12:54:21
</StartTime>
          <StartTime>
2021-10-04 12:54:21
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:54:21
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:54:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:54:22
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:54:22
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:54:22
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:54:22
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:54:22
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:54:22
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_RightBottom_Boder">
    <StartTime>
2021-10-04 12:54:22
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:54:22
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:54:22
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_RightBottom_Boder">
          <StartTime>
2021-10-04 12:54:22
</StartTime>
          <StartTime>
2021-10-04 12:54:22
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:54:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:54:52
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:54:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:54:52
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:54:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:54:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:58
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:54:58
</StartTime>
          <StartTime>
2021-10-04 12:54:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:54:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 12:54:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 12:54:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:54:59
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:54:59
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12545966.png
</ScreenShot>
          <EndTime>
2021-10-04 12:54:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:54:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:55:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:55:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:55:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:55:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:55:10
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:55:10
</StartTime>
          <StartTime>
2021-10-04 12:55:10
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:55:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:55:12
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:55:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:55:32
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:55:32
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:55:32
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:55:32
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:55:32
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:55:32
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:55:32
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:55:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:55:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:55:52
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_RightBottom_Boder">
          <StartTime>
2021-10-04 12:55:52
</StartTime>
          <StartTime>
2021-10-04 12:55:52
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:55:52
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:55:52
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:55:52
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:55:52
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:55:52
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:55:52
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_BottomRight_Boder">
    <StartTime>
2021-10-04 12:55:52
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:55:52
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:55:52
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomRight_Boder">
          <StartTime>
2021-10-04 12:55:52
</StartTime>
          <StartTime>
2021-10-04 12:55:52
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:55:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:56:23
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:56:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:56:23
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:56:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:56:29
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:29
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:29
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:56:29
</StartTime>
          <StartTime>
2021-10-04 12:56:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:29
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:56:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 12:56:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 12:56:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:30
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:56:30
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12563013.png
</ScreenShot>
          <EndTime>
2021-10-04 12:56:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:56:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:56:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:35
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:56:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:56:40
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:56:40
</StartTime>
          <StartTime>
2021-10-04 12:56:40
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:56:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:56:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:56:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:57:02
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:57:02
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:57:02
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:57:02
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:57:02
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:57:02
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:57:02
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:57:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:57:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:57:22
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomRight_Boder">
          <StartTime>
2021-10-04 12:57:22
</StartTime>
          <StartTime>
2021-10-04 12:57:22
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:57:22
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:57:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:57:23
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:57:23
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:57:23
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:57:23
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:57:23
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:57:23
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_LeftBottom_Boder">
    <StartTime>
2021-10-04 12:57:23
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:57:23
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:57:23
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 12:57:23
</StartTime>
          <StartTime>
2021-10-04 12:57:23
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:57:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:57:53
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:57:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:57:53
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:57:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:57:59
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:57:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:57:59
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:57:59
</StartTime>
          <StartTime>
2021-10-04 12:57:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:57:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:57:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:57:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 12:58:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 12:58:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:00
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:58:00
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12580046.png
</ScreenShot>
          <EndTime>
2021-10-04 12:58:00
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:58:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:58:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:05
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:58:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:10
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:58:10
</StartTime>
          <StartTime>
2021-10-04 12:58:10
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:58:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:58:12
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:58:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:58:32
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 12:58:32
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 12:58:32
</StartTime>
              <Block>
                <StartTime>
2021-10-04 12:58:32
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 12:58:32
</EndTime>
              </Block>
              <EndTime>
2021-10-04 12:58:32
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 12:58:32
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:58:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:58:53
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 12:58:53
</StartTime>
          <StartTime>
2021-10-04 12:58:53
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 12:58:53
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:58:53
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 12:58:53
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 12:58:53
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 12:58:53
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 12:58:53
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:2UP_BottomLeft_Boder">
    <StartTime>
2021-10-04 12:58:53
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 12:58:53
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 12:58:53
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 12:58:53
</StartTime>
          <StartTime>
2021-10-04 12:58:53
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 12:58:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:59:24
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 12:59:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:59:24
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 12:59:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:59:30
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_12593091.png
</ScreenShot>
          <EndTime>
2021-10-04 12:59:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:59:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 12:59:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:36
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 12:59:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 12:59:41
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 12:59:41
</StartTime>
          <StartTime>
2021-10-04 12:59:41
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 12:59:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 12:59:43
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 12:59:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:00:03
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:00:03
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:00:03
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:00:03
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:00:03
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:00:03
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:00:03
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:00:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:00:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:00:23
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:00:23
</StartTime>
          <StartTime>
2021-10-04 13:00:23
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:00:23
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:00:23
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:00:23
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:00:23
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:00:23
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:00:23
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_RightBottom">
    <StartTime>
2021-10-04 13:00:23
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:00:23
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:00:23
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_RightBottom">
          <StartTime>
2021-10-04 13:00:23
</StartTime>
          <StartTime>
2021-10-04 13:00:23
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:00:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:00:54
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:00:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:00:54
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:00:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:01:00
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:00
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:01:00
</StartTime>
          <StartTime>
2021-10-04 13:01:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:01:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:01:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:01
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:01:01
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13010111.png
</ScreenShot>
          <EndTime>
2021-10-04 13:01:01
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:01:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:06
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:01:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:06
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:01:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:11
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:01:11
</StartTime>
          <StartTime>
2021-10-04 13:01:11
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:01:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:01:13
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:01:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:01:33
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:01:33
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:01:33
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:01:33
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:01:33
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:01:33
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:01:33
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:01:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:01:53
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_RightBottom">
          <StartTime>
2021-10-04 13:01:53
</StartTime>
          <StartTime>
2021-10-04 13:01:53
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:01:53
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:01:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:01:54
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:01:54
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:01:54
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:01:54
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:01:54
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:01:54
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_BottomRight">
    <StartTime>
2021-10-04 13:01:54
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:01:54
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:01:54
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomRight">
          <StartTime>
2021-10-04 13:01:54
</StartTime>
          <StartTime>
2021-10-04 13:01:54
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:01:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:02:24
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:02:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:02:24
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:02:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:02:30
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:30
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:02:30
</StartTime>
          <StartTime>
2021-10-04 13:02:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:02:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:31
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:02:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:31
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:02:31
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13023141.png
</ScreenShot>
          <EndTime>
2021-10-04 13:02:31
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:02:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:36
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:02:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:36
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:02:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:02:41
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:02:41
</StartTime>
          <StartTime>
2021-10-04 13:02:41
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:02:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:02:43
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:02:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:03:03
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:03:03
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:03:03
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:03:03
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:03:03
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:03:03
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:03:03
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:03:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:03:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:03:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:03:23
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomRight">
          <StartTime>
2021-10-04 13:03:23
</StartTime>
          <StartTime>
2021-10-04 13:03:23
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:03:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:03:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:03:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:03:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:03:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:03:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:03:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:03:24
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:03:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:03:24
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:03:24
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:03:24
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:03:24
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:03:24
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:03:24
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_LeftBottom">
    <StartTime>
2021-10-04 13:03:24
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:03:24
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:03:24
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_LeftBottom">
          <StartTime>
2021-10-04 13:03:24
</StartTime>
          <StartTime>
2021-10-04 13:03:24
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:03:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:03:54
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:03:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:03:55
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:03:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:04:01
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:04:01
</StartTime>
          <StartTime>
2021-10-04 13:04:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:04:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:04:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:04:01
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13040163.png
</ScreenShot>
          <EndTime>
2021-10-04 13:04:01
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:04:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:06
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:04:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:06
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:04:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:11
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:04:11
</StartTime>
          <StartTime>
2021-10-04 13:04:11
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:04:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:04:14
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:04:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:04:34
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:04:34
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:04:34
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:04:34
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:04:34
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:04:34
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:04:34
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:04:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:04:54
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_LeftBottom">
          <StartTime>
2021-10-04 13:04:54
</StartTime>
          <StartTime>
2021-10-04 13:04:54
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:04:54
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:04:54
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:04:54
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:04:54
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:04:54
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:04:54
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_BottomLeft">
    <StartTime>
2021-10-04 13:04:54
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:04:54
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:04:54
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomLeft">
          <StartTime>
2021-10-04 13:04:54
</StartTime>
          <StartTime>
2021-10-04 13:04:54
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:04:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:05:25
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:05:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:05:25
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:05:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:05:31
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:05:31
</StartTime>
          <StartTime>
2021-10-04 13:05:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:05:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:05:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:05:31
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13053196.png
</ScreenShot>
          <EndTime>
2021-10-04 13:05:31
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:05:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:05:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:37
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:05:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:05:42
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:05:42
</StartTime>
          <StartTime>
2021-10-04 13:05:42
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:05:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:05:44
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:05:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:06:04
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:06:04
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:06:04
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:06:04
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:06:04
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:06:04
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:06:04
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:06:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:06:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:06:24
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomLeft">
          <StartTime>
2021-10-04 13:06:24
</StartTime>
          <StartTime>
2021-10-04 13:06:24
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:06:24
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:06:24
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:06:24
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:06:24
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:06:24
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:06:24
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_RightBottom_Boder">
    <StartTime>
2021-10-04 13:06:24
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:06:24
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:06:24
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:06:24
</StartTime>
          <StartTime>
2021-10-04 13:06:24
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:06:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:06:55
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:06:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:06:55
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:06:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:07:01
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:01
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:07:01
</StartTime>
          <StartTime>
2021-10-04 13:07:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:07:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:07:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:07:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:02
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:07:02
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13070237.png
</ScreenShot>
          <EndTime>
2021-10-04 13:07:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:07:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:07:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:07
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:07:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:12
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:07:12
</StartTime>
          <StartTime>
2021-10-04 13:07:12
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:07:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:07:14
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:07:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:07:34
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:07:34
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:07:34
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:07:34
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:07:34
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:07:34
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:07:34
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:07:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:07:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:07:54
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:07:54
</StartTime>
          <StartTime>
2021-10-04 13:07:54
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:07:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:07:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:07:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:07:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:07:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:07:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:07:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:07:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:07:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:07:55
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:07:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:07:55
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:07:55
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:07:55
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:07:55
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:07:55
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:07:55
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_BottomRight_Boder">
    <StartTime>
2021-10-04 13:07:55
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:07:55
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:07:55
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:07:55
</StartTime>
          <StartTime>
2021-10-04 13:07:55
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:07:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:08:26
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:08:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:08:26
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:08:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:08:32
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13083285.png
</ScreenShot>
          <EndTime>
2021-10-04 13:08:32
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:08:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:08:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:38
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:08:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:08:43
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:08:43
</StartTime>
          <StartTime>
2021-10-04 13:08:43
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:08:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:08:45
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:08:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:09:05
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:09:05
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:09:05
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:09:05
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:09:05
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:09:05
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:09:05
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:09:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:09:25
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:09:25
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:09:25
</StartTime>
          <StartTime>
2021-10-04 13:09:25
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:09:25
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:09:25
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:09:25
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:09:25
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:09:25
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:09:25
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_LeftBottom_Boder">
    <StartTime>
2021-10-04 13:09:25
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:09:25
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:09:25
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:09:25
</StartTime>
          <StartTime>
2021-10-04 13:09:25
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:09:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:09:56
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:09:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:09:56
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:09:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:10:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:02
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:10:02
</StartTime>
          <StartTime>
2021-10-04 13:10:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:10:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:10:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:10:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:03
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:10:03
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13100331.png
</ScreenShot>
          <EndTime>
2021-10-04 13:10:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:10:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:10:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:10:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:13
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:10:13
</StartTime>
          <StartTime>
2021-10-04 13:10:13
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:10:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:10:15
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:10:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:10:35
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:10:35
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:10:35
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:10:35
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:10:35
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:10:35
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:10:35
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:10:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:10:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:10:55
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:10:55
</StartTime>
          <StartTime>
2021-10-04 13:10:55
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:10:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:10:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:10:56
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:10:56
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:10:56
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:10:56
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:10:56
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:10:56
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:4UP_BottomLeft_Boder">
    <StartTime>
2021-10-04 13:10:56
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:10:56
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:10:56
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:10:56
</StartTime>
          <StartTime>
2021-10-04 13:10:56
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:10:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:11:27
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:11:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:11:27
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:11:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:11:33
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13113388.png
</ScreenShot>
          <EndTime>
2021-10-04 13:11:33
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:11:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:38
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:11:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:39
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:11:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:11:44
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:11:44
</StartTime>
          <StartTime>
2021-10-04 13:11:44
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:11:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:11:46
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:11:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:12:06
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:12:06
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:12:06
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:12:06
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:12:06
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:12:06
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:12:06
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:12:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:12:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:12:26
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:12:26
</StartTime>
          <StartTime>
2021-10-04 13:12:26
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:12:26
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:12:26
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:12:26
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:12:26
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:12:26
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:12:26
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_RightBottom">
    <StartTime>
2021-10-04 13:12:26
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:12:26
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:12:26
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_RightBottom">
          <StartTime>
2021-10-04 13:12:26
</StartTime>
          <StartTime>
2021-10-04 13:12:26
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:12:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:12:57
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:12:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:12:57
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:12:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:13:03
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:03
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:03
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:13:03
</StartTime>
          <StartTime>
2021-10-04 13:13:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:03
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:13:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:13:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:04
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:13:04
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13130419.png
</ScreenShot>
          <EndTime>
2021-10-04 13:13:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:13:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:13:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:09
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:13:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:14
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:13:14
</StartTime>
          <StartTime>
2021-10-04 13:13:14
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:13:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:13:16
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:13:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:13:36
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:13:36
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:13:36
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:13:36
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:13:36
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:13:36
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:13:36
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:13:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:13:56
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_RightBottom">
          <StartTime>
2021-10-04 13:13:56
</StartTime>
          <StartTime>
2021-10-04 13:13:56
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:13:56
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:13:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:13:57
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:13:57
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:13:57
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:13:57
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:13:57
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:13:57
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_BottomRight">
    <StartTime>
2021-10-04 13:13:57
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:13:57
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:13:57
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomRight">
          <StartTime>
2021-10-04 13:13:57
</StartTime>
          <StartTime>
2021-10-04 13:13:57
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:13:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:14:27
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:14:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:14:27
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:14:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:14:33
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:33
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:14:33
</StartTime>
          <StartTime>
2021-10-04 13:14:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:14:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:14:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:34
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:14:34
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13143453.png
</ScreenShot>
          <EndTime>
2021-10-04 13:14:34
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:14:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:39
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:14:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:39
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:14:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:14:44
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:14:44
</StartTime>
          <StartTime>
2021-10-04 13:14:44
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:14:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:14:46
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:14:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:15:07
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:15:07
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:15:07
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:15:07
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:15:07
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:15:07
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:15:07
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:15:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:15:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:15:27
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomRight">
          <StartTime>
2021-10-04 13:15:27
</StartTime>
          <StartTime>
2021-10-04 13:15:27
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:15:27
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:15:27
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:15:27
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:15:27
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:15:27
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:15:27
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_LeftBottom">
    <StartTime>
2021-10-04 13:15:27
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:15:27
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:15:27
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_LeftBottom">
          <StartTime>
2021-10-04 13:15:27
</StartTime>
          <StartTime>
2021-10-04 13:15:27
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:15:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:15:58
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:15:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:15:58
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:15:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:16:04
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:16:04
</StartTime>
          <StartTime>
2021-10-04 13:16:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:16:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:16:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:16:04
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13160484.png
</ScreenShot>
          <EndTime>
2021-10-04 13:16:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:16:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:16:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:10
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:16:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:15
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:16:15
</StartTime>
          <StartTime>
2021-10-04 13:16:15
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:16:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:16:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:16:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:16:37
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:16:37
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:16:37
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:16:37
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:16:37
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:16:37
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:16:37
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:16:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:16:57
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_LeftBottom">
          <StartTime>
2021-10-04 13:16:57
</StartTime>
          <StartTime>
2021-10-04 13:16:57
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:16:57
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:16:57
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:16:57
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:16:57
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:16:57
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:16:57
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_BottomLeft">
    <StartTime>
2021-10-04 13:16:57
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:16:57
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:16:57
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomLeft">
          <StartTime>
2021-10-04 13:16:57
</StartTime>
          <StartTime>
2021-10-04 13:16:57
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:16:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:17:28
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:17:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:17:28
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:17:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:17:34
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:34
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:17:34
</StartTime>
          <StartTime>
2021-10-04 13:17:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:17:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:17:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:35
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:17:35
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13173527.png
</ScreenShot>
          <EndTime>
2021-10-04 13:17:35
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:17:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:40
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:17:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:40
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:17:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:17:45
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:17:45
</StartTime>
          <StartTime>
2021-10-04 13:17:45
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:17:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:17:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:17:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:18:07
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:18:07
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:18:07
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:18:07
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:18:07
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:18:07
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:18:07
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:18:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:18:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:18:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:18:27
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomLeft">
          <StartTime>
2021-10-04 13:18:27
</StartTime>
          <StartTime>
2021-10-04 13:18:27
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:18:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:18:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:18:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:18:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:18:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:18:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:28
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:18:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:18:28
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:18:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:18:28
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:18:28
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:18:28
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:18:28
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:18:28
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:18:28
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_RightBottom_Boder">
    <StartTime>
2021-10-04 13:18:28
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:18:28
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:18:28
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:18:28
</StartTime>
          <StartTime>
2021-10-04 13:18:28
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:18:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:18:58
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:18:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:18:58
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:18:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:19:05
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13190575.png
</ScreenShot>
          <EndTime>
2021-10-04 13:19:05
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:19:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:10
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:19:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:11
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:19:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:16
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:19:16
</StartTime>
          <StartTime>
2021-10-04 13:19:16
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:19:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:19:18
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:19:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:19:38
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:19:38
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:19:38
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:19:38
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:19:38
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:19:38
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:19:38
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:19:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:19:58
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:19:58
</StartTime>
          <StartTime>
2021-10-04 13:19:58
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:19:58
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:19:58
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:19:58
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:19:58
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:19:58
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:19:58
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_BottomRight_Boder">
    <StartTime>
2021-10-04 13:19:58
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:19:58
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:19:58
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:19:58
</StartTime>
          <StartTime>
2021-10-04 13:19:58
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:19:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:20:29
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:20:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:20:29
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:20:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:20:35
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:35
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:35
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:20:35
</StartTime>
          <StartTime>
2021-10-04 13:20:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:35
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:20:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:20:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:36
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:20:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:36
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:20:36
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13203629.png
</ScreenShot>
          <EndTime>
2021-10-04 13:20:36
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:20:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:41
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:20:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:41
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:20:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:20:46
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:20:46
</StartTime>
          <StartTime>
2021-10-04 13:20:46
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:20:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:20:48
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:20:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:21:08
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:21:08
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:21:08
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:21:08
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:21:08
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:21:08
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:21:08
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:21:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:21:28
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:21:28
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:21:28
</StartTime>
          <StartTime>
2021-10-04 13:21:28
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:28
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:21:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:29
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:21:29
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:29
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:21:29
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:21:29
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:21:29
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:21:29
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:21:29
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:21:29
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:21:29
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:21:29
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:21:29
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_LeftBottom_Boder">
    <StartTime>
2021-10-04 13:21:29
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:21:29
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:21:29
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:21:29
</StartTime>
          <StartTime>
2021-10-04 13:21:29
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:21:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:21:59
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:21:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:22:00
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:22:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:22:06
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13220682.png
</ScreenShot>
          <EndTime>
2021-10-04 13:22:06
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:22:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:22:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:12
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:22:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:17
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:22:17
</StartTime>
          <StartTime>
2021-10-04 13:22:17
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:22:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:22:19
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:22:19
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:22:39
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:22:39
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:22:39
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:22:39
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:22:39
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:22:39
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:22:39
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:22:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:22:59
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:22:59
</StartTime>
          <StartTime>
2021-10-04 13:22:59
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:22:59
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:22:59
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:22:59
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:22:59
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:22:59
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:22:59
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:6UP_BottomLeft_Boder">
    <StartTime>
2021-10-04 13:22:59
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:22:59
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:22:59
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:22:59
</StartTime>
          <StartTime>
2021-10-04 13:22:59
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:22:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:23:30
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:23:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:23:30
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:23:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:23:36
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:36
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:36
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:23:36
</StartTime>
          <StartTime>
2021-10-04 13:23:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:36
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:36
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2021-10-04 13:23:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:36
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:23:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:23:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:37
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:23:37
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13233735.png
</ScreenShot>
          <EndTime>
2021-10-04 13:23:37
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:23:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:42
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:23:42
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:42
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:23:42
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:23:47
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:23:47
</StartTime>
          <StartTime>
2021-10-04 13:23:47
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:23:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:23:49
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:23:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:24:09
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:24:09
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:24:09
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:24:09
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:24:09
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:24:09
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:24:09
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:24:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:24:29
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:24:29
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:24:29
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:24:29
</StartTime>
          <StartTime>
2021-10-04 13:24:29
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:24:29
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:29
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:24:29
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:29
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:24:29
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:29
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:24:29
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:29
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:24:29
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:24:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:24:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:24:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:24:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:24:30
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:24:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:24:30
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:24:30
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:24:30
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:24:30
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:24:30
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:24:30
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_RightBottom">
    <StartTime>
2021-10-04 13:24:30
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:24:30
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:24:30
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_RightBottom">
          <StartTime>
2021-10-04 13:24:30
</StartTime>
          <StartTime>
2021-10-04 13:24:30
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:24:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:25:01
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:25:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:25:01
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:25:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:25:07
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:25:07
</StartTime>
          <StartTime>
2021-10-04 13:25:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:25:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:25:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:25:07
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13250770.png
</ScreenShot>
          <EndTime>
2021-10-04 13:25:07
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:25:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:12
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:25:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:13
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:25:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:25:18
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:25:18
</StartTime>
          <StartTime>
2021-10-04 13:25:18
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:25:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:25:20
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:25:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:25:40
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:25:40
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:25:40
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:25:40
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:25:40
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:25:40
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:25:40
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:25:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:00
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_RightBottom">
          <StartTime>
2021-10-04 13:26:00
</StartTime>
          <StartTime>
2021-10-04 13:26:00
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:26:00
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:26:00
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:26:00
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:26:00
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:26:00
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:26:00
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_BottomRight">
    <StartTime>
2021-10-04 13:26:00
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:26:00
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:26:00
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomRight">
          <StartTime>
2021-10-04 13:26:00
</StartTime>
          <StartTime>
2021-10-04 13:26:00
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:26:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:26:31
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:26:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:26:31
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:26:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:26:37
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:37
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:37
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:26:37
</StartTime>
          <StartTime>
2021-10-04 13:26:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:37
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:26:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:26:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:38
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:26:38
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13263813.png
</ScreenShot>
          <EndTime>
2021-10-04 13:26:38
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:26:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:43
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:26:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:43
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:26:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:26:48
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:26:48
</StartTime>
          <StartTime>
2021-10-04 13:26:48
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:26:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:26:50
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:26:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:27:10
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:27:10
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:27:10
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:27:10
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:27:10
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:27:10
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:27:10
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:27:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:27:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:27:30
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomRight">
          <StartTime>
2021-10-04 13:27:30
</StartTime>
          <StartTime>
2021-10-04 13:27:30
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:27:30
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:27:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:27:31
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:27:31
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:27:31
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:27:31
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:27:31
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:27:31
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_LeftBottom">
    <StartTime>
2021-10-04 13:27:31
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:27:31
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:27:31
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_LeftBottom">
          <StartTime>
2021-10-04 13:27:31
</StartTime>
          <StartTime>
2021-10-04 13:27:31
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:27:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:28:01
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:28:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:28:01
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:28:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:28:08
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:28:08
</StartTime>
          <StartTime>
2021-10-04 13:28:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:28:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:28:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:28:08
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13280863.png
</ScreenShot>
          <EndTime>
2021-10-04 13:28:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:28:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:28:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:13
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:28:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:28:18
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:28:18
</StartTime>
          <StartTime>
2021-10-04 13:28:18
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:28:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:28:21
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:28:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:28:41
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:28:41
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:28:41
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:28:41
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:28:41
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:28:41
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:28:41
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:28:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:01
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_LeftBottom">
          <StartTime>
2021-10-04 13:29:01
</StartTime>
          <StartTime>
2021-10-04 13:29:01
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:29:01
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:29:01
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:29:01
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:29:01
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:29:01
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:29:01
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_BottomLeft">
    <StartTime>
2021-10-04 13:29:01
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:29:01
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:29:01
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomLeft">
          <StartTime>
2021-10-04 13:29:01
</StartTime>
          <StartTime>
2021-10-04 13:29:01
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:29:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:29:32
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:29:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:29:32
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:29:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:29:38
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:38
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:38
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:29:38
</StartTime>
          <StartTime>
2021-10-04 13:29:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:38
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:38
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:29:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:38
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:29:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:38
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:29:38
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13293903.png
</ScreenShot>
          <EndTime>
2021-10-04 13:29:39
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:29:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:29:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:44
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:29:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:29:49
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:29:49
</StartTime>
          <StartTime>
2021-10-04 13:29:49
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:29:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:29:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:29:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:30:11
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:30:11
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:30:11
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:30:11
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:30:11
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:30:11
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:30:11
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:30:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:30:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:30:31
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomLeft">
          <StartTime>
2021-10-04 13:30:31
</StartTime>
          <StartTime>
2021-10-04 13:30:31
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:30:31
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:30:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:30:32
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:30:32
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:30:32
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:30:32
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:30:32
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:30:32
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_RightBottom_Boder">
    <StartTime>
2021-10-04 13:30:32
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:30:32
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:30:32
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:30:32
</StartTime>
          <StartTime>
2021-10-04 13:30:32
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:30:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:31:02
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:31:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:31:02
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:31:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:31:08
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:08
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:08
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:31:08
</StartTime>
          <StartTime>
2021-10-04 13:31:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:08
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:31:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:31:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:31:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:09
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:31:09
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13310949.png
</ScreenShot>
          <EndTime>
2021-10-04 13:31:09
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:31:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:14
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:31:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:14
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:31:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:31:19
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:31:19
</StartTime>
          <StartTime>
2021-10-04 13:31:19
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:31:19
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:31:21
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:31:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:31:41
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:31:41
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:31:42
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:31:42
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:31:42
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:31:42
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:31:42
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:31:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:02
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:32:02
</StartTime>
          <StartTime>
2021-10-04 13:32:02
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:32:02
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:32:02
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:32:02
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:32:02
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:32:02
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:32:02
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_BottomRight_Boder">
    <StartTime>
2021-10-04 13:32:02
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:32:02
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:32:02
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:32:02
</StartTime>
          <StartTime>
2021-10-04 13:32:02
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:32:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:32:33
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:32:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:32:33
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:32:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:32:39
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:32:39
</StartTime>
          <StartTime>
2021-10-04 13:32:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:32:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:32:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:32:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:39
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:32:39
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13324000.png
</ScreenShot>
          <EndTime>
2021-10-04 13:32:40
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:32:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:45
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:32:45
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:45
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:32:45
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:32:50
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:32:50
</StartTime>
          <StartTime>
2021-10-04 13:32:50
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:32:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:32:52
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:32:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:33:12
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:33:12
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:33:12
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:33:12
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:33:12
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:33:12
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:33:12
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:33:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:33:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:33:32
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:33:32
</StartTime>
          <StartTime>
2021-10-04 13:33:32
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:33:32
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:33:32
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:33:32
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:33:32
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:33:32
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:33:32
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_LeftBottom_Boder">
    <StartTime>
2021-10-04 13:33:32
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:33:32
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:33:32
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:33:32
</StartTime>
          <StartTime>
2021-10-04 13:33:32
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:33:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:34:03
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:34:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:34:03
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:34:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:34:09
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:09
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:34:09
</StartTime>
          <StartTime>
2021-10-04 13:34:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:34:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:10
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:34:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:10
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:34:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:10
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:34:10
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13341044.png
</ScreenShot>
          <EndTime>
2021-10-04 13:34:10
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:34:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:15
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:34:15
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:15
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:34:15
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:34:20
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:34:20
</StartTime>
          <StartTime>
2021-10-04 13:34:20
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:34:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:34:22
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:34:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:34:42
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:34:42
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:34:42
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:34:42
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:34:42
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:34:42
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:34:42
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:34:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:35:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:02
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:35:02
</StartTime>
          <StartTime>
2021-10-04 13:35:03
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:35:03
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:35:03
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:35:03
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:35:03
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:35:03
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:35:03
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:9UP_BottomLeft_Boder">
    <StartTime>
2021-10-04 13:35:03
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:35:03
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:35:03
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:35:03
</StartTime>
          <StartTime>
2021-10-04 13:35:03
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:35:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:35:34
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:35:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:35:34
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:35:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:35:40
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13354096.png
</ScreenShot>
          <EndTime>
2021-10-04 13:35:40
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:35:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:46
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:35:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:46
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:35:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:35:51
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:35:51
</StartTime>
          <StartTime>
2021-10-04 13:35:51
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:35:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:35:53
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:35:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:36:13
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:36:13
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:36:13
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:36:13
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:36:13
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:36:13
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:36:13
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:36:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:36:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:36:33
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:36:33
</StartTime>
          <StartTime>
2021-10-04 13:36:33
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},9)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 9 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:36:33
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:36:33
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:36:33
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:36:33
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:36:33
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:36:33
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_RightBottom">
    <StartTime>
2021-10-04 13:36:33
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:36:33
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:36:33
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_RightBottom">
          <StartTime>
2021-10-04 13:36:33
</StartTime>
          <StartTime>
2021-10-04 13:36:33
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:36:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:37:04
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:37:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:37:04
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:37:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:37:10
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:10
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:10
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:37:10
</StartTime>
          <StartTime>
2021-10-04 13:37:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:10
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:10
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:37:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:37:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:11
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:37:11
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13371138.png
</ScreenShot>
          <EndTime>
2021-10-04 13:37:11
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:37:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:16
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:37:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:16
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:37:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:37:21
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:37:21
</StartTime>
          <StartTime>
2021-10-04 13:37:21
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:37:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:37:23
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:37:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:37:43
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:37:43
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:37:43
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:37:43
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:37:43
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:37:43
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:37:43
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:37:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:38:03
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:03
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:03
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_RightBottom">
          <StartTime>
2021-10-04 13:38:03
</StartTime>
          <StartTime>
2021-10-04 13:38:03
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:38:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:38:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:38:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:04
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:38:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:38:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:04
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:38:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:38:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:38:04
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:38:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:38:04
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:38:04
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:38:04
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:38:04
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:38:04
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:38:04
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_BottomRight">
    <StartTime>
2021-10-04 13:38:04
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:38:04
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:38:04
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomRight">
          <StartTime>
2021-10-04 13:38:04
</StartTime>
          <StartTime>
2021-10-04 13:38:04
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:38:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:38:35
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:38:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:38:35
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:38:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:38:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:38:41
</StartTime>
          <StartTime>
2021-10-04 13:38:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:38:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:38:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:38:41
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13384170.png
</ScreenShot>
          <EndTime>
2021-10-04 13:38:41
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:38:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:46
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:38:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:47
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:38:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:38:52
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:38:52
</StartTime>
          <StartTime>
2021-10-04 13:38:52
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:38:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:38:54
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:38:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:39:14
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:39:14
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:39:14
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:39:14
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:39:14
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:39:14
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:39:14
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:39:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:39:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:39:34
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomRight">
          <StartTime>
2021-10-04 13:39:34
</StartTime>
          <StartTime>
2021-10-04 13:39:34
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:39:34
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:39:34
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:39:34
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:39:34
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:39:34
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:39:34
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_LeftBottom">
    <StartTime>
2021-10-04 13:39:34
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:39:34
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:39:34
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_LeftBottom">
          <StartTime>
2021-10-04 13:39:34
</StartTime>
          <StartTime>
2021-10-04 13:39:34
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:39:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:40:05
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:40:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:40:05
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:40:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:40:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:11
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:40:11
</StartTime>
          <StartTime>
2021-10-04 13:40:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:40:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:40:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:11
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:40:11
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13401202.png
</ScreenShot>
          <EndTime>
2021-10-04 13:40:12
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:40:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:17
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:40:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:17
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:40:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:40:22
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:40:22
</StartTime>
          <StartTime>
2021-10-04 13:40:22
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:40:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:40:24
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:40:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:40:44
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:40:44
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:40:44
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:40:44
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:40:44
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:40:44
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:40:44
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:40:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:04
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_LeftBottom">
          <StartTime>
2021-10-04 13:41:04
</StartTime>
          <StartTime>
2021-10-04 13:41:04
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:41:04
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:41:04
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:41:04
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:41:04
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:41:04
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:41:04
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_BottomLeft">
    <StartTime>
2021-10-04 13:41:04
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:41:04
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:41:04
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomLeft">
          <StartTime>
2021-10-04 13:41:04
</StartTime>
          <StartTime>
2021-10-04 13:41:04
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:41:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:41:35
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:41:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:41:35
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:41:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:41:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:41
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:41:41
</StartTime>
          <StartTime>
2021-10-04 13:41:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:41
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:41:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:42
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:41:42
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:42
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:41:42
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13414234.png
</ScreenShot>
          <EndTime>
2021-10-04 13:41:42
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:41:42
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:47
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:41:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:47
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:41:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:41:52
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:41:52
</StartTime>
          <StartTime>
2021-10-04 13:41:52
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:41:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:41:54
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:41:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:42:14
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:42:14
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:42:14
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:42:14
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:42:14
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:42:14
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:42:14
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:42:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:42:34
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:42:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:42:34
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomLeft">
          <StartTime>
2021-10-04 13:42:34
</StartTime>
          <StartTime>
2021-10-04 13:42:34
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:42:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:42:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:42:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:42:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:42:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:42:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:35
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:42:35
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:35
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:42:35
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:35
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:42:35
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:42:35
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:42:35
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:42:35
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:42:35
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:42:35
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:42:35
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:42:35
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:42:35
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_RightBottom_Boder">
    <StartTime>
2021-10-04 13:42:35
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:42:35
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:42:35
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:42:35
</StartTime>
          <StartTime>
2021-10-04 13:42:35
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:42:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:43:06
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:43:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:43:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:43:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:43:12
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:12
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:12
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:43:12
</StartTime>
          <StartTime>
2021-10-04 13:43:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:12
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:12
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:43:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:12
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2021-10-04 13:43:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:12
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:43:12
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:13
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:43:13
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13431308.png
</ScreenShot>
          <EndTime>
2021-10-04 13:43:13
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:43:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:43:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:18
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:43:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:43:23
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:43:23
</StartTime>
          <StartTime>
2021-10-04 13:43:23
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:43:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:43:25
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:43:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:43:45
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:43:45
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:43:45
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:43:45
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:43:45
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:43:45
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:43:45
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:43:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:05
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:05
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_RightBottom_Boder">
          <StartTime>
2021-10-04 13:44:05
</StartTime>
          <StartTime>
2021-10-04 13:44:05
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:RightBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:44:05
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:44:05
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:44:06
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:44:06
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:44:06
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:44:06
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:44:06
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:44:06
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_BottomRight_Boder">
    <StartTime>
2021-10-04 13:44:06
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:44:06
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:44:06
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:44:06
</StartTime>
          <StartTime>
2021-10-04 13:44:06
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:44:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:44:36
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:44:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:44:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:44:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:44:42
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:42
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:42
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:44:42
</StartTime>
          <StartTime>
2021-10-04 13:44:42
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:42
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:42
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:44:42
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:43
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2021-10-04 13:44:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:43
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:44:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:43
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:44:43
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13444359.png
</ScreenShot>
          <EndTime>
2021-10-04 13:44:43
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:44:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:44:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:48
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:44:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:44:53
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:44:53
</StartTime>
          <StartTime>
2021-10-04 13:44:53
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:44:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:44:56
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:44:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:45:16
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:45:16
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:45:16
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:45:16
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:45:16
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:45:16
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:45:16
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:45:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:45:36
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:45:36
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomRight_Boder">
          <StartTime>
2021-10-04 13:45:36
</StartTime>
          <StartTime>
2021-10-04 13:45:36
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomRight)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomRight are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:45:36
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:45:36
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:45:36
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:45:36
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:45:36
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:45:36
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_LeftBottom_Boder">
    <StartTime>
2021-10-04 13:45:36
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:45:36
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:45:36
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:45:36
</StartTime>
          <StartTime>
2021-10-04 13:45:36
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:45:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:46:07
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:46:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:46:07
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:46:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:46:13
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:13
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:46:13
</StartTime>
          <StartTime>
2021-10-04 13:46:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:46:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2021-10-04 13:46:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:46:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:14
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:46:14
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13461415.png
</ScreenShot>
          <EndTime>
2021-10-04 13:46:14
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:46:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:19
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:46:19
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:19
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:46:19
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:46:24
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:46:24
</StartTime>
          <StartTime>
2021-10-04 13:46:24
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:46:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:46:26
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:46:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:46:46
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:46:46
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:46:46
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:46:46
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:46:46
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:46:46
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:46:46
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:46:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:06
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:06
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_LeftBottom_Boder">
          <StartTime>
2021-10-04 13:47:06
</StartTime>
          <StartTime>
2021-10-04 13:47:06
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:LeftBottom)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:LeftBottom are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:47:06
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:47:06
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:47:07
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:47:07
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:47:07
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:47:07
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:47:07
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:47:07
</EndTime>
  </TestCase>
  <TestCase Name="Pages per Sheet:16UP_BottomLeft_Boder">
    <StartTime>
2021-10-04 13:47:07
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:47:07
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:47:07
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:47:07
</StartTime>
          <StartTime>
2021-10-04 13:47:07
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:47:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:47:37
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:47:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:47:37
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:47:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:47:43
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:43
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:43
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:47:43
</StartTime>
          <StartTime>
2021-10-04 13:47:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:43
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:43
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2021-10-04 13:47:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2021-10-04 13:47:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2021-10-04 13:47:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:44
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:47:44
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13474467.png
</ScreenShot>
          <EndTime>
2021-10-04 13:47:44
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:47:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:49
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:47:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:49
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:47:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:47:54
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:47:54
</StartTime>
          <StartTime>
2021-10-04 13:47:54
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:47:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:47:57
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:47:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:48:17
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:48:17
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:48:17
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:48:17
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:48:17
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:48:17
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:48:17
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:48:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:48:37
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:48:37
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomLeft_Boder">
          <StartTime>
2021-10-04 13:48:37
</StartTime>
          <StartTime>
2021-10-04 13:48:37
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},16)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 16 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:BottomLeft)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:BottomLeft are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:48:37
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:48:37
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:48:37
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:48:37
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:48:37
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:48:37
</EndTime>
  </TestCase>
  <TestCase Name="Print Quality:Normal">
    <StartTime>
2021-10-04 13:48:37
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:48:37
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:48:37
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Normal">
          <StartTime>
2021-10-04 13:48:37
</StartTime>
          <StartTime>
2021-10-04 13:48:37
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Normal.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:48:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:49:08
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:49:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:49:08
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:49:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:49:08
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:49:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:49:14
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:14
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:14
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:49:14
</StartTime>
          <StartTime>
2021-10-04 13:49:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:14
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:14
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobUserResolution,Option.HPS_Normal)">
          <StartTime>
2021-10-04 13:49:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:14
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:49:14
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13491488.png
</ScreenShot>
          <EndTime>
2021-10-04 13:49:14
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:49:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:19
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:49:19
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:20
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:49:20
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:49:25
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:49:25
</StartTime>
          <StartTime>
2021-10-04 13:49:25
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:49:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:49:27
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:49:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:49:47
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:49:47
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:49:47
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:49:47
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:49:47
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:49:47
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:49:47
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:49:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:07
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Normal">
          <StartTime>
2021-10-04 13:50:07
</StartTime>
          <StartTime>
2021-10-04 13:50:07
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobUserResolution']/psf:Option,name)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:HPS_Normal)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:HPS_Normal are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:50:07
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:50:07
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:50:07
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:50:07
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:50:07
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:50:07
</EndTime>
  </TestCase>
  <TestCase Name="Print Quality:Economode">
    <StartTime>
2021-10-04 13:50:07
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:50:07
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:50:07
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_PQEconomode">
          <StartTime>
2021-10-04 13:50:07
</StartTime>
          <StartTime>
2021-10-04 13:50:07
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_PQEconomode.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:50:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:50:38
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:50:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:50:38
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:50:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:50:38
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:50:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:50:44
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:44
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:44
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:50:44
</StartTime>
          <StartTime>
2021-10-04 13:50:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:44
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobUserResolution,Option.PQEconomode)">
          <StartTime>
2021-10-04 13:50:44
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.JobUserResolution - Option.PQEconomode
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_13504710.png
</ScreenShot>
          <EndTime>
2021-10-04 13:50:47
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:50:47
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13504717.png
</ScreenShot>
          <EndTime>
2021-10-04 13:50:47
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:50:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:52
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:50:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:52
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:50:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:50:57
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:50:57
</StartTime>
          <StartTime>
2021-10-04 13:50:57
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:50:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:50:59
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:50:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:51:19
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:51:19
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:51:19
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:51:19
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:51:19
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:51:19
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:51:19
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:51:19
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:51:39
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:51:39
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:51:39
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_PQEconomode">
          <StartTime>
2021-10-04 13:51:39
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Can not find specified keyword
</ErrorDescription>
          <EndTime>
2021-10-04 13:51:39
</EndTime>
        </Statement>
        <Result>
ERROR
</Result>
        <EndTime>
2021-10-04 13:51:39
</EndTime>
      </Loop>
      <Result>
ERROR
</Result>
      <EndTime>
2021-10-04 13:51:39
</EndTime>
    </Repeat>
    <Result>
ERROR
</Result>
    <EndTime>
2021-10-04 13:51:39
</EndTime>
  </TestCase>
  <TestCase Name="Copy Count:2">
    <StartTime>
2021-10-04 13:51:39
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:51:39
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:51:39
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Copies_2">
          <StartTime>
2021-10-04 13:51:39
</StartTime>
          <StartTime>
2021-10-04 13:51:39
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Copies_2.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:51:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:52:10
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:52:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:52:10
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:52:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:52:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:52:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:52:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:16
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:52:16
</StartTime>
          <StartTime>
2021-10-04 13:52:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:16
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,2)">
          <StartTime>
2021-10-04 13:52:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:17
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:52:17
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13521717.png
</ScreenShot>
          <EndTime>
2021-10-04 13:52:17
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:52:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:22
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:52:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:22
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:52:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:52:27
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:52:27
</StartTime>
          <StartTime>
2021-10-04 13:52:27
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:52:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:52:29
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:52:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:52:49
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:52:49
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:52:49
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:52:49
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:52:49
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:52:49
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:52:49
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:52:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:53:09
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:09
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Copies_2">
          <StartTime>
2021-10-04 13:53:09
</StartTime>
          <StartTime>
2021-10-04 13:53:09
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:53:09
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:53:09
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:JobCopiesAllDocuments']/psf:Value)">
            <StartTime>
2021-10-04 13:53:09
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:53:09
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},2)">
            <StartTime>
2021-10-04 13:53:09
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 2 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:53:09
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:53:09
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:53:10
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:53:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:53:10
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:53:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:53:10
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:53:10
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:53:10
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:53:10
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:53:10
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:53:10
</EndTime>
  </TestCase>
  <TestCase Name="Copy Count:4">
    <StartTime>
2021-10-04 13:53:10
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:53:10
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:53:10
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Copies_4">
          <StartTime>
2021-10-04 13:53:10
</StartTime>
          <StartTime>
2021-10-04 13:53:10
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Copies_4.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:53:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:53:41
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:53:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:53:41
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:53:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:53:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:53:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:53:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:47
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:53:47
</StartTime>
          <StartTime>
2021-10-04 13:53:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:47
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,4)">
          <StartTime>
2021-10-04 13:53:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:47
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:53:47
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13534735.png
</ScreenShot>
          <EndTime>
2021-10-04 13:53:47
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:53:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:52
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:53:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:52
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:53:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:53:57
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:53:57
</StartTime>
          <StartTime>
2021-10-04 13:53:57
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:53:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:53:59
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:53:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:54:19
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:54:19
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:54:19
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:54:19
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:54:19
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:54:19
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:54:19
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:54:19
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:54:40
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:54:40
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Copies_4">
          <StartTime>
2021-10-04 13:54:40
</StartTime>
          <StartTime>
2021-10-04 13:54:40
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:JobCopiesAllDocuments']/psf:Value)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:54:40
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:54:40
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:54:40
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:54:40
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:54:40
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:54:40
</EndTime>
  </TestCase>
  <TestCase Name="Copy Count:6">
    <StartTime>
2021-10-04 13:54:40
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:54:40
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:54:40
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Copies_6">
          <StartTime>
2021-10-04 13:54:40
</StartTime>
          <StartTime>
2021-10-04 13:54:40
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Copies_6.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:54:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:55:11
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:55:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:55:11
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:55:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:55:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:55:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:55:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:17
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:55:17
</StartTime>
          <StartTime>
2021-10-04 13:55:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:17
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,6)">
          <StartTime>
2021-10-04 13:55:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:17
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:55:17
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13551745.png
</ScreenShot>
          <EndTime>
2021-10-04 13:55:17
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:55:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:22
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:55:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:22
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:55:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:55:27
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:55:27
</StartTime>
          <StartTime>
2021-10-04 13:55:27
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:55:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:55:29
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:55:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:55:50
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:55:50
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:55:50
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:55:50
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:55:50
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:55:50
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:55:50
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:55:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:10
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:10
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Copies_6">
          <StartTime>
2021-10-04 13:56:10
</StartTime>
          <StartTime>
2021-10-04 13:56:10
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:JobCopiesAllDocuments']/psf:Value)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},6)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and 6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:56:10
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:56:10
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:56:10
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:56:10
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:56:10
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:56:10
</EndTime>
  </TestCase>
  <TestCase Name="Collate:On">
    <StartTime>
2021-10-04 13:56:10
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:56:10
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:56:10
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Collate_On">
          <StartTime>
2021-10-04 13:56:10
</StartTime>
          <StartTime>
2021-10-04 13:56:10
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Collate_On.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:56:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:56:41
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:56:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:56:41
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:56:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:56:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:56:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:56:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:47
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:56:47
</StartTime>
          <StartTime>
2021-10-04 13:56:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:47
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,2)">
          <StartTime>
2021-10-04 13:56:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:47
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:56:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:52
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle (Part.DocumentCollate,On)">
          <StartTime>
2021-10-04 13:56:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:52
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:56:52
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13565267.png
</ScreenShot>
          <EndTime>
2021-10-04 13:56:52
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:56:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:56:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:56:57
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:56:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:57:02
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:57:02
</StartTime>
          <StartTime>
2021-10-04 13:57:03
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:57:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:57:05
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:57:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:57:25
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:57:25
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:57:25
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:57:25
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:57:25
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:57:25
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:57:25
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:57:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:57:45
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:57:45
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Collated">
          <StartTime>
2021-10-04 13:57:45
</StartTime>
          <StartTime>
2021-10-04 13:57:45
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:DocumentCollate']/psf:Option,name)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Collated)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Collated are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:57:45
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:57:45
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:57:45
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:57:45
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:57:45
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:57:45
</EndTime>
  </TestCase>
  <TestCase Name="Collate:Off">
    <StartTime>
2021-10-04 13:57:45
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:57:45
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:57:45
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Collate_Off">
          <StartTime>
2021-10-04 13:57:45
</StartTime>
          <StartTime>
2021-10-04 13:57:45
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Collate_Off.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:57:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:58:16
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:58:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:58:16
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:58:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:58:16
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:58:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:58:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:22
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:58:22
</StartTime>
          <StartTime>
2021-10-04 13:58:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:22
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,2)">
          <StartTime>
2021-10-04 13:58:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:22
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:58:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle (Part.DocumentCollate,Off)">
          <StartTime>
2021-10-04 13:58:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:27
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:58:27
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13582791.png
</ScreenShot>
          <EndTime>
2021-10-04 13:58:27
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:58:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 13:58:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:33
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:58:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:58:38
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 13:58:38
</StartTime>
          <StartTime>
2021-10-04 13:58:38
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 13:58:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:58:40
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:58:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:59:00
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 13:59:00
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 13:59:00
</StartTime>
              <Block>
                <StartTime>
2021-10-04 13:59:00
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 13:59:00
</EndTime>
              </Block>
              <EndTime>
2021-10-04 13:59:00
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 13:59:00
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 13:59:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:20
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_UnCollated">
          <StartTime>
2021-10-04 13:59:20
</StartTime>
          <StartTime>
2021-10-04 13:59:20
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:DocumentCollate']/psf:Option,name)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Uncollated)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Uncollated are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 13:59:20
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:59:20
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 13:59:20
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 13:59:20
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 13:59:20
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 13:59:20
</EndTime>
  </TestCase>
  <TestCase Name="Orientation:Landscape">
    <StartTime>
2021-10-04 13:59:20
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 13:59:20
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 13:59:20
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Landscape">
          <StartTime>
2021-10-04 13:59:20
</StartTime>
          <StartTime>
2021-10-04 13:59:20
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Landscape.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 13:59:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:59:51
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 13:59:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:59:51
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 13:59:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:59:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 13:59:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 13:59:57
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:57
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 13:59:57
</StartTime>
          <StartTime>
2021-10-04 13:59:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Radio (Option.Landscape)">
          <StartTime>
2021-10-04 13:59:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 13:59:57
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 13:59:57
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_13595802.png
</ScreenShot>
          <EndTime>
2021-10-04 13:59:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 13:59:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:00:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:00:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:00:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:00:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:00:08
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:00:08
</StartTime>
          <StartTime>
2021-10-04 14:00:08
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:00:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:00:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:00:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:00:30
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:00:30
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:00:30
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:00:30
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:00:30
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:00:30
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:00:30
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:00:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:00:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:00:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:00:50
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Landscape">
          <StartTime>
2021-10-04 14:00:50
</StartTime>
          <StartTime>
2021-10-04 14:00:50
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:00:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:00:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageOrientation']/psf:Option,name)">
            <StartTime>
2021-10-04 14:00:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:00:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Landscape)">
            <StartTime>
2021-10-04 14:00:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Landscape are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:00:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:00:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:00:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:00:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:00:50
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:00:50
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:00:51
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:00:51
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:00:51
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:00:51
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:00:51
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:00:51
</EndTime>
  </TestCase>
  <TestCase Name="Orientation:Portrait">
    <StartTime>
2021-10-04 14:00:51
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:00:51
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:00:51
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Portrait">
          <StartTime>
2021-10-04 14:00:51
</StartTime>
          <StartTime>
2021-10-04 14:00:51
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Portrait.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:00:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:01:21
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:01:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:01:21
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:01:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:01:21
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:01:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:01:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:27
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:01:27
</StartTime>
          <StartTime>
2021-10-04 14:01:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:28
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Radio (Option.Portrait)">
          <StartTime>
2021-10-04 14:01:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:28
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:01:28
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14012815.png
</ScreenShot>
          <EndTime>
2021-10-04 14:01:28
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:01:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:01:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:33
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:01:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:01:38
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:01:38
</StartTime>
          <StartTime>
2021-10-04 14:01:38
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:01:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:01:40
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:01:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:02:00
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:02:00
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:02:00
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:02:00
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:02:00
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:02:00
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:02:00
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:02:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:02:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:20
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Portrait">
          <StartTime>
2021-10-04 14:02:20
</StartTime>
          <StartTime>
2021-10-04 14:02:20
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:02:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:02:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageOrientation']/psf:Option,name)">
            <StartTime>
2021-10-04 14:02:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:02:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Portrait)">
            <StartTime>
2021-10-04 14:02:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Portrait are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:02:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:02:20
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:02:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:02:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:02:20
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:02:20
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:02:21
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:02:21
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:02:21
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:02:21
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:02:21
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:02:21
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Letter                                   /Remote Support">
    <StartTime>
2021-10-04 14:02:21
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:02:21
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:02:21
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Letter">
          <StartTime>
2021-10-04 14:02:21
</StartTime>
          <StartTime>
2021-10-04 14:02:21
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Letter.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:02:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:02:51
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:02:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:02:51
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:02:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:02:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:02:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:02:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:58
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:02:58
</StartTime>
          <StartTime>
2021-10-04 14:02:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.NorthAmericaLetter)">
          <StartTime>
2021-10-04 14:02:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:02:58
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:02:58
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14025844.png
</ScreenShot>
          <EndTime>
2021-10-04 14:02:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:02:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:03:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:03:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:03:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:03:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:03:08
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:03:08
</StartTime>
          <StartTime>
2021-10-04 14:03:08
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:03:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:03:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:03:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:03:31
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:03:31
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:03:31
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:03:31
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:03:31
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:03:31
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:03:31
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:03:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:03:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:03:51
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_NorthAmericaLetter">
          <StartTime>
2021-10-04 14:03:51
</StartTime>
          <StartTime>
2021-10-04 14:03:51
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:NorthAmericaLetter)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:NorthAmericaLetter are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:03:51
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:03:51
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:03:51
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:03:51
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:03:51
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:03:51
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Legal">
    <StartTime>
2021-10-04 14:03:51
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:03:51
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:03:51
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Legal">
          <StartTime>
2021-10-04 14:03:51
</StartTime>
          <StartTime>
2021-10-04 14:03:51
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Legal.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:03:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:04:22
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:04:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:04:22
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:04:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:04:22
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:04:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:04:28
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:28
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:28
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:04:28
</StartTime>
          <StartTime>
2021-10-04 14:04:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:28
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.NorthAmericaLegal)">
          <StartTime>
2021-10-04 14:04:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:28
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:04:28
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14042880.png
</ScreenShot>
          <EndTime>
2021-10-04 14:04:28
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:04:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:04:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:34
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:04:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:04:39
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:04:39
</StartTime>
          <StartTime>
2021-10-04 14:04:39
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:04:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:04:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:04:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:05:01
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:05:01
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:05:01
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:05:01
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:05:01
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:05:01
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:05:01
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:05:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:21
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:21
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_NorthAmericaLegal">
          <StartTime>
2021-10-04 14:05:21
</StartTime>
          <StartTime>
2021-10-04 14:05:21
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:NorthAmericaLegal)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:NorthAmericaLegal are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:05:21
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:05:21
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:05:21
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:05:21
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:05:21
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:05:21
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Executive">
    <StartTime>
2021-10-04 14:05:21
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:05:21
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:05:21
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Executive">
          <StartTime>
2021-10-04 14:05:21
</StartTime>
          <StartTime>
2021-10-04 14:05:21
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Excutive.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:05:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:05:52
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:05:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:05:52
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:05:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:05:52
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:05:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:05:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:58
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:05:58
</StartTime>
          <StartTime>
2021-10-04 14:05:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.NorthAmericaExecutive)">
          <StartTime>
2021-10-04 14:05:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:05:59
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:05:59
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14055908.png
</ScreenShot>
          <EndTime>
2021-10-04 14:05:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:05:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:06:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:06:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:06:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:06:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:06:09
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:06:09
</StartTime>
          <StartTime>
2021-10-04 14:06:09
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:06:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:06:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:06:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:06:31
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:06:31
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:06:31
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:06:31
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:06:31
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:06:31
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:06:31
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:06:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:06:51
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:06:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:06:51
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_NorthAmericaExecutive">
          <StartTime>
2021-10-04 14:06:51
</StartTime>
          <StartTime>
2021-10-04 14:06:51
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:06:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:06:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:06:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:06:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:NorthAmericaExecutive)">
            <StartTime>
2021-10-04 14:06:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:NorthAmericaExecutive are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:06:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:06:51
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:06:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:06:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:06:51
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:06:51
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:06:52
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:06:52
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:06:52
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:06:52
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:06:52
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:06:52
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:A4                                        /Remote Support">
    <StartTime>
2021-10-04 14:06:52
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:06:52
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:06:52
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_A4">
          <StartTime>
2021-10-04 14:06:52
</StartTime>
          <StartTime>
2021-10-04 14:06:52
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC A4.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:06:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:07:22
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:07:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:07:22
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:07:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:07:23
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:07:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:07:29
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:29
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:29
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:07:29
</StartTime>
          <StartTime>
2021-10-04 14:07:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:29
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISOA4)">
          <StartTime>
2021-10-04 14:07:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:29
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:07:29
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14072948.png
</ScreenShot>
          <EndTime>
2021-10-04 14:07:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:07:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:07:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:34
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:07:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:07:39
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:07:39
</StartTime>
          <StartTime>
2021-10-04 14:07:39
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:07:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:07:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:07:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:08:02
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:08:02
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:08:02
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:08:02
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:08:02
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:08:02
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:08:02
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:08:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:08:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:08:22
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISOA4">
          <StartTime>
2021-10-04 14:08:22
</StartTime>
          <StartTime>
2021-10-04 14:08:22
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISOA4)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISOA4 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:08:22
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:08:22
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:08:22
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:08:22
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:08:22
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:08:22
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:A5">
    <StartTime>
2021-10-04 14:08:22
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:08:22
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:08:22
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_A5">
          <StartTime>
2021-10-04 14:08:22
</StartTime>
          <StartTime>
2021-10-04 14:08:22
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC A5.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:08:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:08:53
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:08:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:08:53
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:08:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:08:53
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:08:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:08:59
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:08:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:08:59
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:08:59
</StartTime>
          <StartTime>
2021-10-04 14:08:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:08:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:08:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISOA5)">
          <StartTime>
2021-10-04 14:08:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:09:00
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:09:00
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14090022.png
</ScreenShot>
          <EndTime>
2021-10-04 14:09:00
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:09:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:09:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:09:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:09:05
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:09:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:09:10
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:09:10
</StartTime>
          <StartTime>
2021-10-04 14:09:10
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:09:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:09:12
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:09:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:09:32
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:09:32
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:09:32
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:09:32
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:09:32
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:09:32
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:09:32
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:09:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:09:52
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:09:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:09:52
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISOA5">
          <StartTime>
2021-10-04 14:09:52
</StartTime>
          <StartTime>
2021-10-04 14:09:52
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:09:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:09:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:09:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:09:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISOA5)">
            <StartTime>
2021-10-04 14:09:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISOA5 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:09:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:09:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:09:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:09:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:09:53
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:09:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:09:53
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:09:53
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:09:53
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:09:53
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:09:53
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:09:53
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:B5(JIS)">
    <StartTime>
2021-10-04 14:09:53
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:09:53
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:09:53
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_B5_JIS">
          <StartTime>
2021-10-04 14:09:53
</StartTime>
          <StartTime>
2021-10-04 14:09:53
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC B5_JIS.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:09:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:10:24
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:10:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:10:24
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:10:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:10:24
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:10:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:10:30
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:30
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:10:30
</StartTime>
          <StartTime>
2021-10-04 14:10:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.JISB5)">
          <StartTime>
2021-10-04 14:10:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:30
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:10:30
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14103060.png
</ScreenShot>
          <EndTime>
2021-10-04 14:10:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:10:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:10:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:35
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:10:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:10:40
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:10:40
</StartTime>
          <StartTime>
2021-10-04 14:10:40
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:10:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:10:43
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:10:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:11:03
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:11:03
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:11:03
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:11:03
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:11:03
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:11:03
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:11:03
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:11:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:11:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:11:23
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JISB5">
          <StartTime>
2021-10-04 14:11:23
</StartTime>
          <StartTime>
2021-10-04 14:11:23
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:JISB5)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:JISB5 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:11:23
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:11:23
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:11:23
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:11:23
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:11:23
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:11:23
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Envelope #10">
    <StartTime>
2021-10-04 14:11:23
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:11:23
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:11:23
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelope_10">
          <StartTime>
2021-10-04 14:11:23
</StartTime>
          <StartTime>
2021-10-04 14:11:23
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Envelope_10.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:11:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:11:54
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:11:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:11:54
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:11:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:11:54
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:11:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:12:00
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:00
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:12:00
</StartTime>
          <StartTime>
2021-10-04 14:12:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.NorthAmericaNumber10Envelope)">
          <StartTime>
2021-10-04 14:12:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:00
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:12:00
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14120093.png
</ScreenShot>
          <EndTime>
2021-10-04 14:12:00
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:12:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:12:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:06
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:12:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:12:11
</StartTime>
          <StartTime>
2021-10-04 14:12:11
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:12:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:12:13
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:12:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:12:33
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:12:33
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:12:33
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:12:33
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:12:33
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:12:33
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:12:33
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:12:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:12:53
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_NorthAmericaNumber10Envelope">
          <StartTime>
2021-10-04 14:12:53
</StartTime>
          <StartTime>
2021-10-04 14:12:53
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:NorthAmericaNumber10Envelope)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:NorthAmericaNumber10Envelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:12:53
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:12:53
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:12:53
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:12:53
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:12:53
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:12:53
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Envelope DL">
    <StartTime>
2021-10-04 14:12:53
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:12:53
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:12:53
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelope_DL">
          <StartTime>
2021-10-04 14:12:53
</StartTime>
          <StartTime>
2021-10-04 14:12:53
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Envelope_DL.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:12:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:13:24
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:13:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:13:24
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:13:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:13:24
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:13:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:13:30
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:30
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:13:30
</StartTime>
          <StartTime>
2021-10-04 14:13:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISODLEnvelope)">
          <StartTime>
2021-10-04 14:13:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:31
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:13:31
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14133130.png
</ScreenShot>
          <EndTime>
2021-10-04 14:13:31
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:13:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:36
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:13:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:36
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:13:36
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:13:41
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:13:41
</StartTime>
          <StartTime>
2021-10-04 14:13:41
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:13:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:13:43
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:13:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:14:03
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:14:03
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:14:03
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:14:03
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:14:03
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:14:03
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:14:03
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:14:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:14:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:14:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:14:23
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISODLEnvelope">
          <StartTime>
2021-10-04 14:14:23
</StartTime>
          <StartTime>
2021-10-04 14:14:23
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:14:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:14:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:14:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:14:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISODLEnvelope)">
            <StartTime>
2021-10-04 14:14:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISODLEnvelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:14:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:14:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:14:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:14:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:14:24
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:14:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:14:24
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:14:24
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:14:24
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:14:24
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:14:24
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:14:24
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Envelope C5">
    <StartTime>
2021-10-04 14:14:24
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:14:24
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:14:24
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelope_C5">
          <StartTime>
2021-10-04 14:14:24
</StartTime>
          <StartTime>
2021-10-04 14:14:24
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Envelope_C5.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:14:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:14:55
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:14:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:14:55
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:14:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:14:55
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:14:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:15:01
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:01
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:15:01
</StartTime>
          <StartTime>
2021-10-04 14:15:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISOC5Envelope)">
          <StartTime>
2021-10-04 14:15:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:01
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:15:01
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14150167.png
</ScreenShot>
          <EndTime>
2021-10-04 14:15:01
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:15:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:06
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:15:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:06
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:15:06
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:12
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:15:12
</StartTime>
          <StartTime>
2021-10-04 14:15:12
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:15:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:15:14
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:15:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:15:34
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:15:34
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:15:34
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:15:34
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:15:34
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:15:34
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:15:34
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:15:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:15:54
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISOC5Envelope">
          <StartTime>
2021-10-04 14:15:54
</StartTime>
          <StartTime>
2021-10-04 14:15:54
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISOC5Envelope)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISOC5Envelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:15:54
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:15:54
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:15:54
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:15:54
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:15:54
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:15:54
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Envelope C6">
    <StartTime>
2021-10-04 14:15:54
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:15:54
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:15:54
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelope_C6">
          <StartTime>
2021-10-04 14:15:54
</StartTime>
          <StartTime>
2021-10-04 14:15:54
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Envelope_C6.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:15:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:16:25
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:16:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:16:25
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:16:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:16:25
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:16:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:16:31
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:31
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:16:31
</StartTime>
          <StartTime>
2021-10-04 14:16:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:31
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISOC6Envelope)">
          <StartTime>
2021-10-04 14:16:31
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:32
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:16:32
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14163208.png
</ScreenShot>
          <EndTime>
2021-10-04 14:16:32
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:16:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:16:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:37
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:16:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:16:42
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:16:42
</StartTime>
          <StartTime>
2021-10-04 14:16:42
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:16:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:16:44
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:16:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:17:04
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:17:04
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:17:04
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:17:04
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:17:04
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:17:04
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:17:04
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:17:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:17:24
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:17:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:17:24
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISOC6Envelope">
          <StartTime>
2021-10-04 14:17:24
</StartTime>
          <StartTime>
2021-10-04 14:17:24
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:17:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:17:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:17:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:17:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISOC6Envelope)">
            <StartTime>
2021-10-04 14:17:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISOC6Envelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:17:24
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:17:24
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:17:24
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:17:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:17:24
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:17:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:17:25
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:17:25
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:17:25
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:17:25
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:17:25
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:17:25
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Envelope B5">
    <StartTime>
2021-10-04 14:17:25
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:17:25
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:17:25
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelope_B5">
          <StartTime>
2021-10-04 14:17:25
</StartTime>
          <StartTime>
2021-10-04 14:17:25
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Envelope_B5.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:17:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:17:55
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:17:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:17:56
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:17:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:17:56
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:17:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:18:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:02
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:18:02
</StartTime>
          <StartTime>
2021-10-04 14:18:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISOB5Envelope)">
          <StartTime>
2021-10-04 14:18:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:02
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:18:02
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14180251.png
</ScreenShot>
          <EndTime>
2021-10-04 14:18:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:18:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:18:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:07
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:18:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:12
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:18:12
</StartTime>
          <StartTime>
2021-10-04 14:18:12
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:18:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:18:15
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:18:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:18:35
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:18:35
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:18:35
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:18:35
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:18:35
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:18:35
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:18:35
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:18:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:18:55
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISOB5Envelope">
          <StartTime>
2021-10-04 14:18:55
</StartTime>
          <StartTime>
2021-10-04 14:18:55
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISOB5Envelope)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISOB5Envelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:18:55
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:18:55
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:18:55
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:18:55
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:18:55
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:18:55
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Japanese Postcard               /Remote Support">
    <StartTime>
2021-10-04 14:18:55
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:18:55
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:18:55
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Japanese_Postcard">
          <StartTime>
2021-10-04 14:18:55
</StartTime>
          <StartTime>
2021-10-04 14:18:55
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Japanese_Postcard.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:18:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:19:26
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:19:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:19:26
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:19:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:19:26
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:19:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:19:32
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:32
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:19:32
</StartTime>
          <StartTime>
2021-10-04 14:19:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.JapanHagakiPostcard)">
          <StartTime>
2021-10-04 14:19:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:32
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:19:32
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14193290.png
</ScreenShot>
          <EndTime>
2021-10-04 14:19:32
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:19:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:37
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:19:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:38
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:19:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:19:43
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:19:43
</StartTime>
          <StartTime>
2021-10-04 14:19:43
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:19:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:19:45
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:19:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:20:05
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:20:05
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:20:05
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:20:05
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:20:05
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:20:05
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:20:05
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:20:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:20:25
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:20:25
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JapanHagakiPostcard">
          <StartTime>
2021-10-04 14:20:25
</StartTime>
          <StartTime>
2021-10-04 14:20:25
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:JapanHagakiPostcard)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:JapanHagakiPostcard are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:20:25
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:20:25
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:20:25
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:20:25
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:20:25
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:20:25
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:A6                                         /Remote Support">
    <StartTime>
2021-10-04 14:20:25
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:20:25
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:20:25
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_A6">
          <StartTime>
2021-10-04 14:20:25
</StartTime>
          <StartTime>
2021-10-04 14:20:25
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC A6.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:20:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:20:56
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:20:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:20:56
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:20:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:20:56
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:20:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:21:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:02
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:21:02
</StartTime>
          <StartTime>
2021-10-04 14:21:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ISOA6)">
          <StartTime>
2021-10-04 14:21:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:03
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:21:03
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14210310.png
</ScreenShot>
          <EndTime>
2021-10-04 14:21:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:21:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:21:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:21:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:13
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:21:13
</StartTime>
          <StartTime>
2021-10-04 14:21:13
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:21:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:21:15
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:21:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:21:35
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:21:35
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:21:35
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:21:35
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:21:35
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:21:35
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:21:35
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:21:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:21:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:21:55
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ISOA6">
          <StartTime>
2021-10-04 14:21:55
</StartTime>
          <StartTime>
2021-10-04 14:21:55
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:21:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:21:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:21:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:21:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:ISOA6)">
            <StartTime>
2021-10-04 14:21:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:ISOA6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:21:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:21:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:21:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:21:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:21:55
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:21:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:21:56
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:21:56
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:21:56
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:21:56
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:21:56
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:21:56
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Japanese Envelope Chou #3">
    <StartTime>
2021-10-04 14:21:56
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:21:56
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:21:56
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Japanese_Envelope_Chou_3">
          <StartTime>
2021-10-04 14:21:56
</StartTime>
          <StartTime>
2021-10-04 14:21:56
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Japanese_Envelope_Chou_3.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:21:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:22:26
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:22:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:22:26
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:22:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:22:26
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:22:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:22:32
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:32
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:22:32
</StartTime>
          <StartTime>
2021-10-04 14:22:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.JapanChou3Envelope)">
          <StartTime>
2021-10-04 14:22:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:33
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:22:33
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14223342.png
</ScreenShot>
          <EndTime>
2021-10-04 14:22:33
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:22:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:38
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:22:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:38
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:22:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:22:43
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:22:43
</StartTime>
          <StartTime>
2021-10-04 14:22:43
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:22:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:22:45
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:22:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:23:06
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:23:06
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:23:06
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:23:06
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:23:06
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:23:06
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:23:06
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:23:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:23:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:23:26
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JapanChou3Envelope">
          <StartTime>
2021-10-04 14:23:26
</StartTime>
          <StartTime>
2021-10-04 14:23:26
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:JapanChou3Envelope)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:JapanChou3Envelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:23:26
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:23:26
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:23:26
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:23:26
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:23:26
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:23:26
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Japanese Envelope Chou #4">
    <StartTime>
2021-10-04 14:23:26
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:23:26
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:23:26
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Japanese_Envelope_Chou_4">
          <StartTime>
2021-10-04 14:23:26
</StartTime>
          <StartTime>
2021-10-04 14:23:26
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Japanese_Envelope_Chou_4.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:23:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:23:57
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:23:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:23:57
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:23:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:23:57
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:23:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:24:03
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:03
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:03
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:24:03
</StartTime>
          <StartTime>
2021-10-04 14:24:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:03
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.JapanChou4Envelope)">
          <StartTime>
2021-10-04 14:24:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:03
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:24:03
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14240377.png
</ScreenShot>
          <EndTime>
2021-10-04 14:24:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:24:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:24:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:09
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:24:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:14
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:24:14
</StartTime>
          <StartTime>
2021-10-04 14:24:14
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:24:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:24:16
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:24:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:24:36
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:24:36
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:24:36
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:24:36
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:24:36
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:24:36
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:24:36
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:24:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:24:56
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JapanChou4Envelope">
          <StartTime>
2021-10-04 14:24:56
</StartTime>
          <StartTime>
2021-10-04 14:24:56
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:JapanChou4Envelope)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:JapanChou4Envelope are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:24:56
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:24:56
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:24:56
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:24:56
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:24:56
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:24:56
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Double Japan Postcard Rotated">
    <StartTime>
2021-10-04 14:24:56
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:24:56
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:24:56
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Double_Japan_Postcard_Rotated">
          <StartTime>
2021-10-04 14:24:56
</StartTime>
          <StartTime>
2021-10-04 14:24:56
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Double_Japan_Postcard_Rotated.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:24:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:25:27
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:25:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:25:27
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:25:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:25:27
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:25:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:25:33
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:33
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:25:33
</StartTime>
          <StartTime>
2021-10-04 14:25:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:33
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.JapanDoubleHagakiPostcardRotated)">
          <StartTime>
2021-10-04 14:25:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:34
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:25:34
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14253417.png
</ScreenShot>
          <EndTime>
2021-10-04 14:25:34
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:25:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:39
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:25:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:39
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:25:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:25:44
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:25:44
</StartTime>
          <StartTime>
2021-10-04 14:25:44
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:25:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:25:46
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:25:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:26:06
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:26:06
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:26:06
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:26:06
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:26:06
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:26:06
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:26:06
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:26:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:26:26
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:26:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:26:26
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JapanDoubleHagakiPostcardRotated">
          <StartTime>
2021-10-04 14:26:26
</StartTime>
          <StartTime>
2021-10-04 14:26:26
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:26:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:26:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:26:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:26:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:JapanDoubleHagakiPostcardRotated)">
            <StartTime>
2021-10-04 14:26:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:JapanDoubleHagakiPostcardRotated are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:26:26
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:26:26
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:26:26
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:26:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:26:26
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:26:26
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:26:27
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:26:27
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:26:27
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:26:27
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:26:27
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:26:27
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:JISB6">
    <StartTime>
2021-10-04 14:26:27
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:26:27
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:26:27
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_JISB6">
          <StartTime>
2021-10-04 14:26:27
</StartTime>
          <StartTime>
2021-10-04 14:26:27
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC JISB6.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:26:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:26:57
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:26:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:26:58
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:26:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:26:58
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:26:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:27:04
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:04
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:27:04
</StartTime>
          <StartTime>
2021-10-04 14:27:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.JISB6)">
          <StartTime>
2021-10-04 14:27:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:04
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:27:04
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14270451.png
</ScreenShot>
          <EndTime>
2021-10-04 14:27:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:27:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:27:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:09
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:27:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:14
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:27:14
</StartTime>
          <StartTime>
2021-10-04 14:27:14
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:27:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:27:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:27:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:27:37
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:27:37
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:27:37
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:27:37
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:27:37
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:27:37
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:27:37
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:27:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:27:57
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JISB6">
          <StartTime>
2021-10-04 14:27:57
</StartTime>
          <StartTime>
2021-10-04 14:27:57
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:JISB6)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:JISB6 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:27:57
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:27:57
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:27:57
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:27:57
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:27:57
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:27:57
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Oficio 8.5x13">
    <StartTime>
2021-10-04 14:27:57
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:27:57
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:27:57
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Oficio_8_5x13">
          <StartTime>
2021-10-04 14:27:57
</StartTime>
          <StartTime>
2021-10-04 14:27:57
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC Oficio_8_5x13.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:27:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:28:28
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:28:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:28:28
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:28:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:28:28
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:28:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:28:34
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:34
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:28:34
</StartTime>
          <StartTime>
2021-10-04 14:28:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.NorthAmericaGermanLegalFanfold)">
          <StartTime>
2021-10-04 14:28:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:34
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:28:34
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14283502.png
</ScreenShot>
          <EndTime>
2021-10-04 14:28:35
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:28:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:40
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:28:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:40
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:28:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:28:45
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:28:45
</StartTime>
          <StartTime>
2021-10-04 14:28:45
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:28:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:28:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:28:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:29:07
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:29:07
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:29:07
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:29:07
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:29:07
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:29:07
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:29:07
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:29:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:29:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:29:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:29:27
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_NorthAmericaGermanLegalFanfold">
          <StartTime>
2021-10-04 14:29:27
</StartTime>
          <StartTime>
2021-10-04 14:29:27
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:29:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:29:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:29:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:29:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:NorthAmericaGermanLegalFanfold)">
            <StartTime>
2021-10-04 14:29:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:NorthAmericaGermanLegalFanfold are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:29:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:29:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:29:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:29:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:29:27
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:29:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:29:28
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:29:28
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:29:28
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:29:28
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:29:28
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:29:28
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:4x6in                                     /Remote Support">
    <StartTime>
2021-10-04 14:29:28
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:29:28
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:29:28
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4x6in">
          <StartTime>
2021-10-04 14:29:28
</StartTime>
          <StartTime>
2021-10-04 14:29:28
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC 4x6in.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:29:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find specified file
</ErrorDescription>
            <EndTime>
2021-10-04 14:29:28
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:29:28
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find window
</ErrorDescription>
            <ScreenShot>
.\Hallasan_Screenshot_211004_14293864.png
</ScreenShot>
            <EndTime>
2021-10-04 14:29:38
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:29:38
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_211004_14300881.png
</ScreenShot>
            <EndTime>
2021-10-04 14:30:08
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:30:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:30:14
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:30:14
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:30:14
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:30:14
</StartTime>
          <StartTime>
2021-10-04 14:30:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:30:14
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:30:14
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.HP_4X6_IN)">
          <StartTime>
2021-10-04 14:30:14
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PageMediaSize
</ErrorDescription>
          <EndTime>
2021-10-04 14:30:17
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:30:17
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14301711.png
</ScreenShot>
          <EndTime>
2021-10-04 14:30:17
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:30:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:30:22
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:30:22
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14302536.png
</ScreenShot>
          <EndTime>
2021-10-04 14:30:25
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:30:25
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:30:30
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:30:30
</StartTime>
          <StartTime>
2021-10-04 14:30:30
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:30:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Error during click print button
</ErrorDescription>
            <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.ApplicationUtils.ClickPrintButtonInAcrobatReader(Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 398
   at HP.GFriend.Keywords.Windows.ClickPrintButton() in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 840
</AdditionalInfo>
            <EndTime>
2021-10-04 14:30:37
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:30:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:30:57
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:30:57
</StartTime>
            <ConditionResult>
FAIL
</ConditionResult>
            <ErrorDescription>
No application to close
</ErrorDescription>
            <StatementBlock Kind="FAIL">
              <StartTime>
2021-10-04 14:30:57
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:30:57
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:30:57
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:30:57
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:30:57
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:30:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:31:17
</EndTime>
          </Statement>
          <Result>
Error
</Result>
          <EndTime>
2021-10-04 14:31:17
</EndTime>
          <Result>
Error
</Result>
          <EndTime>
2021-10-04 14:31:17
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_HP_4X6_IN">
          <StartTime>
2021-10-04 14:31:17
</StartTime>
          <StartTime>
2021-10-04 14:31:17
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:31:17
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:31:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:31:17
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:31:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:HP_4X6_IN)">
            <StartTime>
2021-10-04 14:31:17
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:HP_4X6_IN are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:31:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:31:17
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:31:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:31:17
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:31:17
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:31:17
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:31:18
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:31:18
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:31:18
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:31:18
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:31:18
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:31:18
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:5x7in">
    <StartTime>
2021-10-04 14:31:18
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:31:18
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:31:18
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_5x7in">
          <StartTime>
2021-10-04 14:31:18
</StartTime>
          <StartTime>
2021-10-04 14:31:18
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC 5x7in.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:31:18
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find specified file
</ErrorDescription>
            <EndTime>
2021-10-04 14:31:18
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:31:18
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find window
</ErrorDescription>
            <ScreenShot>
.\Hallasan_Screenshot_211004_14313311.png
</ScreenShot>
            <EndTime>
2021-10-04 14:31:33
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:31:33
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_211004_14320331.png
</ScreenShot>
            <EndTime>
2021-10-04 14:32:03
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:32:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:32:09
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:32:09
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:32:09
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:32:09
</StartTime>
          <StartTime>
2021-10-04 14:32:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:32:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:32:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.HP_5X7_IN)">
          <StartTime>
2021-10-04 14:32:09
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PageMediaSize
</ErrorDescription>
          <EndTime>
2021-10-04 14:32:11
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:32:11
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14321163.png
</ScreenShot>
          <EndTime>
2021-10-04 14:32:11
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:32:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:32:16
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:32:16
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14321991.png
</ScreenShot>
          <EndTime>
2021-10-04 14:32:19
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:32:19
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:32:25
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:32:25
</StartTime>
          <StartTime>
2021-10-04 14:32:25
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:32:25
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Error during click print button
</ErrorDescription>
            <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.ApplicationUtils.ClickPrintButtonInAcrobatReader(Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 398
   at HP.GFriend.Keywords.Windows.ClickPrintButton() in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 840
</AdditionalInfo>
            <EndTime>
2021-10-04 14:32:32
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:32:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:32:52
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:32:52
</StartTime>
            <ConditionResult>
FAIL
</ConditionResult>
            <ErrorDescription>
No application to close
</ErrorDescription>
            <StatementBlock Kind="FAIL">
              <StartTime>
2021-10-04 14:32:52
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:32:52
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:32:52
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:32:52
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:32:52
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:32:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Result>
Error
</Result>
          <EndTime>
2021-10-04 14:33:12
</EndTime>
          <Result>
Error
</Result>
          <EndTime>
2021-10-04 14:33:12
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_HP_5X7_IN">
          <StartTime>
2021-10-04 14:33:12
</StartTime>
          <StartTime>
2021-10-04 14:33:12
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:HP_5X7_IN)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:HP_5X7_IN are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:33:12
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:33:12
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:33:12
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:33:12
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:33:12
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:33:12
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:10x15 cm">
    <StartTime>
2021-10-04 14:33:12
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:33:12
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:33:12
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_10x15cm">
          <StartTime>
2021-10-04 14:33:12
</StartTime>
          <StartTime>
2021-10-04 14:33:12
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC 10x15cm.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:33:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:33:43
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:33:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:33:43
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:33:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:33:43
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:33:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:33:49
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:49
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:49
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:33:49
</StartTime>
          <StartTime>
2021-10-04 14:33:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:49
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:49
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.INDEX10X15)">
          <StartTime>
2021-10-04 14:33:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:50
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:33:50
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14335023.png
</ScreenShot>
          <EndTime>
2021-10-04 14:33:50
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:33:50
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:55
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:33:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:33:55
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:33:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:34:00
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:34:00
</StartTime>
          <StartTime>
2021-10-04 14:34:00
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:34:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:34:02
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:34:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:34:22
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:34:22
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:34:22
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:34:22
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:34:22
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:34:22
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:34:22
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:34:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:34:42
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:34:42
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:34:42
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_INDEX10X15">
          <StartTime>
2021-10-04 14:34:42
</StartTime>
          <StartTime>
2021-10-04 14:34:42
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:34:42
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:34:42
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:34:42
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:34:42
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:INDEX10X15)">
            <StartTime>
2021-10-04 14:34:42
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:INDEX10X15 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:34:42
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:34:42
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:34:42
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:34:42
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:34:43
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:34:43
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:34:43
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:34:43
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:34:43
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:34:43
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:34:43
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:34:43
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:Officio 216X340MM">
    <StartTime>
2021-10-04 14:34:43
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:34:43
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:34:43
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_OFFICIO216X340MM">
          <StartTime>
2021-10-04 14:34:43
</StartTime>
          <StartTime>
2021-10-04 14:34:43
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC OFFICIO216X340MM.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:34:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:35:13
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:35:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:35:14
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:35:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:35:14
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:35:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:35:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:20
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:35:20
</StartTime>
          <StartTime>
2021-10-04 14:35:20
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:20
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.OFFICIO216X340MM)">
          <StartTime>
2021-10-04 14:35:20
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:20
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:35:20
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14352052.png
</ScreenShot>
          <EndTime>
2021-10-04 14:35:20
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:35:20
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:25
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:35:25
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:25
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:35:25
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:35:30
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:35:30
</StartTime>
          <StartTime>
2021-10-04 14:35:30
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:35:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:35:33
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:35:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:35:53
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:35:53
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:35:53
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:35:53
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:35:53
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:35:53
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:35:53
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:35:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:13
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_OFFICIO216X340MM">
          <StartTime>
2021-10-04 14:36:13
</StartTime>
          <StartTime>
2021-10-04 14:36:13
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OFFICIO216X340MM)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OFFICIO216X340MM are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:36:13
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:36:13
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:36:13
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:36:13
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:36:13
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:36:13
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:16K195X270">
    <StartTime>
2021-10-04 14:36:13
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:36:13
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:36:13
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_ROC16K195X270">
          <StartTime>
2021-10-04 14:36:13
</StartTime>
          <StartTime>
2021-10-04 14:36:13
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC ROC16K195X270.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:36:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:36:44
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:36:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:36:44
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:36:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:36:44
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:36:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:36:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:50
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:36:50
</StartTime>
          <StartTime>
2021-10-04 14:36:50
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:50
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ROC16K195X270)">
          <StartTime>
2021-10-04 14:36:50
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.PageMediaSize - Option.ROC16K195X270
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14365297.png
</ScreenShot>
          <EndTime>
2021-10-04 14:36:52
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:36:52
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14365301.png
</ScreenShot>
          <EndTime>
2021-10-04 14:36:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:36:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:36:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:36:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:36:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:37:03
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:37:03
</StartTime>
          <StartTime>
2021-10-04 14:37:03
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:37:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:37:05
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:37:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:37:25
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:37:25
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:37:25
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:37:25
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:37:25
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:37:25
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:37:25
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:37:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:37:45
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:37:45
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:37:45
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ROC16K195X270">
          <StartTime>
2021-10-04 14:37:45
</StartTime>
          <StartTime>
2021-10-04 14:37:45
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:37:45
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:37:45
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:37:45
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:37:45
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:ROC16K195X270)">
            <StartTime>
2021-10-04 14:37:45
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:ROC16K195X270 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:37:45
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:37:45
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:37:45
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:37:45
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:37:45
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:37:45
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:37:46
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:37:46
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:37:46
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:37:46
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:37:46
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:37:46
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:16K184X260">
    <StartTime>
2021-10-04 14:37:46
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:37:46
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:37:46
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_ROC16K184X260">
          <StartTime>
2021-10-04 14:37:46
</StartTime>
          <StartTime>
2021-10-04 14:37:46
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC ROC16K184X260.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:37:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:38:16
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:38:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:38:16
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:38:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:38:16
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:38:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:38:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:38:23
</StartTime>
          <StartTime>
2021-10-04 14:38:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ROC16K184X260)">
          <StartTime>
2021-10-04 14:38:23
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.PageMediaSize - Option.ROC16K184X260
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14382551.png
</ScreenShot>
          <EndTime>
2021-10-04 14:38:25
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:38:25
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14382556.png
</ScreenShot>
          <EndTime>
2021-10-04 14:38:25
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:38:25
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:38:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:38:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:38:35
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:38:35
</StartTime>
          <StartTime>
2021-10-04 14:38:35
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:38:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:38:38
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:38:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:38:58
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:38:58
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:38:58
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:38:58
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:38:58
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:38:58
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:38:58
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:38:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:18
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:18
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ROC16K184X260">
          <StartTime>
2021-10-04 14:39:18
</StartTime>
          <StartTime>
2021-10-04 14:39:18
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:ROC16K184X260)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:ROC16K184X260 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:39:18
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:39:18
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:39:18
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:39:18
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:39:18
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:39:18
</EndTime>
  </TestCase>
  <TestCase Name="Paper Size:16K197X273">
    <StartTime>
2021-10-04 14:39:18
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:39:18
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:39:18
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_ROC16K197X273">
          <StartTime>
2021-10-04 14:39:18
</StartTime>
          <StartTime>
2021-10-04 14:39:18
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC ROC16K197X273.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:39:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:39:49
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:39:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:39:49
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:39:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:39:49
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:39:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:39:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:55
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:39:55
</StartTime>
          <StartTime>
2021-10-04 14:39:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:55
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaSize,Option.ROC16K197X273)">
          <StartTime>
2021-10-04 14:39:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:39:56
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:39:56
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14395605.png
</ScreenShot>
          <EndTime>
2021-10-04 14:39:56
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:39:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:40:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:40:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:40:01
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:40:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:40:06
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:40:06
</StartTime>
          <StartTime>
2021-10-04 14:40:06
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:40:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:40:08
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:40:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:40:28
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:40:28
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:40:28
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:40:28
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:40:28
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:40:28
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:40:28
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:40:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:40:48
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:40:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:40:48
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_ROC16K197X273">
          <StartTime>
2021-10-04 14:40:48
</StartTime>
          <StartTime>
2021-10-04 14:40:48
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:40:48
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:40:48
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaSize']/psf:Option,name)">
            <StartTime>
2021-10-04 14:40:48
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:40:48
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:ROC16K197X273)">
            <StartTime>
2021-10-04 14:40:48
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:ROC16K197X273 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:40:48
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:40:48
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:40:48
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:40:48
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:40:48
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:40:48
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:40:49
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:40:49
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:40:49
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:40:49
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:40:49
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:40:49
</EndTime>
  </TestCase>
  <TestCase Name="Paper Source:Printer auto select">
    <StartTime>
2021-10-04 14:40:49
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:40:49
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:40:49
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Printer_auto_select">
          <StartTime>
2021-10-04 14:40:49
</StartTime>
          <StartTime>
2021-10-04 14:40:49
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Printer_auto_select.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:40:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:41:19
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:41:19
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:41:20
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:41:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:41:20
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:41:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:41:26
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:26
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:41:26
</StartTime>
          <StartTime>
2021-10-04 14:41:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageInputBin,Option.UsePrinterSetting)">
          <StartTime>
2021-10-04 14:41:27
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.PageInputBin - Option.UsePrinterSetting
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14412935.png
</ScreenShot>
          <EndTime>
2021-10-04 14:41:29
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:41:29
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14412941.png
</ScreenShot>
          <EndTime>
2021-10-04 14:41:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:41:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:34
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:41:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:34
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:41:34
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:41:39
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:41:39
</StartTime>
          <StartTime>
2021-10-04 14:41:39
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:41:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:41:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:41:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:42:02
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:42:02
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:42:02
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:42:02
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:42:02
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:42:02
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:42:02
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:42:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:22
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_UsePrinterSetting">
          <StartTime>
2021-10-04 14:42:22
</StartTime>
          <StartTime>
2021-10-04 14:42:22
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageInputBin']/psf:Option,name)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:UsePrinterSetting)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:UsePrinterSetting are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:42:22
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:42:22
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:42:22
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:42:22
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:42:22
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:42:22
</EndTime>
  </TestCase>
  <TestCase Name="Paper Source:Tray 1">
    <StartTime>
2021-10-04 14:42:22
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:42:22
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:42:22
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Tray_1">
          <StartTime>
2021-10-04 14:42:22
</StartTime>
          <StartTime>
2021-10-04 14:42:22
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Tray_1.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:42:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:42:53
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:42:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:42:53
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:42:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:42:53
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:42:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:42:59
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:59
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:42:59
</StartTime>
          <StartTime>
2021-10-04 14:42:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:59
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageInputBin,Option.Tray1)">
          <StartTime>
2021-10-04 14:42:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:42:59
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:42:59
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14425966.png
</ScreenShot>
          <EndTime>
2021-10-04 14:42:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:42:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:43:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:43:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:43:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:43:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:43:09
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:43:09
</StartTime>
          <StartTime>
2021-10-04 14:43:09
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:43:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:43:12
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:43:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:43:32
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:43:32
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:43:32
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:43:32
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:43:32
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:43:32
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:43:32
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:43:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:43:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:43:52
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Tray1">
          <StartTime>
2021-10-04 14:43:52
</StartTime>
          <StartTime>
2021-10-04 14:43:52
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageInputBin']/psf:Option,name)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:Tray1)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:Tray1 are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:43:52
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:43:52
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:43:52
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:43:52
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:43:52
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:43:52
</EndTime>
  </TestCase>
  <TestCase Name="Paper Source:Manual">
    <StartTime>
2021-10-04 14:43:52
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:43:52
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:43:52
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Manual">
          <StartTime>
2021-10-04 14:43:52
</StartTime>
          <StartTime>
2021-10-04 14:43:52
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Manual.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:43:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:44:23
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:44:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:44:23
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:44:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:44:23
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:44:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:44:29
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:29
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:29
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:44:29
</StartTime>
          <StartTime>
2021-10-04 14:44:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageInputBin,Option.Manual)">
          <StartTime>
2021-10-04 14:44:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:30
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:44:30
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14443033.png
</ScreenShot>
          <EndTime>
2021-10-04 14:44:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:44:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:44:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:35
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:44:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:44:40
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:44:40
</StartTime>
          <StartTime>
2021-10-04 14:44:40
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:44:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:44:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:44:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:45:02
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:45:02
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:45:02
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:45:02
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:45:02
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:45:02
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:45:02
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:45:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:45:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:45:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:45:22
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Manual">
          <StartTime>
2021-10-04 14:45:22
</StartTime>
          <StartTime>
2021-10-04 14:45:22
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:45:22
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:45:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageInputBin']/psf:Option,name)">
            <StartTime>
2021-10-04 14:45:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:45:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Manual)">
            <StartTime>
2021-10-04 14:45:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Manual are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:45:23
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:45:23
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:45:23
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:45:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:45:23
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:45:23
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:45:23
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:45:23
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:45:23
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:45:23
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:45:23
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:45:23
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:Plain">
    <StartTime>
2021-10-04 14:45:23
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:45:23
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:45:23
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Plain">
          <StartTime>
2021-10-04 14:45:23
</StartTime>
          <StartTime>
2021-10-04 14:45:23
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Plain.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:45:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:45:54
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:45:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:45:54
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:45:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:45:54
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:45:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:46:00
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:00
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:46:00
</StartTime>
          <StartTime>
2021-10-04 14:46:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.Plain)">
          <StartTime>
2021-10-04 14:46:00
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.PageMediaType - Option.Plain
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14460264.png
</ScreenShot>
          <EndTime>
2021-10-04 14:46:02
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:46:02
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14460269.png
</ScreenShot>
          <EndTime>
2021-10-04 14:46:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:46:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:46:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:46:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:13
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:46:13
</StartTime>
          <StartTime>
2021-10-04 14:46:13
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:46:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:46:15
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:46:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:46:35
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:46:35
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:46:35
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:46:35
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:46:35
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:46:35
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:46:35
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:46:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:46:55
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Plain">
          <StartTime>
2021-10-04 14:46:55
</StartTime>
          <StartTime>
2021-10-04 14:46:55
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Plain)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Plain are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:46:55
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:46:55
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:46:55
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:46:55
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:46:55
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:46:55
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:Light 60-74g">
    <StartTime>
2021-10-04 14:46:55
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:46:55
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:46:55
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Light_60_74g">
          <StartTime>
2021-10-04 14:46:55
</StartTime>
          <StartTime>
2021-10-04 14:46:55
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Light_60_74g.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:46:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:47:26
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:47:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:47:26
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:47:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:47:26
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:47:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:47:32
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:32
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:47:32
</StartTime>
          <StartTime>
2021-10-04 14:47:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.light)">
          <StartTime>
2021-10-04 14:47:32
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.PageMediaType - Option.light
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14473503.png
</ScreenShot>
          <EndTime>
2021-10-04 14:47:35
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:47:35
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14473510.png
</ScreenShot>
          <EndTime>
2021-10-04 14:47:35
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:47:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:40
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:47:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:40
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:47:40
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:47:45
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:47:45
</StartTime>
          <StartTime>
2021-10-04 14:47:45
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:47:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:47:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:47:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:48:07
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:48:07
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:48:07
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:48:07
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:48:07
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:48:07
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:48:07
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:48:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:48:27
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:48:27
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:48:27
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_light">
          <StartTime>
2021-10-04 14:48:27
</StartTime>
          <StartTime>
2021-10-04 14:48:27
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:48:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:48:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:48:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:48:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:light)">
            <StartTime>
2021-10-04 14:48:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:light are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:48:27
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:48:27
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:48:27
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:48:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:48:27
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:48:27
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:48:28
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:48:28
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:48:28
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:48:28
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:48:28
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:48:28
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:Bond">
    <StartTime>
2021-10-04 14:48:28
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:48:28
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:48:28
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Bond">
          <StartTime>
2021-10-04 14:48:28
</StartTime>
          <StartTime>
2021-10-04 14:48:28
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Bond.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:48:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:48:58
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:48:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:48:59
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:48:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:48:59
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:48:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:49:05
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:05
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:05
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:49:05
</StartTime>
          <StartTime>
2021-10-04 14:49:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:05
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.Bond)">
          <StartTime>
2021-10-04 14:49:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:05
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:49:05
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14490553.png
</ScreenShot>
          <EndTime>
2021-10-04 14:49:05
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:49:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:10
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:49:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:10
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:49:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:15
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:49:15
</StartTime>
          <StartTime>
2021-10-04 14:49:15
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:49:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:49:18
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:49:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:49:38
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:49:38
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:49:38
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:49:38
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:49:38
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:49:38
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:49:38
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:49:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:49:58
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Bond">
          <StartTime>
2021-10-04 14:49:58
</StartTime>
          <StartTime>
2021-10-04 14:49:58
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Bond)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Bond are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:49:58
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:49:58
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:49:58
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:49:58
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:49:58
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:49:58
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:Heavy 111-130g">
    <StartTime>
2021-10-04 14:49:58
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:49:58
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:49:58
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Heavy_111_130g">
          <StartTime>
2021-10-04 14:49:58
</StartTime>
          <StartTime>
2021-10-04 14:49:58
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Heavy_111_130g.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:49:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:50:29
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:50:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:50:29
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:50:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:50:29
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:50:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:50:35
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:35
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:35
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:50:35
</StartTime>
          <StartTime>
2021-10-04 14:50:35
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:35
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.heavy)">
          <StartTime>
2021-10-04 14:50:35
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.PageMediaType - Option.heavy
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_211004_14503790.png
</ScreenShot>
          <EndTime>
2021-10-04 14:50:37
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:50:37
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14503794.png
</ScreenShot>
          <EndTime>
2021-10-04 14:50:37
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:50:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:43
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:50:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:43
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:50:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:50:48
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:50:48
</StartTime>
          <StartTime>
2021-10-04 14:50:48
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:50:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:50:50
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:50:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:51:10
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:51:10
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:51:10
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:51:10
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:51:10
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:51:10
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:51:10
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:51:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:51:30
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:51:30
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_heavy">
          <StartTime>
2021-10-04 14:51:30
</StartTime>
          <StartTime>
2021-10-04 14:51:30
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:51:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:51:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:heavy)">
            <StartTime>
2021-10-04 14:51:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:heavy are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:51:30
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:51:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:51:30
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:51:30
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:51:30
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:51:30
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:51:30
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:51:30
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:51:30
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:Labels">
    <StartTime>
2021-10-04 14:51:30
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:51:30
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:51:30
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Label">
          <StartTime>
2021-10-04 14:51:31
</StartTime>
          <StartTime>
2021-10-04 14:51:31
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Label.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:51:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:52:01
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:52:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:52:01
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:52:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:52:01
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:52:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:52:07
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:07
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:52:07
</StartTime>
          <StartTime>
2021-10-04 14:52:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.Label)">
          <StartTime>
2021-10-04 14:52:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:08
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:52:08
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14520830.png
</ScreenShot>
          <EndTime>
2021-10-04 14:52:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:52:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:52:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:13
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:52:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:52:18
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:52:18
</StartTime>
          <StartTime>
2021-10-04 14:52:18
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:52:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:52:20
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:52:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:52:40
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:52:40
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:52:40
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:52:40
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:52:40
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:52:40
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:52:40
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:52:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:53:00
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:00
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Label">
          <StartTime>
2021-10-04 14:53:00
</StartTime>
          <StartTime>
2021-10-04 14:53:00
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:53:00
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:53:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:53:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:53:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Label)">
            <StartTime>
2021-10-04 14:53:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Label are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:53:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:53:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:53:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:53:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:53:01
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:53:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:53:01
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:53:01
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:53:01
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:53:01
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:53:01
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:53:01
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:Envelope">
    <StartTime>
2021-10-04 14:53:01
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:53:01
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:53:01
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_EnvelopePlain">
          <StartTime>
2021-10-04 14:53:01
</StartTime>
          <StartTime>
2021-10-04 14:53:01
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_EnvelopePlain.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:53:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:53:32
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:53:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:53:32
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:53:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:53:32
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:53:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:53:38
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:38
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:38
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:53:38
</StartTime>
          <StartTime>
2021-10-04 14:53:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:38
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:38
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.EnvelopePlain)">
          <StartTime>
2021-10-04 14:53:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:38
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:53:38
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14533860.png
</ScreenShot>
          <EndTime>
2021-10-04 14:53:38
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:53:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:43
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:53:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:43
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:53:43
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:53:48
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:53:48
</StartTime>
          <StartTime>
2021-10-04 14:53:48
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:53:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:53:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:53:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:54:11
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:54:11
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:54:11
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:54:11
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:54:11
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:54:11
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:54:11
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:54:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:54:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:54:31
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_EnvelopePlain">
          <StartTime>
2021-10-04 14:54:31
</StartTime>
          <StartTime>
2021-10-04 14:54:31
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:EnvelopePlain)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:EnvelopePlain are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:54:31
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:54:31
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:54:31
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:54:31
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:54:31
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:54:31
</EndTime>
  </TestCase>
  <TestCase Name="Media Type:preprinted">
    <StartTime>
2021-10-04 14:54:31
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:54:31
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:54:31
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_stationerypreprinted">
          <StartTime>
2021-10-04 14:54:31
</StartTime>
          <StartTime>
2021-10-04 14:54:31
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_stationerypreprinted.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:54:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:55:02
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:55:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:55:02
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:55:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:55:02
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:55:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:55:08
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:08
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:08
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:55:08
</StartTime>
          <StartTime>
2021-10-04 14:55:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:08
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:08
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PageMediaType,Option.stationerypreprinted)">
          <StartTime>
2021-10-04 14:55:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:08
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:55:08
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14550894.png
</ScreenShot>
          <EndTime>
2021-10-04 14:55:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:55:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:55:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:14
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:55:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:55:19
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:55:19
</StartTime>
          <StartTime>
2021-10-04 14:55:19
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:55:19
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:55:21
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:55:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:55:41
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:55:41
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:55:41
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:55:41
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:55:41
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:55:41
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:55:41
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:55:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:01
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_preprinted">
          <StartTime>
2021-10-04 14:56:01
</StartTime>
          <StartTime>
2021-10-04 14:56:01
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:56:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
            <StartTime>
2021-10-04 14:56:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:stationerypreprinted)">
            <StartTime>
2021-10-04 14:56:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:stationerypreprinted are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:56:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:56:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:56:01
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:56:01
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:56:01
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:56:02
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:56:02
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:56:02
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:56:02
</EndTime>
  </TestCase>
  <TestCase Name="Booklet Printing :Left binding">
    <StartTime>
2021-10-04 14:56:02
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:56:02
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:56:02
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_BookletPrinting_Left">
          <StartTime>
2021-10-04 14:56:02
</StartTime>
          <StartTime>
2021-10-04 14:56:02
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_BookletPrinting_Left.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:56:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:56:32
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:56:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:56:32
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:56:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:56:32
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:56:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:56:38
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:38
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:38
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:56:38
</StartTime>
          <StartTime>
2021-10-04 14:56:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:38
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:38
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentBinding,Option.Booklet)">
          <StartTime>
2021-10-04 14:56:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:39
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:56:39
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14563929.png
</ScreenShot>
          <EndTime>
2021-10-04 14:56:39
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:56:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:56:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:44
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:56:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:56:49
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:56:49
</StartTime>
          <StartTime>
2021-10-04 14:56:49
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:56:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:56:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:56:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:57:11
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:57:11
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:57:11
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:57:11
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:57:11
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:57:11
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:57:11
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:57:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:57:31
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:57:31
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:57:31
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Booklet">
          <StartTime>
2021-10-04 14:57:31
</StartTime>
          <StartTime>
2021-10-04 14:57:31
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:57:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:57:31
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:DocumentBinding']/psf:Option,name)">
            <StartTime>
2021-10-04 14:57:31
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:57:31
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Booklet)">
            <StartTime>
2021-10-04 14:57:31
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Booklet are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:57:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:57:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:57:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:57:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:57:32
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:57:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:57:32
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:57:32
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:57:32
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:57:32
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:57:32
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:57:32
</EndTime>
  </TestCase>
  <TestCase Name="Booklet Printing :Right binding">
    <StartTime>
2021-10-04 14:57:32
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:57:32
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:57:32
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_BookletPrinting_Right">
          <StartTime>
2021-10-04 14:57:32
</StartTime>
          <StartTime>
2021-10-04 14:57:32
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_BookletPrinting_Right.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:57:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:58:03
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:58:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:58:03
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:58:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:58:03
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:58:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:58:09
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:09
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:58:09
</StartTime>
          <StartTime>
2021-10-04 14:58:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentBinding,Option.JapaneseBooklet)">
          <StartTime>
2021-10-04 14:58:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:09
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:58:09
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14580968.png
</ScreenShot>
          <EndTime>
2021-10-04 14:58:09
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:58:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:14
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:58:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:14
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:58:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:58:19
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:58:19
</StartTime>
          <StartTime>
2021-10-04 14:58:20
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:58:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:58:22
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:58:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:58:42
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 14:58:42
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 14:58:42
</StartTime>
              <Block>
                <StartTime>
2021-10-04 14:58:42
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 14:58:42
</EndTime>
              </Block>
              <EndTime>
2021-10-04 14:58:42
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 14:58:42
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:58:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:02
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_JapaneseBooklet">
          <StartTime>
2021-10-04 14:59:02
</StartTime>
          <StartTime>
2021-10-04 14:59:02
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:DocumentBinding']/psf:Option,name)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:JapaneseBooklet)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:JapaneseBooklet are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 14:59:02
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:59:02
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 14:59:02
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 14:59:02
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 14:59:02
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 14:59:02
</EndTime>
  </TestCase>
  <TestCase Name="Page Order:Back to Front_Reverse">
    <StartTime>
2021-10-04 14:59:02
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 14:59:02
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 14:59:02
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Back_to_Front">
          <StartTime>
2021-10-04 14:59:02
</StartTime>
          <StartTime>
2021-10-04 14:59:02
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Back_to_Front.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 14:59:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:59:33
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 14:59:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:59:33
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 14:59:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:59:33
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 14:59:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:59:39
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:39
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:39
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 14:59:39
</StartTime>
          <StartTime>
2021-10-04 14:59:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:39
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:39
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobPageOrder,Option.Reverse)">
          <StartTime>
2021-10-04 14:59:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:39
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 14:59:39
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_14593993.png
</ScreenShot>
          <EndTime>
2021-10-04 14:59:39
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:59:39
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 14:59:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:45
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 14:59:45
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 14:59:50
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 14:59:50
</StartTime>
          <StartTime>
2021-10-04 14:59:50
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 14:59:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 14:59:52
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 14:59:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:00:12
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 15:00:12
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 15:00:12
</StartTime>
              <Block>
                <StartTime>
2021-10-04 15:00:12
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 15:00:12
</EndTime>
              </Block>
              <EndTime>
2021-10-04 15:00:12
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 15:00:12
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 15:00:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:00:32
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:00:32
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Reverse">
          <StartTime>
2021-10-04 15:00:32
</StartTime>
          <StartTime>
2021-10-04 15:00:32
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 15:00:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobPageOrder']/psf:Option,name)">
            <StartTime>
2021-10-04 15:00:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Reverse)">
            <StartTime>
2021-10-04 15:00:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Reverse are not same
</ErrorDescription>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 15:00:32
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 15:00:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 15:00:32
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 15:00:32
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 15:00:32
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 15:00:32
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 15:00:32
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 15:00:32
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 15:00:32
</EndTime>
  </TestCase>
  <TestCase Name="Page Order:Front to Back_Standard">
    <StartTime>
2021-10-04 15:00:32
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2021-10-04 15:00:32
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2021-10-04 15:00:32
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Front_to_Back">
          <StartTime>
2021-10-04 15:00:32
</StartTime>
          <StartTime>
2021-10-04 15:00:33
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Front_to_Back.pdf,HP Smart Printing)">
            <StartTime>
2021-10-04 15:00:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:01:03
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2021-10-04 15:01:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:01:03
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2021-10-04 15:01:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:01:03
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2021-10-04 15:01:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:01:09
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:09
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2021-10-04 15:01:09
</StartTime>
          <StartTime>
2021-10-04 15:01:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:09
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:09
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobPageOrder,Option.Standard)">
          <StartTime>
2021-10-04 15:01:09
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:10
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2021-10-04 15:01:10
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_211004_15011030.png
</ScreenShot>
          <EndTime>
2021-10-04 15:01:10
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 15:01:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:15
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2021-10-04 15:01:15
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:15
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2021-10-04 15:01:15
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:01:20
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2021-10-04 15:01:20
</StartTime>
          <StartTime>
2021-10-04 15:01:20
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2021-10-04 15:01:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:01:22
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 15:01:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:01:42
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2021-10-04 15:01:42
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2021-10-04 15:01:42
</StartTime>
              <Block>
                <StartTime>
2021-10-04 15:01:42
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2021-10-04 15:01:42
</EndTime>
              </Block>
              <EndTime>
2021-10-04 15:01:42
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2021-10-04 15:01:42
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2021-10-04 15:01:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2021-10-04 15:02:02
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:02:02
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2021-10-04 15:02:02
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Standard">
          <StartTime>
2021-10-04 15:02:02
</StartTime>
          <StartTime>
2021-10-04 15:02:02
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2021-10-04 15:02:02
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2021-10-04 15:02:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobPageOrder']/psf:Option,name)">
            <StartTime>
2021-10-04 15:02:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 15:02:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Standard)">
            <StartTime>
2021-10-04 15:02:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:Standard are not same
</ErrorDescription>
            <EndTime>
2021-10-04 15:02:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2021-10-04 15:02:03
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2021-10-04 15:02:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2021-10-04 15:02:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2021-10-04 15:02:03
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2021-10-04 15:02:03
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
            <EndTime>
2021-10-04 15:02:03
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 15:02:03
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2021-10-04 15:02:03
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2021-10-04 15:02:03
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 15:02:03
</EndTime>
  </TestCase>
  <TestCase Name="Local PT Value_PCLmS">
    <StartTime>
2021-10-04 15:02:03
</StartTime>
    <Statement StatementName="Destination_Selection_Application.PT Value_PCLmS">
      <StartTime>
2021-10-04 15:02:03
</StartTime>
      <StartTime>
2021-10-04 15:02:03
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobDestination']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:LocalNW_Device)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:LocalNW_Device are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDeviceLanguage']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:PCLmS)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:PCLmS are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Inner Text (${value},//*[@name='ns0000:JobLocalNW_Device_Protocols_Supported']/psf:Value)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},TCP)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and TCP are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobStatusMonitor']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:On)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 15:02:03
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 15:02:03
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 15:02:03
</EndTime>
  </TestCase>
  <TestCase Name="PrintAnywhere PT Value">
    <StartTime>
2021-10-04 15:02:03
</StartTime>
    <Statement StatementName="Destination_Selection_Application.PT Value_PrintAnywhere">
      <StartTime>
2021-10-04 15:02:03
</StartTime>
      <StartTime>
2021-10-04 15:02:03
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobDestination']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:PushToClient)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:PushToClient are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDeviceLanguage']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:PDF)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:PDF are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Inner Text (${value},//*[@name='ns0000:JobCloudDeliveryType']/psf:Value)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},PrintAnywhere)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and PrintAnywhere are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Inner Text (${value},//*[@name='ns0000:JobLocalNW_Device_Protocols_Supported']/psf:Value)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},TCP)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and TCP are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:03
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobStatusMonitor']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:03
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:On)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 15:02:04
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 15:02:04
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 15:02:04
</EndTime>
  </TestCase>
  <TestCase Name="PrivatePickup PT Value">
    <StartTime>
2021-10-04 15:02:04
</StartTime>
    <Statement StatementName="Destination_Selection_Application.PT Value_PrivatePickup">
      <StartTime>
2021-10-04 15:02:04
</StartTime>
      <StartTime>
2021-10-04 15:02:04
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobDestination']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:PushToClient)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:PushToClient are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDeviceLanguage']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:PDF)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:PDF are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Inner Text (${value},//*[@name='ns0000:JobCloudDeliveryType']/psf:Value)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},PrivatePickup)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and PrivatePickup are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Inner Text (${value},//*[@name='ns0000:JobLocalNW_Device_Protocols_Supported']/psf:Value)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},TCP)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and TCP are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobStatusMonitor']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:On)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:On are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2021-10-04 15:02:04
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
The system cannot find the file specified.

</ErrorDescription>
        <EndTime>
2021-10-04 15:02:04
</EndTime>
      </Statement>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 15:02:04
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2021-10-04 15:02:04
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2021-10-04 15:02:04
</EndTime>
  </TestCase>
  <EndTime>
2021-10-04 15:02:04
</EndTime>
</TestSuite>