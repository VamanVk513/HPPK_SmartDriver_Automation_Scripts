<?xml version="1.0" encoding="UTF-8"?>
<TestSuite Name="PSA_DragonFly">
  <StartTime>
2024-06-10 12:00:13
</StartTime>
  <TestCase Name="1.Factory defaults">
    <StartTime>
2024-06-10 12:00:13
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Factory_defaults_PSA">
      <StartTime>
2024-06-10 12:00:13
</StartTime>
      <StartTime>
2024-06-10 12:00:13
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\PSA\YMC_PSA_FactoryDefaults.pdf,HP_PrintSupport_App)">
        <StartTime>
2024-06-10 12:00:13
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:00:46
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP_PrintSupport_App,30)">
        <StartTime>
2024-06-10 12:00:46
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:00:46
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2024-06-10 12:00:46
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:00:52
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2024-06-10 12:00:52
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:00:52
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2024-06-10 12:00:52
</StartTime>
      <StartTime>
2024-06-10 12:00:52
</StartTime>
      <Result>
PASS
</Result>
      <EndTime>
2024-06-10 12:00:52
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:00:52
</EndTime>
    </Statement>
    <If Condition=" Windows.Select Child Window With Title (HP_PrintSupport_App,5)">
      <StartTime>
2024-06-10 12:00:52
</StartTime>
      <ConditionResult>
FAIL
</ConditionResult>
      <ErrorDescription>
Can not find target application
</ErrorDescription>
      <ScreenShot>
.\Windows_Screenshot_240610_12005757.png
</ScreenShot>
      <StatementBlock Kind="FAIL">
        <StartTime>
2024-06-10 12:00:57
</StartTime>
        <Block>
          <StartTime>
2024-06-10 12:00:57
</StartTime>
          <Statement StatementName="Pass (Childpop was not displayed)">
            <StartTime>
2024-06-10 12:00:57
</StartTime>
            <Result>
Pass
</Result>
            <Output>
Childpop was not displayed
</Output>
            <EndTime>
2024-06-10 12:00:57
</EndTime>
          </Statement>
          <Result>
PASS
</Result>
          <EndTime>
2024-06-10 12:00:57
</EndTime>
        </Block>
        <EndTime>
2024-06-10 12:00:57
</EndTime>
        <Result>
PASS
</Result>
      </StatementBlock>
      <Result>
PASS
</Result>
      <EndTime>
2024-06-10 12:00:57
</EndTime>
    </If>
    <Statement StatementName="Windows.Wait For ID (ui_Preset_Combo)">
      <StartTime>
2024-06-10 12:00:57
</StartTime>
      <Result>
Error
</Result>
      <ErrorDescription>
Unexpected exception
</ErrorDescription>
      <AdditionalInfo>
System.MissingMethodException: Method 'HP.GFriend.Keywords.Windows.WaitForId' not found.
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
      <EndTime>
2024-06-10 12:00:57
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID With Mouse (ui_Preset_Combo,10)">
      <StartTime>
2024-06-10 12:00:57
</StartTime>
      <Result>
Error
</Result>
      <ErrorDescription>
Unexpected exception
</ErrorDescription>
      <AdditionalInfo>
System.MissingMethodException: Method 'HP.GFriend.Keywords.Windows.ClickIDWithMouse' not found.
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
      <EndTime>
2024-06-10 12:00:57
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Wait For Name (Factory Defaults,5)">
      <StartTime>
2024-06-10 12:00:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:00:58
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click Name (Factory Defaults)">
      <StartTime>
2024-06-10 12:00:58
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:00:58
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2024-06-10 12:00:58
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:01:03
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2024-06-10 12:01:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:01:03
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2024-06-10 12:01:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:01:09
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2024-06-10 12:01:09
</StartTime>
      <StartTime>
2024-06-10 12:01:09
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2024-06-10 12:01:09
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:01:11
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2024-06-10 12:01:11
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:01:21
</EndTime>
      </Statement>
      <If Condition=" Hallasan.Close Application">
        <StartTime>
2024-06-10 12:01:21
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2024-06-10 12:01:21
</StartTime>
          <Block>
            <StartTime>
2024-06-10 12:01:21
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2024-06-10 12:01:21
</EndTime>
          </Block>
          <EndTime>
2024-06-10 12:01:21
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2024-06-10 12:01:21
</EndTime>
      </If>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2024-06-10 12:01:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2024-06-10 12:01:31
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:01:31
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_Factory_defaults_PSA">
      <StartTime>
2024-06-10 12:01:31
</StartTime>
      <StartTime>
2024-06-10 12:01:31
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2024-06-10 12:01:31
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2024-06-10 12:01:31
</StartTime>
        <Result>
Pass
</Result>
        <Output>
psk:OneSided
</Output>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:OneSided)">
        <StartTime>
2024-06-10 12:01:31
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2024-06-10 12:01:31
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:OptIn
</Output>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2024-06-10 12:01:31
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2024-06-10 12:01:31
</StartTime>
        <Result>
Pass
</Result>
        <Output>
        1 file(s) copied.

</Output>
        <EndTime>
2024-06-10 12:01:31
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2024-06-10 12:01:31
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-06-10 12:01:31
</EndTime>
    </Statement>
    <Result>
ERROR
</Result>
    <EndTime>
2024-06-10 12:01:31
</EndTime>
  </TestCase>
  <EndTime>
2024-06-10 12:01:31
</EndTime>
</TestSuite>