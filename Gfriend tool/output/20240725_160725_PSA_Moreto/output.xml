<?xml version="1.0" encoding="UTF-8"?>
<TestSuite Name="PSA_Moreto">
  <StartTime>
2024-07-25 16:07:47
</StartTime>
  <TestCase Name="17. NUP_2UP_RightBottom">
    <StartTime>
2024-07-25 16:07:47
</StartTime>
    <Statement StatementName="Destination_Selection_PSA_Application.Destination Selection_2UP_RightBottom_PSA">
      <StartTime>
2024-07-25 16:07:47
</StartTime>
      <StartTime>
2024-07-25 16:07:47
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_RightBottom.pdf,HP_PrintSupport_App)">
        <StartTime>
2024-07-25 16:07:47
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:08:27
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP_PrintSupport_App,20)">
        <StartTime>
2024-07-25 16:08:27
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:08:27
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2024-07-25 16:08:27
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:08:33
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2024-07-25 16:08:33
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:33
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2024-07-25 16:08:33
</StartTime>
      <StartTime>
2024-07-25 16:08:33
</StartTime>
      <Result>
PASS
</Result>
      <EndTime>
2024-07-25 16:08:33
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:33
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_PSA_Application.Expections_Error">
      <StartTime>
2024-07-25 16:08:33
</StartTime>
      <StartTime>
2024-07-25 16:08:33
</StartTime>
      <Statement StatementName="Windows.Capture Full Screen (SS)">
        <StartTime>
2024-07-25 16:08:33
</StartTime>
        <Result>
Pass
</Result>
        <ScreenShot>
.\Windows_Screenshot_240725_16083330.png
</ScreenShot>
        <EndTime>
2024-07-25 16:08:33
</EndTime>
      </Statement>
      <If Condition=" Windows.Select Child Window With Title (HP_PrintSupport_App,5)">
        <StartTime>
2024-07-25 16:08:33
</StartTime>
        <ConditionResult>
FAIL
</ConditionResult>
        <ErrorDescription>
Can not find target application
</ErrorDescription>
        <ScreenShot>
.\Windows_Screenshot_240725_16083853.png
</ScreenShot>
        <StatementBlock Kind="FAIL">
          <StartTime>
2024-07-25 16:08:38
</StartTime>
          <Block>
            <StartTime>
2024-07-25 16:08:38
</StartTime>
            <Statement StatementName="Pass (Childpop was not displayed)">
              <StartTime>
2024-07-25 16:08:38
</StartTime>
              <Result>
Pass
</Result>
              <Output>
Childpop was not displayed
</Output>
              <EndTime>
2024-07-25 16:08:38
</EndTime>
            </Statement>
            <Result>
PASS
</Result>
            <EndTime>
2024-07-25 16:08:38
</EndTime>
          </Block>
          <EndTime>
2024-07-25 16:08:38
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2024-07-25 16:08:38
</EndTime>
      </If>
      <Statement StatementName="Windows.Capture Full Screen (SSS)">
        <StartTime>
2024-07-25 16:08:38
</StartTime>
        <Result>
Pass
</Result>
        <ScreenShot>
.\Windows_Screenshot_240725_16083861.png
</ScreenShot>
        <EndTime>
2024-07-25 16:08:38
</EndTime>
      </Statement>
      <If Condition=" Windows.Select Application (HP_PrintSupport_App,5)">
        <StartTime>
2024-07-25 16:08:38
</StartTime>
        <ConditionResult>
FAIL
</ConditionResult>
        <ErrorDescription>
Can not find target application
</ErrorDescription>
        <ScreenShot>
.\Windows_Screenshot_240725_16084399.png
</ScreenShot>
        <StatementBlock Kind="FAIL">
          <StartTime>
2024-07-25 16:08:44
</StartTime>
          <Block>
            <StartTime>
2024-07-25 16:08:44
</StartTime>
            <Statement StatementName="Pass (Childpop was not displayed)">
              <StartTime>
2024-07-25 16:08:44
</StartTime>
              <Result>
Pass
</Result>
              <Output>
Childpop was not displayed
</Output>
              <EndTime>
2024-07-25 16:08:44
</EndTime>
            </Statement>
            <Result>
PASS
</Result>
            <EndTime>
2024-07-25 16:08:44
</EndTime>
          </Block>
          <EndTime>
2024-07-25 16:08:44
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2024-07-25 16:08:44
</EndTime>
      </If>
      <Result>
PASS
</Result>
      <EndTime>
2024-07-25 16:08:44
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:44
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Wait For ID (Part.DocumentNUp,5)">
      <StartTime>
2024-07-25 16:08:44
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:44
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID With Mouse (Part.DocumentNUp)">
      <StartTime>
2024-07-25 16:08:44
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:44
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Wait For Name (2 pages per sheet,5)">
      <StartTime>
2024-07-25 16:08:44
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:44
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click Name (2 pages per sheet)">
      <StartTime>
2024-07-25 16:08:44
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:45
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(6)">
      <StartTime>
2024-07-25 16:08:45
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:51
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Wait For ID (NUPPageOrderControl,5)">
      <StartTime>
2024-07-25 16:08:51
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:51
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID With Mouse (NUPPageOrderControl)">
      <StartTime>
2024-07-25 16:08:51
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:51
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Wait For Name (Right, then Down)">
      <StartTime>
2024-07-25 16:08:51
</StartTime>
      <Result>
Error
</Result>
      <ErrorDescription>
Unexpected exception
</ErrorDescription>
      <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.FormatException: Input string was not in a correct format.
   at System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer&amp; number, NumberFormatInfo info, Boolean parseDecimal)
   at System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)
   at HP.GFriend.Keywords.Windows.WaitForName(String name, String timeoutInSec) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 1116
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
      <EndTime>
2024-07-25 16:08:51
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2024-07-25 16:08:51
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:08:56
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set ComboBox (NUPPageOrderControl,1)">
      <StartTime>
2024-07-25 16:08:56
</StartTime>
      <Result>
Fail
</Result>
      <ErrorDescription>
Combobx click fail : NUPPageOrderControl - 1
</ErrorDescription>
      <ScreenShot>
.\Hallasan_Screenshot_240725_16085906.png
</ScreenShot>
      <EndTime>
2024-07-25 16:08:59
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Capture Screen Shot(2 pages per sheet_RB.jpg)">
      <StartTime>
2024-07-25 16:08:59
</StartTime>
      <Result>
Pass
</Result>
      <ScreenShot>
.\Windows_Screenshot_240725_16085912.png
</ScreenShot>
      <EndTime>
2024-07-25 16:08:59
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2024-07-25 16:08:59
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:09:04
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2024-07-25 16:09:04
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:09:04
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2024-07-25 16:09:04
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:09:09
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2024-07-25 16:09:09
</StartTime>
      <StartTime>
2024-07-25 16:09:09
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2024-07-25 16:09:09
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:11
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2024-07-25 16:09:11
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:21
</EndTime>
      </Statement>
      <If Condition=" Hallasan.Close Application">
        <StartTime>
2024-07-25 16:09:21
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2024-07-25 16:09:21
</StartTime>
          <Block>
            <StartTime>
2024-07-25 16:09:21
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2024-07-25 16:09:21
</EndTime>
          </Block>
          <EndTime>
2024-07-25 16:09:21
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2024-07-25 16:09:21
</EndTime>
      </If>
      <Statement StatementName="Sleep(12)">
        <StartTime>
2024-07-25 16:09:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2024-07-25 16:09:34
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:09:34
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_PSA_Application.PT Value_NUP_PSA">
      <StartTime>
2024-07-25 16:09:34
</StartTime>
      <StartTime>
2024-07-25 16:09:34
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <Output>
1
</Output>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},1)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <Output>
psk:RightBottom
</Output>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:RightBottom)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:OptIn
</Output>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2024-07-25 16:09:34
</StartTime>
        <Result>
Pass
</Result>
        <Output>
        1 file(s) copied.

</Output>
        <EndTime>
2024-07-25 16:09:34
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2024-07-25 16:09:34
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2024-07-25 16:09:34
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2024-07-25 16:09:34
</EndTime>
  </TestCase>
  <EndTime>
2024-07-25 16:09:34
</EndTime>
</TestSuite>