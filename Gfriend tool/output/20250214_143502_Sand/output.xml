<?xml version="1.0" encoding="UTF-8"?>
<TestSuite Name="Sand">
  <StartTime>
2025-02-14 14:35:25
</StartTime>
  <TestCase Name="1.General Everyday Printing">
    <StartTime>
2025-02-14 14:35:25
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_General_Everyday_Printing">
      <StartTime>
2025-02-14 14:35:25
</StartTime>
      <StartTime>
2025-02-14 14:35:25
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_General_Everyday_Printing.pdf,HP Smart Printing)">
        <StartTime>
2025-02-14 14:35:25
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:35:58
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,20)">
        <StartTime>
2025-02-14 14:35:58
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:35:58
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2025-02-14 14:35:58
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:36:04
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:36:04
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:04
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2025-02-14 14:36:04
</StartTime>
      <StartTime>
2025-02-14 14:36:04
</StartTime>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:36:04
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:04
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_GeneralPrint)">
      <StartTime>
2025-02-14 14:36:04
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:04
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:36:04
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:09
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2025-02-14 14:36:09
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:09
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:36:09
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:14
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2025-02-14 14:36:14
</StartTime>
      <StartTime>
2025-02-14 14:36:14
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2025-02-14 14:36:14
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:36:16
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2025-02-14 14:36:16
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:36:26
</EndTime>
      </Statement>
      <If Condition=" Hallasan.Close Application">
        <StartTime>
2025-02-14 14:36:26
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2025-02-14 14:36:26
</StartTime>
          <Block>
            <StartTime>
2025-02-14 14:36:26
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2025-02-14 14:36:26
</EndTime>
          </Block>
          <EndTime>
2025-02-14 14:36:26
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2025-02-14 14:36:26
</EndTime>
      </If>
      <Statement StatementName="Sleep(12)">
        <StartTime>
2025-02-14 14:36:26
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:36:38
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:38
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2025-02-14 14:36:38
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:36:38
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
      <StartTime>
2025-02-14 14:36:38
</StartTime>
      <StartTime>
2025-02-14 14:36:38
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2025-02-14 14:36:38
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2025-02-14 14:36:38
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:OneSided)">
        <StartTime>
2025-02-14 14:36:38
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:OneSided are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2025-02-14 14:36:38
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2025-02-14 14:36:38
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2025-02-14 14:36:38
</StartTime>
        <Result>
Fail
</Result>
        <EndTime>
2025-02-14 14:36:38
</EndTime>
      </Statement>
      <Result>
FAIL
</Result>
      <EndTime>
2025-02-14 14:36:38
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2025-02-14 14:36:38
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2025-02-14 14:36:38
</EndTime>
  </TestCase>
  <TestCase Name="2.EcoSMART Settings">
    <StartTime>
2025-02-14 14:36:38
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_EcoSMART_Settings">
      <StartTime>
2025-02-14 14:36:38
</StartTime>
      <StartTime>
2025-02-14 14:36:38
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_EcoSMART_Settings.pdf,HP Smart Printing)">
        <StartTime>
2025-02-14 14:36:39
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:37:11
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,20)">
        <StartTime>
2025-02-14 14:37:11
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:37:11
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2025-02-14 14:37:11
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:37:17
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:37:17
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:17
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2025-02-14 14:37:17
</StartTime>
      <StartTime>
2025-02-14 14:37:17
</StartTime>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:37:17
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:17
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_EcoSmart)">
      <StartTime>
2025-02-14 14:37:17
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:17
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:37:17
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:22
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2025-02-14 14:37:22
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:23
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:37:23
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:28
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2025-02-14 14:37:28
</StartTime>
      <StartTime>
2025-02-14 14:37:28
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2025-02-14 14:37:28
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:37:30
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2025-02-14 14:37:30
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:37:40
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2025-02-14 14:37:40
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2025-02-14 14:37:40
</StartTime>
          <Block>
            <StartTime>
2025-02-14 14:37:40
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2025-02-14 14:37:40
</EndTime>
          </Block>
          <EndTime>
2025-02-14 14:37:40
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2025-02-14 14:37:40
</EndTime>
      </If>
      <Statement StatementName="Sleep(12)">
        <StartTime>
2025-02-14 14:37:40
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:37:52
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:52
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2025-02-14 14:37:52
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:37:52
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
      <StartTime>
2025-02-14 14:37:52
</StartTime>
      <StartTime>
2025-02-14 14:37:52
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:OneSided)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:OneSided are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Fail
</Result>
        <EndTime>
2025-02-14 14:37:52
</EndTime>
      </Statement>
      <Result>
FAIL
</Result>
      <EndTime>
2025-02-14 14:37:52
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2025-02-14 14:37:52
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2025-02-14 14:37:52
</EndTime>
  </TestCase>
  <TestCase Name="3.Envelopes">
    <StartTime>
2025-02-14 14:37:52
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelopes">
      <StartTime>
2025-02-14 14:37:52
</StartTime>
      <StartTime>
2025-02-14 14:37:52
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Envelopes.pdf,HP Smart Printing)">
        <StartTime>
2025-02-14 14:37:52
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:38:25
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,20)">
        <StartTime>
2025-02-14 14:38:25
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:38:25
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2025-02-14 14:38:25
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:38:31
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:38:31
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:38:31
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2025-02-14 14:38:31
</StartTime>
      <StartTime>
2025-02-14 14:38:31
</StartTime>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:38:31
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:38:31
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_Envelope)">
      <StartTime>
2025-02-14 14:38:31
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:38:31
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:38:31
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:38:36
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2025-02-14 14:38:36
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:38:36
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:38:36
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:38:41
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2025-02-14 14:38:41
</StartTime>
      <StartTime>
2025-02-14 14:38:41
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2025-02-14 14:38:41
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:38:44
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2025-02-14 14:38:44
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:38:54
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2025-02-14 14:38:54
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2025-02-14 14:38:54
</StartTime>
          <Block>
            <StartTime>
2025-02-14 14:38:54
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2025-02-14 14:38:54
</EndTime>
          </Block>
          <EndTime>
2025-02-14 14:38:54
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2025-02-14 14:38:54
</EndTime>
      </If>
      <Statement StatementName="Sleep(12)">
        <StartTime>
2025-02-14 14:38:54
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:39:06
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:06
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2025-02-14 14:39:06
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:06
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_EnvelopePlain">
      <StartTime>
2025-02-14 14:39:06
</StartTime>
      <StartTime>
2025-02-14 14:39:06
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:Label)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:Label are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Fail
</Result>
        <EndTime>
2025-02-14 14:39:06
</EndTime>
      </Statement>
      <Result>
FAIL
</Result>
      <EndTime>
2025-02-14 14:39:06
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2025-02-14 14:39:06
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2025-02-14 14:39:06
</EndTime>
  </TestCase>
  <TestCase Name="4.Labels">
    <StartTime>
2025-02-14 14:39:06
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Labels">
      <StartTime>
2025-02-14 14:39:06
</StartTime>
      <StartTime>
2025-02-14 14:39:06
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Labels.pdf,HP Smart Printing)">
        <StartTime>
2025-02-14 14:39:06
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:39:39
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,20)">
        <StartTime>
2025-02-14 14:39:39
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:39:39
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2025-02-14 14:39:39
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:39:45
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:39:45
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:45
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2025-02-14 14:39:45
</StartTime>
      <StartTime>
2025-02-14 14:39:45
</StartTime>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:39:45
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:45
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_Labels)">
      <StartTime>
2025-02-14 14:39:45
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:45
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:39:45
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:50
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2025-02-14 14:39:50
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:50
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2025-02-14 14:39:50
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:39:55
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2025-02-14 14:39:55
</StartTime>
      <StartTime>
2025-02-14 14:39:55
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2025-02-14 14:39:55
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:39:57
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(10)">
        <StartTime>
2025-02-14 14:39:57
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:40:07
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2025-02-14 14:40:07
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2025-02-14 14:40:07
</StartTime>
          <Block>
            <StartTime>
2025-02-14 14:40:07
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2025-02-14 14:40:07
</EndTime>
          </Block>
          <EndTime>
2025-02-14 14:40:07
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2025-02-14 14:40:07
</EndTime>
      </If>
      <Statement StatementName="Sleep(12)">
        <StartTime>
2025-02-14 14:40:07
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2025-02-14 14:40:19
</EndTime>
      </Statement>
      <Result>
PASS
</Result>
      <EndTime>
2025-02-14 14:40:19
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:40:19
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2025-02-14 14:40:19
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2025-02-14 14:40:19
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_Label">
      <StartTime>
2025-02-14 14:40:19
</StartTime>
      <StartTime>
2025-02-14 14:40:19
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
        <EndTime>
2025-02-14 14:40:20
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:40:20
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:Label)">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and psk:Label are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:40:20
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Result>
Error
</Result>
        <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
        <EndTime>
2025-02-14 14:40:20
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Result>
Fail
</Result>
        <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
        <EndTime>
2025-02-14 14:40:20
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Result>
Fail
</Result>
        <EndTime>
2025-02-14 14:40:20
</EndTime>
      </Statement>
      <Result>
FAIL
</Result>
      <EndTime>
2025-02-14 14:40:20
</EndTime>
      <Result>
Fail
</Result>
      <EndTime>
2025-02-14 14:40:20
</EndTime>
    </Statement>
    <Result>
FAIL
</Result>
    <EndTime>
2025-02-14 14:40:20
</EndTime>
  </TestCase>
  <TestCase Name="5.Two-Sided Printing:TwoSidedLongEdge">
    <StartTime>
2025-02-14 14:40:20
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2025-02-14 14:40:20
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2025-02-14 14:40:20
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_TwoSidedLongEdge">
          <StartTime>
2025-02-14 14:40:20
</StartTime>
          <StartTime>
2025-02-14 14:40:20
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_TwoSidedLongEdge.pdf,HP Smart Printing)">
            <StartTime>
2025-02-14 14:40:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:40:52
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,20)">
            <StartTime>
2025-02-14 14:40:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:40:52
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2025-02-14 14:40:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:40:58
</EndTime>
          </Statement>
          <Result>
PASS
</Result>
          <EndTime>
2025-02-14 14:40:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:40:58
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2025-02-14 14:40:58
</StartTime>
          <StartTime>
2025-02-14 14:40:58
</StartTime>
          <Result>
PASS
</Result>
          <EndTime>
2025-02-14 14:40:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:40:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobDuplexAllDocumentsContiguously,Option.TwoSidedLongEdge)">
          <StartTime>
2025-02-14 14:40:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:40:59
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2025-02-14 14:40:59
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_250214_14405923.png
</ScreenShot>
          <EndTime>
2025-02-14 14:40:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2025-02-14 14:40:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:41:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2025-02-14 14:41:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:41:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2025-02-14 14:41:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:41:09
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2025-02-14 14:41:09
</StartTime>
          <StartTime>
2025-02-14 14:41:09
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2025-02-14 14:41:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:41:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(10)">
            <StartTime>
2025-02-14 14:41:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:41:21
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2025-02-14 14:41:21
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2025-02-14 14:41:21
</StartTime>
              <Block>
                <StartTime>
2025-02-14 14:41:21
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2025-02-14 14:41:21
</EndTime>
              </Block>
              <EndTime>
2025-02-14 14:41:21
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2025-02-14 14:41:21
</EndTime>
          </If>
          <Statement StatementName="Sleep(12)">
            <StartTime>
2025-02-14 14:41:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:41:33
</EndTime>
          </Statement>
          <Result>
PASS
</Result>
          <EndTime>
2025-02-14 14:41:33
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:41:33
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2025-02-14 14:41:33
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:41:33
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
          <StartTime>
2025-02-14 14:41:33
</StartTime>
          <StartTime>
2025-02-14 14:41:33
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2025-02-14 14:41:33
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2025-02-14 14:41:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
            <StartTime>
2025-02-14 14:41:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2025-02-14 14:41:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:OneSided)">
            <StartTime>
2025-02-14 14:41:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:OneSided are not same
</ErrorDescription>
            <EndTime>
2025-02-14 14:41:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2025-02-14 14:41:34
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2025-02-14 14:41:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2025-02-14 14:41:34
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2025-02-14 14:41:34
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2025-02-14 14:41:34
</StartTime>
            <Result>
Fail
</Result>
            <EndTime>
2025-02-14 14:41:34
</EndTime>
          </Statement>
          <Result>
FAIL
</Result>
          <EndTime>
2025-02-14 14:41:34
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2025-02-14 14:41:34
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2025-02-14 14:41:34
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2025-02-14 14:41:34
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2025-02-14 14:41:34
</EndTime>
  </TestCase>
  <TestCase Name="6.Two-Sided Printing:TwoSidedShortEdge">
    <StartTime>
2025-02-14 14:41:34
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2025-02-14 14:41:34
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2025-02-14 14:41:34
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_TwoSidedShortEdge">
          <StartTime>
2025-02-14 14:41:34
</StartTime>
          <StartTime>
2025-02-14 14:41:34
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_TwoSidedShortEdge.pdf,HP Smart Printing)">
            <StartTime>
2025-02-14 14:41:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:42:06
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,20)">
            <StartTime>
2025-02-14 14:42:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:42:07
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2025-02-14 14:42:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:42:13
</EndTime>
          </Statement>
          <Result>
PASS
</Result>
          <EndTime>
2025-02-14 14:42:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:13
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2025-02-14 14:42:13
</StartTime>
          <StartTime>
2025-02-14 14:42:13
</StartTime>
          <Result>
PASS
</Result>
          <EndTime>
2025-02-14 14:42:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobDuplexAllDocumentsContiguously,Option.TwoSidedShortEdge)">
          <StartTime>
2025-02-14 14:42:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:13
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2025-02-14 14:42:13
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_250214_14421340.png
</ScreenShot>
          <EndTime>
2025-02-14 14:42:13
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2025-02-14 14:42:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2025-02-14 14:42:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:18
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2025-02-14 14:42:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:23
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2025-02-14 14:42:23
</StartTime>
          <StartTime>
2025-02-14 14:42:23
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2025-02-14 14:42:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:42:25
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(10)">
            <StartTime>
2025-02-14 14:42:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:42:35
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2025-02-14 14:42:35
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2025-02-14 14:42:35
</StartTime>
              <Block>
                <StartTime>
2025-02-14 14:42:35
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2025-02-14 14:42:35
</EndTime>
              </Block>
              <EndTime>
2025-02-14 14:42:35
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2025-02-14 14:42:35
</EndTime>
          </If>
          <Statement StatementName="Sleep(12)">
            <StartTime>
2025-02-14 14:42:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2025-02-14 14:42:47
</EndTime>
          </Statement>
          <Result>
PASS
</Result>
          <EndTime>
2025-02-14 14:42:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:47
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2025-02-14 14:42:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2025-02-14 14:42:48
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedShortEdge">
          <StartTime>
2025-02-14 14:42:48
</StartTime>
          <StartTime>
2025-02-14 14:42:48
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2025-02-14 14:42:48
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
File not exist : C:\temp\H_JobSetup_OutPT.xml
</ErrorDescription>
            <EndTime>
2025-02-14 14:42:48
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
            <StartTime>
2025-02-14 14:42:48
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2025-02-14 14:42:48
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:OneSided)">
            <StartTime>
2025-02-14 14:42:48
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and psk:OneSided are not same
</ErrorDescription>
            <EndTime>
2025-02-14 14:42:48
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2025-02-14 14:42:48
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
XML is not loaded. Use Load or Load From File before getting values
</ErrorDescription>
            <EndTime>
2025-02-14 14:42:48
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2025-02-14 14:42:48
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
${value} and ns0000:OptIn are not same
</ErrorDescription>
            <EndTime>
2025-02-14 14:42:48
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2025-02-14 14:42:48
</StartTime>
            <Result>
Fail
</Result>
            <EndTime>
2025-02-14 14:42:48
</EndTime>
          </Statement>
          <Result>
FAIL
</Result>
          <EndTime>
2025-02-14 14:42:48
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2025-02-14 14:42:48
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2025-02-14 14:42:48
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2025-02-14 14:42:48
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2025-02-14 14:42:48
</EndTime>
  </TestCase>
  <EndTime>
2025-02-14 14:42:48
</EndTime>
</TestSuite>