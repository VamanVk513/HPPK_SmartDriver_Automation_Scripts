<?xml version="1.0" encoding="UTF-8"?>
<TestSuite Name="Sand">
  <StartTime>
2023-02-27 16:29:21
</StartTime>
  <TestCase Name="1.General Everyday Printing">
    <StartTime>
2023-02-27 16:29:21
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_General_Everyday_Printing">
      <StartTime>
2023-02-27 16:29:21
</StartTime>
      <StartTime>
2023-02-27 16:29:21
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_General_Everyday_Printing.pdf,HP Smart Printing)">
        <StartTime>
2023-02-27 16:29:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:29:51
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2023-02-27 16:29:51
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:29:51
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2023-02-27 16:29:51
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:29:57
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:29:57
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:29:57
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2023-02-27 16:29:57
</StartTime>
      <StartTime>
2023-02-27 16:29:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:29:57
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:29:57
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_GeneralPrint)">
      <StartTime>
2023-02-27 16:29:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:29:57
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:29:57
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:03
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2023-02-27 16:30:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:03
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:30:03
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:08
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2023-02-27 16:30:08
</StartTime>
      <StartTime>
2023-02-27 16:30:08
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2023-02-27 16:30:08
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:30:10
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:30:10
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:30:30
</EndTime>
      </Statement>
      <If Condition=" Hallasan.Close Application">
        <StartTime>
2023-02-27 16:30:30
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2023-02-27 16:30:30
</StartTime>
          <Block>
            <StartTime>
2023-02-27 16:30:30
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:30:30
</EndTime>
          </Block>
          <EndTime>
2023-02-27 16:30:30
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:30:30
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:30:30
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:50
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:50
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2023-02-27 16:30:50
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:50
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
      <StartTime>
2023-02-27 16:30:50
</StartTime>
      <StartTime>
2023-02-27 16:30:50
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <Output>
psk:OneSided
</Output>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:OneSided)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:OptIn
</Output>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <Output>
        1 file(s) copied.

</Output>
        <EndTime>
2023-02-27 16:30:50
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:50
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:30:50
</EndTime>
    </Statement>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:30:50
</EndTime>
  </TestCase>
  <TestCase Name="2.EcoSMART Settings">
    <StartTime>
2023-02-27 16:30:50
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_EcoSMART_Settings">
      <StartTime>
2023-02-27 16:30:50
</StartTime>
      <StartTime>
2023-02-27 16:30:50
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_EcoSMART_Settings.pdf,HP Smart Printing)">
        <StartTime>
2023-02-27 16:30:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:31:21
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2023-02-27 16:31:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:31:21
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2023-02-27 16:31:21
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:31:27
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:27
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:27
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2023-02-27 16:31:27
</StartTime>
      <StartTime>
2023-02-27 16:31:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:27
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:27
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_EcoSmart)">
      <StartTime>
2023-02-27 16:31:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:27
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:31:27
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:32
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2023-02-27 16:31:32
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:32
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:31:32
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:31:37
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2023-02-27 16:31:37
</StartTime>
      <StartTime>
2023-02-27 16:31:37
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2023-02-27 16:31:37
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:31:39
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:31:39
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:31:59
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2023-02-27 16:31:59
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2023-02-27 16:31:59
</StartTime>
          <Block>
            <StartTime>
2023-02-27 16:31:59
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:31:59
</EndTime>
          </Block>
          <EndTime>
2023-02-27 16:31:59
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:31:59
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:31:59
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:19
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:19
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2023-02-27 16:32:19
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:19
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
      <StartTime>
2023-02-27 16:32:19
</StartTime>
      <StartTime>
2023-02-27 16:32:19
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2023-02-27 16:32:19
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
        <StartTime>
2023-02-27 16:32:19
</StartTime>
        <Result>
Pass
</Result>
        <Output>
psk:OneSided
</Output>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},psk:OneSided)">
        <StartTime>
2023-02-27 16:32:19
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2023-02-27 16:32:19
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:OptIn
</Output>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2023-02-27 16:32:19
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2023-02-27 16:32:19
</StartTime>
        <Result>
Pass
</Result>
        <Output>
        1 file(s) copied.

</Output>
        <EndTime>
2023-02-27 16:32:19
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:19
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:20
</EndTime>
    </Statement>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:32:20
</EndTime>
  </TestCase>
  <TestCase Name="3.Envelopes">
    <StartTime>
2023-02-27 16:32:20
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Envelopes">
      <StartTime>
2023-02-27 16:32:20
</StartTime>
      <StartTime>
2023-02-27 16:32:20
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Envelopes.pdf,HP Smart Printing)">
        <StartTime>
2023-02-27 16:32:20
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:50
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2023-02-27 16:32:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:50
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2023-02-27 16:32:50
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:32:56
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:56
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:56
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2023-02-27 16:32:56
</StartTime>
      <StartTime>
2023-02-27 16:32:56
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:56
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:56
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_Envelope)">
      <StartTime>
2023-02-27 16:32:56
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:32:56
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:32:56
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:01
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2023-02-27 16:33:01
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:01
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:33:01
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:06
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2023-02-27 16:33:06
</StartTime>
      <StartTime>
2023-02-27 16:33:06
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2023-02-27 16:33:06
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:33:09
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:33:09
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:33:29
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2023-02-27 16:33:29
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2023-02-27 16:33:29
</StartTime>
          <Block>
            <StartTime>
2023-02-27 16:33:29
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:33:29
</EndTime>
          </Block>
          <EndTime>
2023-02-27 16:33:29
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:33:29
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:33:29
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:49
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:49
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2023-02-27 16:33:49
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:49
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_EnvelopePlain">
      <StartTime>
2023-02-27 16:33:49
</StartTime>
      <StartTime>
2023-02-27 16:33:49
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:_8_1076_0000_0_600x600
</Output>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:_8_1076_0000_0_600x600)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:OptIn
</Output>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <Output>
        1 file(s) copied.

</Output>
        <EndTime>
2023-02-27 16:33:49
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:49
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:33:49
</EndTime>
    </Statement>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:33:49
</EndTime>
  </TestCase>
  <TestCase Name="4.Labels">
    <StartTime>
2023-02-27 16:33:49
</StartTime>
    <Statement StatementName="Destination_Selection_Application.Destination Selection_Labels">
      <StartTime>
2023-02-27 16:33:49
</StartTime>
      <StartTime>
2023-02-27 16:33:49
</StartTime>
      <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Labels.pdf,HP Smart Printing)">
        <StartTime>
2023-02-27 16:33:49
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:34:19
</EndTime>
      </Statement>
      <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
        <StartTime>
2023-02-27 16:34:19
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:34:19
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(6)">
        <StartTime>
2023-02-27 16:34:19
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:34:25
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:25
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:25
</EndTime>
    </Statement>
    <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
      <StartTime>
2023-02-27 16:34:25
</StartTime>
      <StartTime>
2023-02-27 16:34:25
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:26
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:26
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Set Combobox (ui_PresetComboBox,_Labels)">
      <StartTime>
2023-02-27 16:34:26
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:26
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:34:26
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:31
</EndTime>
    </Statement>
    <Statement StatementName="Hallasan.Confirm">
      <StartTime>
2023-02-27 16:34:31
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:31
</EndTime>
    </Statement>
    <Statement StatementName="Sleep(5)">
      <StartTime>
2023-02-27 16:34:31
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:34:36
</EndTime>
    </Statement>
    <Statement StatementName="Click_Print_Button.Print">
      <StartTime>
2023-02-27 16:34:36
</StartTime>
      <StartTime>
2023-02-27 16:34:36
</StartTime>
      <Statement StatementName="Hallasan.Click Print Button">
        <StartTime>
2023-02-27 16:34:36
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:34:38
</EndTime>
      </Statement>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:34:38
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:34:58
</EndTime>
      </Statement>
      <If Condition="If :  Hallasan.Close Application">
        <StartTime>
2023-02-27 16:34:58
</StartTime>
        <ConditionResult>
PASS
</ConditionResult>
        <StatementBlock Kind="PASS">
          <StartTime>
2023-02-27 16:34:58
</StartTime>
          <Block>
            <StartTime>
2023-02-27 16:34:58
</StartTime>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:34:58
</EndTime>
          </Block>
          <EndTime>
2023-02-27 16:34:58
</EndTime>
          <Result>
PASS
</Result>
        </StatementBlock>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:34:58
</EndTime>
      </If>
      <Statement StatementName="Sleep(20)">
        <StartTime>
2023-02-27 16:34:58
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:35:18
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:35:18
</EndTime>
    </Statement>
    <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
      <StartTime>
2023-02-27 16:35:18
</StartTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:35:18
</EndTime>
    </Statement>
    <Statement StatementName="Destination_Selection_Application.PT Value_Label">
      <StartTime>
2023-02-27 16:35:18
</StartTime>
      <StartTime>
2023-02-27 16:35:18
</StartTime>
      <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PageMediaType']/psf:Option,name)">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:_8_1076_0000_0_600x600
</Output>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:_8_1076_0000_0_600x600)">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Result>
Pass
</Result>
        <Output>
ns0000:OptIn
</Output>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Statement StatementName="Equals (${value},ns0000:OptIn)">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Result>
Pass
</Result>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Result>
Pass
</Result>
        <Output>
        1 file(s) copied.

</Output>
        <EndTime>
2023-02-27 16:35:18
</EndTime>
      </Statement>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:35:18
</EndTime>
      <Result>
Pass
</Result>
      <EndTime>
2023-02-27 16:35:18
</EndTime>
    </Statement>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:35:18
</EndTime>
  </TestCase>
  <TestCase Name="5.Two-Sided Printing:TwoSidedLongEdge">
    <StartTime>
2023-02-27 16:35:18
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:35:18
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:35:18
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_TwoSidedLongEdge">
          <StartTime>
2023-02-27 16:35:18
</StartTime>
          <StartTime>
2023-02-27 16:35:18
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_TwoSidedLongEdge.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:35:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:35:49
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:35:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:35:49
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:35:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:35:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:35:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:35:55
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:35:55
</StartTime>
          <StartTime>
2023-02-27 16:35:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:35:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:35:55
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobDuplexAllDocumentsContiguously,Option.TwoSidedLongEdge)">
          <StartTime>
2023-02-27 16:35:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:35:55
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:35:55
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16355569.png
</ScreenShot>
          <EndTime>
2023-02-27 16:35:55
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:35:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:36:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:00
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:36:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:05
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:36:05
</StartTime>
          <StartTime>
2023-02-27 16:36:05
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:36:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:36:07
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:36:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:36:28
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:36:28
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:36:28
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:36:28
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:36:28
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:36:28
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:36:28
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:36:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:48
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:36:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:48
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedLongEdge">
          <StartTime>
2023-02-27 16:36:48
</StartTime>
          <StartTime>
2023-02-27 16:36:48
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:OneSided
</Output>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:OneSided)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:36:48
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:36:48
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:36:48
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:36:48
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:36:48
</EndTime>
  </TestCase>
  <TestCase Name="6.Two-Sided Printing:TwoSidedShortEdge">
    <StartTime>
2023-02-27 16:36:48
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:36:48
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:36:48
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_TwoSidedShortEdge">
          <StartTime>
2023-02-27 16:36:48
</StartTime>
          <StartTime>
2023-02-27 16:36:48
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_TwoSidedShortEdge.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:36:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:37:18
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:37:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:37:18
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:37:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:37:24
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:24
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:37:24
</StartTime>
          <StartTime>
2023-02-27 16:37:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobDuplexAllDocumentsContiguously,Option.TwoSidedShortEdge)">
          <StartTime>
2023-02-27 16:37:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:25
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:37:25
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16372518.png
</ScreenShot>
          <EndTime>
2023-02-27 16:37:25
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:37:25
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:30
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:37:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:37:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:37:35
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:37:35
</StartTime>
          <StartTime>
2023-02-27 16:37:35
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:37:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:37:37
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:37:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:37:57
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:37:57
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:37:57
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:37:57
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:37:57
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:37:57
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:37:57
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:37:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:17
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:38:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:17
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_TwoSidedShortEdge">
          <StartTime>
2023-02-27 16:38:17
</StartTime>
          <StartTime>
2023-02-27 16:38:17
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:JobDuplexAllDocumentsContiguously']/psf:Option,name)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:OneSided
</Output>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:OneSided)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:38:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:17
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:38:17
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:38:17
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:38:17
</EndTime>
  </TestCase>
  <TestCase Name="7.Pages per Sheet:2UP_RightBottom">
    <StartTime>
2023-02-27 16:38:17
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:38:17
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:38:17
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_RightBottom">
          <StartTime>
2023-02-27 16:38:17
</StartTime>
          <StartTime>
2023-02-27 16:38:17
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:38:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:48
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:38:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:48
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:38:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:38:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:54
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:38:54
</StartTime>
          <StartTime>
2023-02-27 16:38:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:38:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 16:38:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:38:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:38:54
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16385500.png
</ScreenShot>
          <EndTime>
2023-02-27 16:38:55
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:38:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:39:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:00
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:39:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:05
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:39:05
</StartTime>
          <StartTime>
2023-02-27 16:39:05
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:39:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:07
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:39:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:27
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:39:27
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:39:27
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:39:27
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:39:27
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:39:27
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:39:27
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:39:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:47
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:39:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:47
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_RightBottom">
          <StartTime>
2023-02-27 16:39:47
</StartTime>
          <StartTime>
2023-02-27 16:39:47
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:39:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:39:47
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:39:47
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:39:47
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:39:47
</EndTime>
  </TestCase>
  <TestCase Name="8.Pages per Sheet:2UP_BottomRight">
    <StartTime>
2023-02-27 16:39:47
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:39:47
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:39:47
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomRight">
          <StartTime>
2023-02-27 16:39:47
</StartTime>
          <StartTime>
2023-02-27 16:39:47
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_ BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:39:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:40:18
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:40:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:40:18
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:40:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:40:24
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:40:24
</StartTime>
          <StartTime>
2023-02-27 16:40:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:40:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 16:40:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:40:24
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16402480.png
</ScreenShot>
          <EndTime>
2023-02-27 16:40:24
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:40:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:40:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:40:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:40:34
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:40:34
</StartTime>
          <StartTime>
2023-02-27 16:40:34
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:40:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:40:37
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:40:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:40:57
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:40:57
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:40:57
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:40:57
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:40:57
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:40:57
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:40:57
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:40:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:17
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:41:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:17
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomRight">
          <StartTime>
2023-02-27 16:41:17
</StartTime>
          <StartTime>
2023-02-27 16:41:17
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:41:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:17
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:41:17
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:41:17
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:41:17
</EndTime>
  </TestCase>
  <TestCase Name="9.Pages per Sheet:2UP_LeftBottom">
    <StartTime>
2023-02-27 16:41:17
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:41:17
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:41:17
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_LeftBottom">
          <StartTime>
2023-02-27 16:41:17
</StartTime>
          <StartTime>
2023-02-27 16:41:17
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:41:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:41:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:41:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:41:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:41:54
</StartTime>
          <StartTime>
2023-02-27 16:41:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:41:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 16:41:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:41:54
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16415465.png
</ScreenShot>
          <EndTime>
2023-02-27 16:41:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:41:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:41:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:41:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:41:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:42:04
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:42:04
</StartTime>
          <StartTime>
2023-02-27 16:42:04
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:42:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:42:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:42:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:42:27
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:42:27
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:42:27
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:42:27
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:42:27
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:42:27
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:42:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:42:47
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:42:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:42:47
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_LeftBottom">
          <StartTime>
2023-02-27 16:42:47
</StartTime>
          <StartTime>
2023-02-27 16:42:47
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:42:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:42:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:42:47
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:42:47
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:42:47
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:42:47
</EndTime>
  </TestCase>
  <TestCase Name="10.Pages per Sheet:2UP_BottomLeft">
    <StartTime>
2023-02-27 16:42:47
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:42:47
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:42:47
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomLeft">
          <StartTime>
2023-02-27 16:42:47
</StartTime>
          <StartTime>
2023-02-27 16:42:47
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:42:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:43:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:43:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:43:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:43:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:43:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:43:23
</StartTime>
          <StartTime>
2023-02-27 16:43:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:43:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 16:43:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:24
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:43:24
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16432449.png
</ScreenShot>
          <EndTime>
2023-02-27 16:43:24
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:43:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:43:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:43:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:43:34
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:43:34
</StartTime>
          <StartTime>
2023-02-27 16:43:34
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:43:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:43:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:43:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:43:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:43:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:43:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:43:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:43:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:43:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:43:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:43:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:44:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomLeft">
          <StartTime>
2023-02-27 16:44:16
</StartTime>
          <StartTime>
2023-02-27 16:44:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:44:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:44:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:44:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:44:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:44:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:44:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:44:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:17
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:44:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:44:17
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:44:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:17
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:44:17
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:44:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:17
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:44:17
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:44:17
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:44:17
</EndTime>
  </TestCase>
  <TestCase Name="11.Pages per Sheet:2UP_RightBottom_Boder">
    <StartTime>
2023-02-27 16:44:17
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:44:17
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:44:17
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_RightBottom_Boder">
          <StartTime>
2023-02-27 16:44:17
</StartTime>
          <StartTime>
2023-02-27 16:44:17
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:44:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:44:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:44:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:44:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:44:53
</StartTime>
          <StartTime>
2023-02-27 16:44:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:44:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 16:44:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:44:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:44:54
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16445438.png
</ScreenShot>
          <EndTime>
2023-02-27 16:44:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:44:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:44:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:44:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:44:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:45:04
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:45:04
</StartTime>
          <StartTime>
2023-02-27 16:45:04
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:45:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:45:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:45:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:45:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:45:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:45:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:45:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:45:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:45:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:45:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:45:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:45:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:45:46
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_RightBottom_Boder">
          <StartTime>
2023-02-27 16:45:46
</StartTime>
          <StartTime>
2023-02-27 16:45:46
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:45:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:45:47
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:45:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:45:47
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:45:47
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:45:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:45:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:45:47
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:45:47
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:45:47
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:45:47
</EndTime>
  </TestCase>
  <TestCase Name="12.Pages per Sheet:2UP_BottomRight_Boder">
    <StartTime>
2023-02-27 16:45:47
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:45:47
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:45:47
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomRight_Boder">
          <StartTime>
2023-02-27 16:45:47
</StartTime>
          <StartTime>
2023-02-27 16:45:47
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:45:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:46:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:46:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:46:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:46:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:46:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:46:23
</StartTime>
          <StartTime>
2023-02-27 16:46:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:46:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 16:46:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:46:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:24
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:46:24
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16462432.png
</ScreenShot>
          <EndTime>
2023-02-27 16:46:24
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:46:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:46:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:46:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:46:34
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:46:34
</StartTime>
          <StartTime>
2023-02-27 16:46:34
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:46:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:46:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:46:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:46:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:46:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:46:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:46:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:46:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:46:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:46:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:46:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:47:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomRight_Boder">
          <StartTime>
2023-02-27 16:47:16
</StartTime>
          <StartTime>
2023-02-27 16:47:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:47:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:47:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:17
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:47:17
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:47:17
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:47:17
</EndTime>
  </TestCase>
  <TestCase Name="13.Pages per Sheet:2UP_LeftBottom_Boder">
    <StartTime>
2023-02-27 16:47:17
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:47:17
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:47:17
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 16:47:17
</StartTime>
          <StartTime>
2023-02-27 16:47:17
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:47:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:47:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:47:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:47:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:47:53
</StartTime>
          <StartTime>
2023-02-27 16:47:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:47:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 16:47:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:47:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:47:54
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16475434.png
</ScreenShot>
          <EndTime>
2023-02-27 16:47:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:47:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:47:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:47:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:47:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:48:04
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:48:04
</StartTime>
          <StartTime>
2023-02-27 16:48:04
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:48:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:48:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:48:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:48:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:48:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:48:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:48:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:48:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:48:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:48:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:48:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:48:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:48:46
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 16:48:46
</StartTime>
          <StartTime>
2023-02-27 16:48:46
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:48:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:48:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:48:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:48:47
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:48:47
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:48:47
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:48:47
</EndTime>
  </TestCase>
  <TestCase Name="14.Pages per Sheet:2UP_BottomLeft_Boder">
    <StartTime>
2023-02-27 16:48:47
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:48:47
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:48:47
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_2UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 16:48:47
</StartTime>
          <StartTime>
2023-02-27 16:48:47
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_2UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:48:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:49:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:49:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:49:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:49:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:49:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:49:23
</StartTime>
          <StartTime>
2023-02-27 16:49:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.2)">
          <StartTime>
2023-02-27 16:49:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 16:49:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:49:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:24
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:49:24
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16492430.png
</ScreenShot>
          <EndTime>
2023-02-27 16:49:24
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:49:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:29
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:49:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:49:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:49:34
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:49:34
</StartTime>
          <StartTime>
2023-02-27 16:49:34
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:49:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:49:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:49:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:49:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:49:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:49:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:49:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:49:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:49:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:49:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:49:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:50:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_2UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 16:50:16
</StartTime>
          <StartTime>
2023-02-27 16:50:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:16
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:50:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:50:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:17
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:50:17
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:50:17
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:50:17
</EndTime>
  </TestCase>
  <TestCase Name="15.Pages per Sheet:4UP_RightBottom">
    <StartTime>
2023-02-27 16:50:17
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:50:17
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:50:17
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_RightBottom">
          <StartTime>
2023-02-27 16:50:17
</StartTime>
          <StartTime>
2023-02-27 16:50:17
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:50:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:50:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:50:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:50:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:50:53
</StartTime>
          <StartTime>
2023-02-27 16:50:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:50:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 16:50:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:50:54
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16505409.png
</ScreenShot>
          <EndTime>
2023-02-27 16:50:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:50:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:50:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:50:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:50:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:51:04
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:51:04
</StartTime>
          <StartTime>
2023-02-27 16:51:04
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:51:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:51:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:51:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:51:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:51:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:51:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:51:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:51:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:51:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:51:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:51:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:51:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:51:46
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_RightBottom">
          <StartTime>
2023-02-27 16:51:46
</StartTime>
          <StartTime>
2023-02-27 16:51:46
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:51:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:51:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:51:46
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:51:46
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:51:46
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:51:46
</EndTime>
  </TestCase>
  <TestCase Name="16.Pages per Sheet:4UP_BottomRight">
    <StartTime>
2023-02-27 16:51:46
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:51:46
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:51:46
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomRight">
          <StartTime>
2023-02-27 16:51:46
</StartTime>
          <StartTime>
2023-02-27 16:51:46
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:51:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:52:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:52:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:52:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:52:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:52:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:52:23
</StartTime>
          <StartTime>
2023-02-27 16:52:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:52:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 16:52:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:52:23
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16522393.png
</ScreenShot>
          <EndTime>
2023-02-27 16:52:23
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:52:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:52:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:52:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:52:34
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:52:34
</StartTime>
          <StartTime>
2023-02-27 16:52:34
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:52:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:52:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:52:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:52:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:52:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:52:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:52:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:52:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:52:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:52:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:52:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:53:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomRight">
          <StartTime>
2023-02-27 16:53:16
</StartTime>
          <StartTime>
2023-02-27 16:53:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:53:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:16
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:53:16
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:53:16
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:53:16
</EndTime>
  </TestCase>
  <TestCase Name="17.Pages per Sheet:4UP_LeftBottom">
    <StartTime>
2023-02-27 16:53:16
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:53:16
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:53:16
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_LeftBottom">
          <StartTime>
2023-02-27 16:53:16
</StartTime>
          <StartTime>
2023-02-27 16:53:16
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:53:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:53:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:53:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:53:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:53:53
</StartTime>
          <StartTime>
2023-02-27 16:53:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:53:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 16:53:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:53:53
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16535372.png
</ScreenShot>
          <EndTime>
2023-02-27 16:53:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:53:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:53:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:53:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:53:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:54:03
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:54:03
</StartTime>
          <StartTime>
2023-02-27 16:54:03
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:54:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:54:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:54:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:54:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:54:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:54:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:54:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:54:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:54:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:54:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:54:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:54:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:54:46
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_LeftBottom">
          <StartTime>
2023-02-27 16:54:46
</StartTime>
          <StartTime>
2023-02-27 16:54:46
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:54:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:54:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:54:46
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:54:46
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:54:46
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:54:46
</EndTime>
  </TestCase>
  <TestCase Name="18.Pages per Sheet:4UP_BottomLeft">
    <StartTime>
2023-02-27 16:54:46
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:54:46
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:54:46
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomLeft">
          <StartTime>
2023-02-27 16:54:46
</StartTime>
          <StartTime>
2023-02-27 16:54:46
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:54:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:55:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:55:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:55:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:55:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:55:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:55:23
</StartTime>
          <StartTime>
2023-02-27 16:55:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:55:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 16:55:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:55:23
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16552372.png
</ScreenShot>
          <EndTime>
2023-02-27 16:55:23
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:55:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:55:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:28
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:55:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:55:33
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:55:33
</StartTime>
          <StartTime>
2023-02-27 16:55:33
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:55:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:55:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:55:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:55:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:55:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:55:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:55:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:55:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:55:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:55:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:55:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:56:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomLeft">
          <StartTime>
2023-02-27 16:56:16
</StartTime>
          <StartTime>
2023-02-27 16:56:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:56:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:16
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:56:16
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:56:16
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:56:16
</EndTime>
  </TestCase>
  <TestCase Name="19.Pages per Sheet:4UP_RightBottom_Boder">
    <StartTime>
2023-02-27 16:56:16
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:56:16
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:56:16
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_RightBottom_Boder">
          <StartTime>
2023-02-27 16:56:16
</StartTime>
          <StartTime>
2023-02-27 16:56:16
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:56:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:46
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:56:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:56:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:56:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16565375.png
</ScreenShot>
          <EndTime>
2023-02-27 16:56:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:56:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:56:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:56:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:56:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:57:03
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:57:03
</StartTime>
          <StartTime>
2023-02-27 16:57:03
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:57:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:57:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:57:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:57:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:57:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:57:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:57:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:57:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:57:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:57:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:57:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:57:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:57:46
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_RightBottom_Boder">
          <StartTime>
2023-02-27 16:57:46
</StartTime>
          <StartTime>
2023-02-27 16:57:46
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:57:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:57:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:57:46
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:57:46
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:57:46
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:57:46
</EndTime>
  </TestCase>
  <TestCase Name="20.Pages per Sheet:4UP_BottomRight_Boder">
    <StartTime>
2023-02-27 16:57:46
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:57:46
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:57:46
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomRight_Boder">
          <StartTime>
2023-02-27 16:57:46
</StartTime>
          <StartTime>
2023-02-27 16:57:46
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:57:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:58:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:58:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:58:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:58:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:58:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16582377.png
</ScreenShot>
          <EndTime>
2023-02-27 16:58:23
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:58:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:58:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:28
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:58:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:58:33
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 16:58:33
</StartTime>
          <StartTime>
2023-02-27 16:58:33
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 16:58:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:58:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:58:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:58:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 16:58:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 16:58:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 16:58:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 16:58:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 16:58:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 16:58:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 16:58:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 16:59:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomRight_Boder">
          <StartTime>
2023-02-27 16:59:16
</StartTime>
          <StartTime>
2023-02-27 16:59:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 16:59:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:16
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 16:59:16
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 16:59:16
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 16:59:16
</EndTime>
  </TestCase>
  <TestCase Name="21.Pages per Sheet:4UP_LeftBottom_Boder">
    <StartTime>
2023-02-27 16:59:16
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 16:59:16
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 16:59:16
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 16:59:16
</StartTime>
          <StartTime>
2023-02-27 16:59:16
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 16:59:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 16:59:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 16:59:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 16:59:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_16595384.png
</ScreenShot>
          <EndTime>
2023-02-27 16:59:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:59:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 16:59:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 16:59:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 16:59:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:00:04
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:00:04
</StartTime>
          <StartTime>
2023-02-27 17:00:04
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:00:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:00:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:00:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:00:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:00:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:00:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:00:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:00:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:00:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:00:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:00:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:00:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:00:46
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:00:46
</StartTime>
          <StartTime>
2023-02-27 17:00:46
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:00:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:00:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:00:46
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:00:46
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:00:46
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:00:46
</EndTime>
  </TestCase>
  <TestCase Name="22.Pages per Sheet:4UP_BottomLeft_Boder">
    <StartTime>
2023-02-27 17:00:46
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:00:46
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:00:46
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_4UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:00:46
</StartTime>
          <StartTime>
2023-02-27 17:00:46
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_4UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:00:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:01:17
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:01:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:01:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:01:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:01:23
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.4)">
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17012391.png
</ScreenShot>
          <EndTime>
2023-02-27 17:01:23
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:01:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:01:28
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:29
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:01:29
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:01:34
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:01:34
</StartTime>
          <StartTime>
2023-02-27 17:01:34
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:01:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:01:36
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:01:36
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:01:56
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:01:56
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:01:56
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:01:56
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:01:56
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:01:56
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:01:56
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:01:56
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:16
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:02:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:16
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_4UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:02:16
</StartTime>
          <StartTime>
2023-02-27 17:02:16
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:02:16
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:16
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:16
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:02:16
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:02:16
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:02:16
</EndTime>
  </TestCase>
  <TestCase Name="23.Pages per Sheet:6UP_RightBottom">
    <StartTime>
2023-02-27 17:02:16
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:02:16
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:02:16
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_RightBottom">
          <StartTime>
2023-02-27 17:02:16
</StartTime>
          <StartTime>
2023-02-27 17:02:16
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:02:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:47
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:02:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:47
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:02:47
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:02:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:02:53
</StartTime>
          <StartTime>
2023-02-27 17:02:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:02:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 17:02:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:02:53
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17025382.png
</ScreenShot>
          <EndTime>
2023-02-27 17:02:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:02:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:02:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:02:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:02:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:03:04
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:03:04
</StartTime>
          <StartTime>
2023-02-27 17:03:04
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:03:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:06
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:03:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:26
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:03:26
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:03:26
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:03:26
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:03:26
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:03:26
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:03:26
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:03:26
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:46
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:03:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:03:46
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:03:46
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17035018.png
</ScreenShot>
          <EndTime>
2023-02-27 17:03:50
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_RightBottom">
          <StartTime>
2023-02-27 17:03:50
</StartTime>
          <StartTime>
2023-02-27 17:03:50
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:03:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:03:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:03:50
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:03:50
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:03:50
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:03:50
</EndTime>
  </TestCase>
  <TestCase Name="24.Pages per Sheet:6UP_BottomRight">
    <StartTime>
2023-02-27 17:03:50
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:03:50
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:03:50
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomRight">
          <StartTime>
2023-02-27 17:03:50
</StartTime>
          <StartTime>
2023-02-27 17:03:50
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:03:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:04:20
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:04:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:04:20
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:04:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:04:26
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:26
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:04:26
</StartTime>
          <StartTime>
2023-02-27 17:04:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:26
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:04:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 17:04:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:27
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:04:27
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17042758.png
</ScreenShot>
          <EndTime>
2023-02-27 17:04:27
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:04:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:04:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:32
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:04:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:04:37
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:04:37
</StartTime>
          <StartTime>
2023-02-27 17:04:37
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:04:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:04:39
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:04:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:04:59
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:04:59
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:04:59
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:04:59
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:04:59
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:04:59
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:04:59
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:04:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:20
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:05:20
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:20
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomRight">
          <StartTime>
2023-02-27 17:05:20
</StartTime>
          <StartTime>
2023-02-27 17:05:20
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:05:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:20
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:05:20
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:05:20
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:05:20
</EndTime>
  </TestCase>
  <TestCase Name="25.Pages per Sheet:6UP_LeftBottom">
    <StartTime>
2023-02-27 17:05:20
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:05:20
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:05:20
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_LeftBottom">
          <StartTime>
2023-02-27 17:05:20
</StartTime>
          <StartTime>
2023-02-27 17:05:20
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:05:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:50
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:05:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:50
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:05:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:05:56
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:56
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:05:56
</StartTime>
          <StartTime>
2023-02-27 17:05:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:56
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:05:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 17:05:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:05:57
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:05:57
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17055754.png
</ScreenShot>
          <EndTime>
2023-02-27 17:05:57
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:05:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:06:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:06:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:07
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:06:07
</StartTime>
          <StartTime>
2023-02-27 17:06:07
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:06:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:09
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:06:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:29
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:06:29
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:06:29
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:06:29
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:06:29
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:06:29
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:06:29
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:06:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:49
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:49
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:49
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:06:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:50
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_LeftBottom">
          <StartTime>
2023-02-27 17:06:50
</StartTime>
          <StartTime>
2023-02-27 17:06:50
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:06:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:06:50
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:06:50
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:06:50
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:06:50
</EndTime>
  </TestCase>
  <TestCase Name="26.Pages per Sheet:6UP_BottomLeft">
    <StartTime>
2023-02-27 17:06:50
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:06:50
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:06:50
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomLeft">
          <StartTime>
2023-02-27 17:06:50
</StartTime>
          <StartTime>
2023-02-27 17:06:50
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:06:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:07:20
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:07:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:07:20
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:07:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:07:26
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:26
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:07:26
</StartTime>
          <StartTime>
2023-02-27 17:07:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:26
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:26
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:07:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:07:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:27
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:07:27
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17072757.png
</ScreenShot>
          <EndTime>
2023-02-27 17:07:27
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:07:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:32
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:07:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:32
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:07:32
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:07:37
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:07:37
</StartTime>
          <StartTime>
2023-02-27 17:07:37
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:07:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:07:39
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:07:39
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:07:59
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:07:59
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:08:00
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:08:00
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:08:00
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:08:00
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:08:00
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:08:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:20
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:08:20
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:20
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomLeft">
          <StartTime>
2023-02-27 17:08:20
</StartTime>
          <StartTime>
2023-02-27 17:08:20
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:08:20
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:20
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:20
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:08:20
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:08:20
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:08:20
</EndTime>
  </TestCase>
  <TestCase Name="27.Pages per Sheet:6UP_RightBottom_Boder">
    <StartTime>
2023-02-27 17:08:20
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:08:20
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:08:20
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_RightBottom_Boder">
          <StartTime>
2023-02-27 17:08:20
</StartTime>
          <StartTime>
2023-02-27 17:08:20
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:08:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:50
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:08:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:50
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:08:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:08:56
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:56
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:08:56
</StartTime>
          <StartTime>
2023-02-27 17:08:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:08:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 17:08:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:08:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:08:57
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:08:57
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17085768.png
</ScreenShot>
          <EndTime>
2023-02-27 17:08:57
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:08:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:02
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:09:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:09:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:07
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:09:07
</StartTime>
          <StartTime>
2023-02-27 17:09:07
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:09:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:09:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:30
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:09:30
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:09:30
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:09:30
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:09:30
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:09:30
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:09:30
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:09:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:50
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:09:50
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:50
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_RightBottom_Boder">
          <StartTime>
2023-02-27 17:09:50
</StartTime>
          <StartTime>
2023-02-27 17:09:50
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:09:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:09:50
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:09:50
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:09:50
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:09:50
</EndTime>
  </TestCase>
  <TestCase Name="28.Pages per Sheet:6UP_BottomRight_Boder">
    <StartTime>
2023-02-27 17:09:50
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:09:50
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:09:50
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomRight_Boder">
          <StartTime>
2023-02-27 17:09:50
</StartTime>
          <StartTime>
2023-02-27 17:09:50
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:09:50
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:10:18
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:10:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:10:18
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:10:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:10:24
</EndTime>
          </Statement>
          <Result>
Error
</Result>
          <EndTime>
2023-02-27 17:10:24
</EndTime>
          <Result>
Error
</Result>
          <EndTime>
2023-02-27 17:10:24
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:10:24
</StartTime>
          <StartTime>
2023-02-27 17:10:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:10:24
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:10:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:10:24
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:10:26
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 17:10:26
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:10:28
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:10:28
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Error during Toggle
</ErrorDescription>
          <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.Windows.SetToggle(String toggleAutomationID, String toggleOnOff) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 2329
</AdditionalInfo>
          <EndTime>
2023-02-27 17:10:30
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:10:30
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17103053.png
</ScreenShot>
          <EndTime>
2023-02-27 17:10:30
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:10:30
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:10:35
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:10:35
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17103877.png
</ScreenShot>
          <EndTime>
2023-02-27 17:10:38
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:10:38
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:10:43
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:10:43
</StartTime>
          <StartTime>
2023-02-27 17:10:43
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:10:43
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Error during click print button
</ErrorDescription>
            <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.ApplicationUtils.ClickPrintButtonInAcrobatReader(Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 398
   at HP.GFriend.Keywords.Windows.ClickPrintButton() in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 935
</AdditionalInfo>
            <EndTime>
2023-02-27 17:10:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:10:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:11
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:11:11
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:11:11
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:11:11
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:11:11
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:11:11
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:11:11
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:11:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:31
</EndTime>
          </Statement>
          <Result>
Error
</Result>
          <EndTime>
2023-02-27 17:11:31
</EndTime>
          <Result>
Error
</Result>
          <EndTime>
2023-02-27 17:11:31
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:11:31
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17113441.png
</ScreenShot>
          <EndTime>
2023-02-27 17:11:34
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomRight_Boder">
          <StartTime>
2023-02-27 17:11:34
</StartTime>
          <StartTime>
2023-02-27 17:11:34
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:11:34
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:11:34
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:11:34
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:11:34
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:11:34
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:11:34
</EndTime>
  </TestCase>
  <TestCase Name="29.Pages per Sheet:6UP_LeftBottom_Boder">
    <StartTime>
2023-02-27 17:11:34
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:11:34
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:11:34
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:11:34
</StartTime>
          <StartTime>
2023-02-27 17:11:34
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:11:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:12:05
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:12:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:12:05
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:12:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:12:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17121197.png
</ScreenShot>
          <EndTime>
2023-02-27 17:12:11
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:12:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:17
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:12:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:17
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:12:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:12:22
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:12:22
</StartTime>
          <StartTime>
2023-02-27 17:12:22
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:12:22
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:12:24
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:12:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:12:44
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:12:44
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:12:44
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:12:44
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:12:44
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:12:44
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:12:44
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:12:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:13:04
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:13:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:13:04
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:13:04
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17130764.png
</ScreenShot>
          <EndTime>
2023-02-27 17:13:07
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:13:07
</StartTime>
          <StartTime>
2023-02-27 17:13:07
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:13:07
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:13:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:13:07
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:13:07
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:13:07
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:13:07
</EndTime>
  </TestCase>
  <TestCase Name="30.Pages per Sheet:6UP_BottomLeft_Boder">
    <StartTime>
2023-02-27 17:13:07
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:13:07
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:13:07
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_6UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:13:07
</StartTime>
          <StartTime>
2023-02-27 17:13:07
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_6UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:13:07
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:13:25
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:13:25
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17135556.png
</ScreenShot>
            <EndTime>
2023-02-27 17:13:55
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:13:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:14:01
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:14:01
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:14:01
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:14:01
</StartTime>
          <StartTime>
2023-02-27 17:14:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:14:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:14:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.6)">
          <StartTime>
2023-02-27 17:14:01
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:14:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:14:03
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:14:05
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:14:05
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Error during Toggle
</ErrorDescription>
          <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.Windows.SetToggle(String toggleAutomationID, String toggleOnOff) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 2329
</AdditionalInfo>
          <EndTime>
2023-02-27 17:14:08
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:14:08
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17140812.png
</ScreenShot>
          <EndTime>
2023-02-27 17:14:08
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:14:08
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:14:13
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:14:13
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17141640.png
</ScreenShot>
          <EndTime>
2023-02-27 17:14:16
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:14:16
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:14:21
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:14:21
</StartTime>
          <StartTime>
2023-02-27 17:14:21
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:14:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:14:23
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:14:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:14:43
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:14:43
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:14:43
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:14:43
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:14:43
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:14:43
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:14:43
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:14:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:15:03
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:15:03
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:15:03
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:15:03
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17150688.png
</ScreenShot>
          <EndTime>
2023-02-27 17:15:06
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_6UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:15:06
</StartTime>
          <StartTime>
2023-02-27 17:15:06
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:15:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:15:06
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:15:06
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:15:06
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:15:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:15:06
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:15:06
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:15:07
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:15:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:15:07
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:15:07
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:15:07
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:15:07
</EndTime>
  </TestCase>
  <TestCase Name="31.Pages per Sheet:9UP_RightBottom">
    <StartTime>
2023-02-27 17:15:07
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:15:07
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:15:07
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_RightBottom">
          <StartTime>
2023-02-27 17:15:07
</StartTime>
          <StartTime>
2023-02-27 17:15:07
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:15:07
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:15:24
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:15:24
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17155475.png
</ScreenShot>
            <EndTime>
2023-02-27 17:15:54
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:15:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:16:00
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:16:00
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:16:00
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:16:00
</StartTime>
          <StartTime>
2023-02-27 17:16:00
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:16:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:16:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:16:00
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:16:03
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 17:16:03
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:16:05
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:16:05
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17160519.png
</ScreenShot>
          <EndTime>
2023-02-27 17:16:05
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:16:05
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:16:10
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:16:10
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17161348.png
</ScreenShot>
          <EndTime>
2023-02-27 17:16:13
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:16:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:16:18
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:16:18
</StartTime>
          <StartTime>
2023-02-27 17:16:18
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:16:18
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:16:20
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:16:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:16:40
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:16:40
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:16:40
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:16:40
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:16:40
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:16:40
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:16:40
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:16:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:17:00
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:17:00
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:17:00
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:17:00
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17170391.png
</ScreenShot>
          <EndTime>
2023-02-27 17:17:03
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_RightBottom">
          <StartTime>
2023-02-27 17:17:03
</StartTime>
          <StartTime>
2023-02-27 17:17:03
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:17:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:17:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:17:03
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:17:03
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:17:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:17:03
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:17:03
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:17:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:17:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:17:04
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:17:04
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:17:04
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:17:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:17:04
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:17:04
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:17:04
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:17:04
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:17:04
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:17:04
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:17:04
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:17:04
</EndTime>
  </TestCase>
  <TestCase Name="32.Pages per Sheet:9UP_BottomRight">
    <StartTime>
2023-02-27 17:17:04
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:17:04
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:17:04
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomRight">
          <StartTime>
2023-02-27 17:17:04
</StartTime>
          <StartTime>
2023-02-27 17:17:04
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:17:04
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:17:21
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:17:21
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17175173.png
</ScreenShot>
            <EndTime>
2023-02-27 17:17:51
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:17:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:17:57
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:17:57
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:17:57
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:17:57
</StartTime>
          <StartTime>
2023-02-27 17:17:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:17:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:17:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:17:57
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:17:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 17:17:59
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:18:02
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:18:02
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17180220.png
</ScreenShot>
          <EndTime>
2023-02-27 17:18:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:18:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:18:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:18:07
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17181046.png
</ScreenShot>
          <EndTime>
2023-02-27 17:18:10
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:18:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:18:15
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:18:15
</StartTime>
          <StartTime>
2023-02-27 17:18:15
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:18:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:18:17
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:18:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:18:37
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:18:37
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:18:37
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:18:37
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:18:37
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:18:37
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:18:37
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:18:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:18:57
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:18:57
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:18:57
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:18:57
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17190092.png
</ScreenShot>
          <EndTime>
2023-02-27 17:19:00
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomRight">
          <StartTime>
2023-02-27 17:19:00
</StartTime>
          <StartTime>
2023-02-27 17:19:00
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:19:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:19:00
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:19:00
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:19:00
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:19:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:19:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:19:01
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:19:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:19:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:19:01
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:19:01
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:19:01
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:19:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:19:01
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:19:01
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:19:01
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:19:01
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:19:01
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:19:01
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:19:01
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:19:01
</EndTime>
  </TestCase>
  <TestCase Name="33.Pages per Sheet:9UP_LeftBottom">
    <StartTime>
2023-02-27 17:19:01
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:19:01
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:19:01
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_LeftBottom">
          <StartTime>
2023-02-27 17:19:01
</StartTime>
          <StartTime>
2023-02-27 17:19:01
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:19:01
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:19:18
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:19:18
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17194872.png
</ScreenShot>
            <EndTime>
2023-02-27 17:19:48
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:19:48
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:19:54
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:19:54
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:19:54
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:19:54
</StartTime>
          <StartTime>
2023-02-27 17:19:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:19:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:19:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:19:54
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:19:56
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 17:19:56
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:19:59
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:19:59
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17195917.png
</ScreenShot>
          <EndTime>
2023-02-27 17:19:59
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:19:59
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:20:04
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:20:04
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17200747.png
</ScreenShot>
          <EndTime>
2023-02-27 17:20:07
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:20:07
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:20:12
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:20:12
</StartTime>
          <StartTime>
2023-02-27 17:20:12
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:20:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:14
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:20:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:34
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:20:34
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:20:34
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:20:34
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:20:34
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:20:34
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:20:34
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:20:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:20:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:20:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:20:54
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17205788.png
</ScreenShot>
          <EndTime>
2023-02-27 17:20:57
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_LeftBottom">
          <StartTime>
2023-02-27 17:20:57
</StartTime>
          <StartTime>
2023-02-27 17:20:57
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:20:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:20:57
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:20:57
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:20:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:57
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:20:57
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:20:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:20:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:58
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:20:58
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:20:58
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:20:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:20:58
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:20:58
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:20:58
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:20:58
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:20:58
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:20:58
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:20:58
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:20:58
</EndTime>
  </TestCase>
  <TestCase Name="34.Pages per Sheet:9UP_BottomLeft">
    <StartTime>
2023-02-27 17:20:58
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:20:58
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:20:58
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomLeft">
          <StartTime>
2023-02-27 17:20:58
</StartTime>
          <StartTime>
2023-02-27 17:20:58
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:20:58
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:21:15
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:21:15
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17214576.png
</ScreenShot>
            <EndTime>
2023-02-27 17:21:45
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:21:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:21:51
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:21:51
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:21:51
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:21:51
</StartTime>
          <StartTime>
2023-02-27 17:21:51
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:21:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:21:51
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:21:51
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:21:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:21:53
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:21:56
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:21:56
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17215619.png
</ScreenShot>
          <EndTime>
2023-02-27 17:21:56
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:21:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:22:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:22:01
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17220446.png
</ScreenShot>
          <EndTime>
2023-02-27 17:22:04
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:22:04
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:22:09
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:22:09
</StartTime>
          <StartTime>
2023-02-27 17:22:09
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:22:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:22:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:31
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:22:31
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:22:31
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:22:31
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:22:31
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:22:31
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:22:31
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:22:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:51
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:22:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:22:51
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:22:51
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17225495.png
</ScreenShot>
          <EndTime>
2023-02-27 17:22:54
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomLeft">
          <StartTime>
2023-02-27 17:22:54
</StartTime>
          <StartTime>
2023-02-27 17:22:54
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:22:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:22:55
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:22:55
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:22:55
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:22:55
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:22:55
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:22:55
</EndTime>
  </TestCase>
  <TestCase Name="35.Pages per Sheet:9UP_RightBottom_Boder">
    <StartTime>
2023-02-27 17:22:55
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:22:55
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:22:55
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_RightBottom_Boder">
          <StartTime>
2023-02-27 17:22:55
</StartTime>
          <StartTime>
2023-02-27 17:22:55
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:22:55
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:23:12
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:23:12
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17234276.png
</ScreenShot>
            <EndTime>
2023-02-27 17:23:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:23:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:23:48
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:23:48
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:23:48
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:23:48
</StartTime>
          <StartTime>
2023-02-27 17:23:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:23:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:23:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:23:48
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:23:51
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 17:23:51
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:23:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:23:53
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Error during Toggle
</ErrorDescription>
          <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.Windows.SetToggle(String toggleAutomationID, String toggleOnOff) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 2329
</AdditionalInfo>
          <EndTime>
2023-02-27 17:23:55
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:23:55
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17235538.png
</ScreenShot>
          <EndTime>
2023-02-27 17:23:55
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:23:55
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:24:00
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:24:00
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17240366.png
</ScreenShot>
          <EndTime>
2023-02-27 17:24:03
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:24:03
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:24:08
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:24:08
</StartTime>
          <StartTime>
2023-02-27 17:24:08
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:24:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:10
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:24:10
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:30
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:24:30
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:24:30
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:24:30
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:24:30
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:24:30
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:24:30
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:24:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:24:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:24:50
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:24:50
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17245410.png
</ScreenShot>
          <EndTime>
2023-02-27 17:24:54
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_RightBottom_Boder">
          <StartTime>
2023-02-27 17:24:54
</StartTime>
          <StartTime>
2023-02-27 17:24:54
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:24:54
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:24:54
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:24:54
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:24:54
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:24:54
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:24:54
</EndTime>
  </TestCase>
  <TestCase Name="36.Pages per Sheet:9UP_BottomRight_Boder">
    <StartTime>
2023-02-27 17:24:54
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:24:54
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:24:54
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomRight_Boder">
          <StartTime>
2023-02-27 17:24:54
</StartTime>
          <StartTime>
2023-02-27 17:24:54
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:24:54
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:25:11
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:25:11
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17254198.png
</ScreenShot>
            <EndTime>
2023-02-27 17:25:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:25:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:25:48
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:25:48
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:25:48
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:25:48
</StartTime>
          <StartTime>
2023-02-27 17:25:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:25:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:25:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:25:48
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:25:50
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 17:25:50
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:25:52
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:25:52
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Error during Toggle
</ErrorDescription>
          <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.Windows.SetToggle(String toggleAutomationID, String toggleOnOff) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 2329
</AdditionalInfo>
          <EndTime>
2023-02-27 17:25:54
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:25:54
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17255460.png
</ScreenShot>
          <EndTime>
2023-02-27 17:25:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:25:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:25:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:25:59
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17260287.png
</ScreenShot>
          <EndTime>
2023-02-27 17:26:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:26:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:26:07
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:26:07
</StartTime>
          <StartTime>
2023-02-27 17:26:07
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:26:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:09
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:26:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:30
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:26:30
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:26:30
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:26:30
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:26:30
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:26:30
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:26:30
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:26:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:26:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:26:50
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:26:50
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17265332.png
</ScreenShot>
          <EndTime>
2023-02-27 17:26:53
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomRight_Boder">
          <StartTime>
2023-02-27 17:26:53
</StartTime>
          <StartTime>
2023-02-27 17:26:53
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:26:53
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:26:53
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:26:53
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:26:53
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:26:53
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:26:53
</EndTime>
  </TestCase>
  <TestCase Name="37.Pages per Sheet:9UP_LeftBottom_Boder">
    <StartTime>
2023-02-27 17:26:53
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:26:53
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:26:53
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:26:53
</StartTime>
          <StartTime>
2023-02-27 17:26:53
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:26:53
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:27:10
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:27:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17274118.png
</ScreenShot>
            <EndTime>
2023-02-27 17:27:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:27:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:27:47
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:27:47
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:27:47
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:27:47
</StartTime>
          <StartTime>
2023-02-27 17:27:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:27:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:27:47
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:27:47
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:27:49
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 17:27:49
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:27:51
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:27:51
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Error during Toggle
</ErrorDescription>
          <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.Windows.SetToggle(String toggleAutomationID, String toggleOnOff) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 2329
</AdditionalInfo>
          <EndTime>
2023-02-27 17:27:53
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:27:53
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17275380.png
</ScreenShot>
          <EndTime>
2023-02-27 17:27:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:27:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:27:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:27:58
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17280209.png
</ScreenShot>
          <EndTime>
2023-02-27 17:28:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:28:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:28:07
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:28:07
</StartTime>
          <StartTime>
2023-02-27 17:28:07
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:28:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:09
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:28:09
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:29
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:28:29
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:28:29
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:28:29
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:28:29
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:28:29
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:28:29
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:28:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:49
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:28:49
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:28:49
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:28:49
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17285257.png
</ScreenShot>
          <EndTime>
2023-02-27 17:28:52
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:28:52
</StartTime>
          <StartTime>
2023-02-27 17:28:52
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:28:52
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:28:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:28:52
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:28:52
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:28:52
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:28:52
</EndTime>
  </TestCase>
  <TestCase Name="38.Pages per Sheet:9UP_BottomLeft_Boder">
    <StartTime>
2023-02-27 17:28:52
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:28:52
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:28:52
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_9UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:28:52
</StartTime>
          <StartTime>
2023-02-27 17:28:52
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_9UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:28:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentNullException: Value cannot be null.
Parameter name: element
   at System.Windows.Automation.TreeWalker.GetParent(AutomationElement element)
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:29:10
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:29:10
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17294047.png
</ScreenShot>
            <EndTime>
2023-02-27 17:29:40
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:29:40
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:29:46
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:29:46
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:29:46
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:29:46
</StartTime>
          <StartTime>
2023-02-27 17:29:46
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:29:46
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:29:46
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.9)">
          <StartTime>
2023-02-27 17:29:46
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:29:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:29:48
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:29:50
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:29:50
</StartTime>
          <Result>
Error
</Result>
          <ErrorDescription>
Error during Toggle
</ErrorDescription>
          <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.Windows.SetToggle(String toggleAutomationID, String toggleOnOff) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 2329
</AdditionalInfo>
          <EndTime>
2023-02-27 17:29:53
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:29:53
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17295307.png
</ScreenShot>
          <EndTime>
2023-02-27 17:29:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:29:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:29:58
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:29:58
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17300136.png
</ScreenShot>
          <EndTime>
2023-02-27 17:30:01
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:30:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:30:06
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:30:06
</StartTime>
          <StartTime>
2023-02-27 17:30:06
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:30:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:08
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:30:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:28
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:30:28
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:30:28
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:30:28
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:30:28
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:30:28
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:30:28
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:30:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:48
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:30:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:30:48
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:30:48
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17305181.png
</ScreenShot>
          <EndTime>
2023-02-27 17:30:51
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_9UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:30:51
</StartTime>
          <StartTime>
2023-02-27 17:30:51
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:51
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:30:51
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:30:52
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:30:52
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:30:52
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:30:52
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:30:52
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:30:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:30:52
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:30:52
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:30:52
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:30:52
</EndTime>
  </TestCase>
  <TestCase Name="39.Pages per Sheet:16UP_RightBottom">
    <StartTime>
2023-02-27 17:30:52
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:30:52
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:30:52
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_RightBottom">
          <StartTime>
2023-02-27 17:30:52
</StartTime>
          <StartTime>
2023-02-27 17:30:52
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_RightBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:30:52
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Unexpected exception
</ErrorDescription>
            <AdditionalInfo>
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Utils.UIAManaged.ApplicationUtilsManaged.OpenAcrobatReader(String filePath, String printerName, WindowsManaged windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFUtils\UIAManaged\ApplicationUtilsManaged.cs:line 37
   at HP.GFriend.Keywords.ApplicationUtils.OpenAcrobatReader(String filePath, String printerName, Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 292
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at HP.GFriend.Core.Execution.Executor.Execute(Statement aStatement, TestDataManager testDataManager, Int32 repeat, Int32 stackLevel, Dictionary`2 arguments)
</AdditionalInfo>
            <EndTime>
2023-02-27 17:31:19
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:31:19
</StartTime>
            <Result>
Fail
</Result>
            <ErrorDescription>
Can not find element with given name : HP Smart Printing
</ErrorDescription>
            <ScreenShot>
.\Windows_Screenshot_230227_17315078.png
</ScreenShot>
            <EndTime>
2023-02-27 17:31:50
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:31:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:31:56
</EndTime>
          </Statement>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:31:56
</EndTime>
          <Result>
Fail
</Result>
          <EndTime>
2023-02-27 17:31:56
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:31:56
</StartTime>
          <StartTime>
2023-02-27 17:31:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:31:56
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:31:56
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:31:56
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.DocumentNUp
</ErrorDescription>
          <EndTime>
2023-02-27 17:31:59
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 17:31:59
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find combobox : Part.PresentationDirection
</ErrorDescription>
          <EndTime>
2023-02-27 17:32:02
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:32:02
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17320221.png
</ScreenShot>
          <EndTime>
2023-02-27 17:32:02
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:32:02
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:32:07
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:32:07
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : App.OK
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17321127.png
</ScreenShot>
          <EndTime>
2023-02-27 17:32:11
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:32:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:32:16
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:32:16
</StartTime>
          <StartTime>
2023-02-27 17:32:16
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:32:16
</StartTime>
            <Result>
Error
</Result>
            <ErrorDescription>
Error during click print button
</ErrorDescription>
            <AdditionalInfo>
System.NullReferenceException: Object reference not set to an instance of an object.
   at HP.GFriend.Keywords.ApplicationUtils.ClickPrintButtonInAcrobatReader(Windows windowsController) in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\ApplicationUtils.cs:line 398
   at HP.GFriend.Keywords.Windows.ClickPrintButton() in C:\Jenkins\workspace\Build_And_Release_GFriend_Official\GFLibraries\GFK.Windows\Windows.cs:line 935
</AdditionalInfo>
            <EndTime>
2023-02-27 17:32:23
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:32:23
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:32:43
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:32:43
</StartTime>
            <ConditionResult>
ERROR
</ConditionResult>
            <ErrorDescription>
Error during close
</ErrorDescription>
            <StatementBlock Kind="ERROR">
              <StartTime>
2023-02-27 17:32:43
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:32:43
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:32:43
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:32:43
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:32:43
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:32:43
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:03
</EndTime>
          </Statement>
          <Result>
Error
</Result>
          <EndTime>
2023-02-27 17:33:03
</EndTime>
          <Result>
Error
</Result>
          <EndTime>
2023-02-27 17:33:03
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:33:03
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Can not find element with given automation ID : PrintingToDialog.ui_ContentFrame.PrintButton
</ErrorDescription>
          <ScreenShot>
.\Windows_Screenshot_230227_17330761.png
</ScreenShot>
          <EndTime>
2023-02-27 17:33:07
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_RightBottom">
          <StartTime>
2023-02-27 17:33:07
</StartTime>
          <StartTime>
2023-02-27 17:33:07
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:33:07
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:07
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:07
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:33:07
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:33:07
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:33:07
</EndTime>
  </TestCase>
  <TestCase Name="40.Pages per Sheet:16UP_BottomRight">
    <StartTime>
2023-02-27 17:33:07
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:33:07
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:33:07
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomRight">
          <StartTime>
2023-02-27 17:33:07
</StartTime>
          <StartTime>
2023-02-27 17:33:07
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomRight.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:33:07
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:38
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:33:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:38
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:33:38
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:44
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:44
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:44
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:33:44
</StartTime>
          <StartTime>
2023-02-27 17:33:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:44
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:33:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:44
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 17:33:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:45
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:33:45
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17334513.png
</ScreenShot>
          <EndTime>
2023-02-27 17:33:45
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:33:45
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:50
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:33:50
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:50
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:33:50
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:33:55
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:33:55
</StartTime>
          <StartTime>
2023-02-27 17:33:55
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:33:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:33:57
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:33:57
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:34:17
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:34:17
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:34:17
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:34:17
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:34:17
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:34:17
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:34:17
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:34:17
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:34:37
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:34:37
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:34:37
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:34:37
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomRight">
          <StartTime>
2023-02-27 17:34:37
</StartTime>
          <StartTime>
2023-02-27 17:34:37
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:34:37
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:34:37
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:34:37
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:34:37
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:34:37
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:34:37
</EndTime>
  </TestCase>
  <TestCase Name="41.Pages per Sheet:16UP_LeftBottom">
    <StartTime>
2023-02-27 17:34:37
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:34:37
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:34:37
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_LeftBottom">
          <StartTime>
2023-02-27 17:34:37
</StartTime>
          <StartTime>
2023-02-27 17:34:37
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_LeftBottom.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:34:37
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:35:11
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:35:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:35:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:35:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:35:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:17
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:35:17
</StartTime>
          <StartTime>
2023-02-27 17:35:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:17
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:35:17
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 17:35:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:18
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:35:18
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17351851.png
</ScreenShot>
          <EndTime>
2023-02-27 17:35:18
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:35:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:35:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:23
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:35:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:35:28
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:35:28
</StartTime>
          <StartTime>
2023-02-27 17:35:28
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:35:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:35:30
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:35:30
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:35:50
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:35:50
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:35:50
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:35:50
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:35:50
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:35:50
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:35:50
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:35:50
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:10
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:10
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:10
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:36:10
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:11
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_LeftBottom">
          <StartTime>
2023-02-27 17:36:11
</StartTime>
          <StartTime>
2023-02-27 17:36:11
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:36:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:11
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:36:11
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:36:11
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:36:11
</EndTime>
  </TestCase>
  <TestCase Name="42.Pages per Sheet:16UP_BottomLeft">
    <StartTime>
2023-02-27 17:36:11
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:36:11
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:36:11
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomLeft">
          <StartTime>
2023-02-27 17:36:11
</StartTime>
          <StartTime>
2023-02-27 17:36:11
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomLeft.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:36:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:41
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:36:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:41
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:36:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:36:47
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:47
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:36:47
</StartTime>
          <StartTime>
2023-02-27 17:36:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:47
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:47
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:36:47
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:36:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:48
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:36:48
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17364857.png
</ScreenShot>
          <EndTime>
2023-02-27 17:36:48
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:36:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:36:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:53
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:36:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:36:58
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:36:58
</StartTime>
          <StartTime>
2023-02-27 17:36:58
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:36:58
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:00
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:37:00
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:20
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:37:20
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:37:20
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:37:20
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:37:20
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:37:20
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:37:20
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:37:20
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:37:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:37:41
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:37:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:37:41
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomLeft">
          <StartTime>
2023-02-27 17:37:41
</StartTime>
          <StartTime>
2023-02-27 17:37:41
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:37:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:37:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:37:41
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:37:41
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:37:41
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:37:41
</EndTime>
  </TestCase>
  <TestCase Name="43.Pages per Sheet:16UP_RightBottom_Boder">
    <StartTime>
2023-02-27 17:37:41
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:37:41
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:37:41
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_RightBottom_Boder">
          <StartTime>
2023-02-27 17:37:41
</StartTime>
          <StartTime>
2023-02-27 17:37:41
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_RightBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:37:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:38:11
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:38:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:38:11
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:38:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:38:17
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:17
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.RightBottom)">
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17381864.png
</ScreenShot>
          <EndTime>
2023-02-27 17:38:18
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:38:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:23
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:38:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:23
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:38:23
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:38:28
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:38:28
</StartTime>
          <StartTime>
2023-02-27 17:38:28
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:38:28
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:38:31
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:38:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:38:51
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:38:51
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:38:51
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:38:51
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:38:51
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:38:51
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:38:51
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:38:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:11
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:39:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:11
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_RightBottom_Boder">
          <StartTime>
2023-02-27 17:39:11
</StartTime>
          <StartTime>
2023-02-27 17:39:11
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:39:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:11
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:39:11
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:39:11
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:39:11
</EndTime>
  </TestCase>
  <TestCase Name="44.Pages per Sheet:16UP_BottomRight_Boder">
    <StartTime>
2023-02-27 17:39:11
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:39:11
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:39:11
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomRight_Boder">
          <StartTime>
2023-02-27 17:39:11
</StartTime>
          <StartTime>
2023-02-27 17:39:11
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomRight_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:39:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:42
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:39:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:39:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:39:48
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomRight)">
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17394887.png
</ScreenShot>
          <EndTime>
2023-02-27 17:39:48
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:39:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:53
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:39:53
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:39:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:39:59
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:39:59
</StartTime>
          <StartTime>
2023-02-27 17:39:59
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:39:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:01
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:40:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:21
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:40:21
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:40:21
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:40:21
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:40:21
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:40:21
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:40:21
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:40:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:40:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:40:41
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:40:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:40:41
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomRight_Boder">
          <StartTime>
2023-02-27 17:40:41
</StartTime>
          <StartTime>
2023-02-27 17:40:41
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:40:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:40:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:40:41
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:40:41
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:40:41
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:40:41
</EndTime>
  </TestCase>
  <TestCase Name="45.Pages per Sheet:16UP_LeftBottom_Boder">
    <StartTime>
2023-02-27 17:40:41
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:40:41
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:40:41
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:40:41
</StartTime>
          <StartTime>
2023-02-27 17:40:41
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_LeftBottom_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:40:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:41:12
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:41:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:41:12
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:41:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:41:18
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:18
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:18
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:41:18
</StartTime>
          <StartTime>
2023-02-27 17:41:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:18
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:41:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.LeftBottom)">
          <StartTime>
2023-02-27 17:41:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:41:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:19
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:41:19
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17411907.png
</ScreenShot>
          <EndTime>
2023-02-27 17:41:19
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:41:19
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:24
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:41:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:24
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:41:24
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:41:29
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:41:29
</StartTime>
          <StartTime>
2023-02-27 17:41:29
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:41:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:41:31
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:41:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:41:51
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:41:51
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:41:51
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:41:51
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:41:51
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:41:51
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:41:51
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:41:51
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:11
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:42:11
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:11
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_LeftBottom_Boder">
          <StartTime>
2023-02-27 17:42:11
</StartTime>
          <StartTime>
2023-02-27 17:42:11
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:42:11
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:11
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:11
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:42:11
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:42:11
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:42:11
</EndTime>
  </TestCase>
  <TestCase Name="46.Pages per Sheet:16UP_BottomLeft_Boder">
    <StartTime>
2023-02-27 17:42:11
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:42:11
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:42:11
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_16UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:42:11
</StartTime>
          <StartTime>
2023-02-27 17:42:11
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_16UP_BottomLeft_Boder.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:42:11
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:42
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:42:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:42
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:42:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:42:48
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:48
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:42:48
</StartTime>
          <StartTime>
2023-02-27 17:42:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:48
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.DocumentNUp,Option.16)">
          <StartTime>
2023-02-27 17:42:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:48
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.PresentationDirection,Option.BottomLeft)">
          <StartTime>
2023-02-27 17:42:48
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:49
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle(Part.NUpBorders,On)">
          <StartTime>
2023-02-27 17:42:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:49
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:42:49
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17424926.png
</ScreenShot>
          <EndTime>
2023-02-27 17:42:49
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:42:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:54
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:42:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:54
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:42:54
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:42:59
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:42:59
</StartTime>
          <StartTime>
2023-02-27 17:42:59
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:42:59
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:01
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:43:01
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:21
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:43:21
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:43:21
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:43:21
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:43:21
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:43:21
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:43:21
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:43:21
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:43:41
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:43:41
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:43:41
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:43:41
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_16UP_BottomLeft_Boder">
          <StartTime>
2023-02-27 17:43:41
</StartTime>
          <StartTime>
2023-02-27 17:43:41
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:PagesPerSheet']/psf:Value)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
4
</Output>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},4)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:PresentationDirection']/psf:Option,name)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:RightBottom
</Output>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:RightBottom)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:NUpBorders']/psf:Option,name)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:On
</Output>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:On)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:43:41
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:43:41
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:43:42
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:43:42
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:43:42
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:43:42
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:43:42
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:43:42
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:43:42
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:43:42
</EndTime>
  </TestCase>
  <TestCase Name="47.Print Quality:Normal">
    <StartTime>
2023-02-27 17:43:42
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:43:42
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:43:42
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_NormalMode">
          <StartTime>
2023-02-27 17:43:42
</StartTime>
          <StartTime>
2023-02-27 17:43:42
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Normal.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:43:42
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:44:12
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2023-02-27 17:44:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:44:12
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:44:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:44:12
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:44:12
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:44:18
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:18
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:18
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:44:18
</StartTime>
          <StartTime>
2023-02-27 17:44:18
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:18
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:18
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobUserResolution,Option.Normal)">
          <StartTime>
2023-02-27 17:44:18
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.JobUserResolution - Option.Normal
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17442097.png
</ScreenShot>
          <EndTime>
2023-02-27 17:44:20
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:44:20
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17442103.png
</ScreenShot>
          <EndTime>
2023-02-27 17:44:21
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:44:21
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:26
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:44:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:26
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:44:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:44:31
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:44:31
</StartTime>
          <StartTime>
2023-02-27 17:44:31
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:44:31
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:44:33
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:44:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:44:53
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:44:53
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:44:53
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:44:53
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:44:53
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:44:53
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:44:53
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:44:53
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:13
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:45:13
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:13
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Normal">
          <StartTime>
2023-02-27 17:45:13
</StartTime>
          <StartTime>
2023-02-27 17:45:13
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobUserResolution']/psf:Option,name)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:HPS_Normal
</Output>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:HPS_Normal)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:45:13
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:13
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:13
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:45:13
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:45:13
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:45:13
</EndTime>
  </TestCase>
  <TestCase Name="48.Print Quality:Economode">
    <StartTime>
2023-02-27 17:45:13
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:45:13
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:45:13
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_HPS_Economode">
          <StartTime>
2023-02-27 17:45:13
</StartTime>
          <StartTime>
2023-02-27 17:45:13
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_PQEconomode.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:45:13
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:44
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2023-02-27 17:45:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:44
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:45:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:44
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:45:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:45:50
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:50
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:45:50
</StartTime>
          <StartTime>
2023-02-27 17:45:50
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:50
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:50
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Combobox (Part.JobUserResolution,Option.EconoMode)">
          <StartTime>
2023-02-27 17:45:50
</StartTime>
          <Result>
Fail
</Result>
          <ErrorDescription>
Combobx click fail : Part.JobUserResolution - Option.EconoMode
</ErrorDescription>
          <ScreenShot>
.\Hallasan_Screenshot_230227_17455272.png
</ScreenShot>
          <EndTime>
2023-02-27 17:45:52
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:45:52
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17455279.png
</ScreenShot>
          <EndTime>
2023-02-27 17:45:52
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:45:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:45:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:45:58
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:45:58
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:46:03
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:46:03
</StartTime>
          <StartTime>
2023-02-27 17:46:03
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:46:03
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:46:05
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:46:05
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:46:25
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:46:25
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:46:25
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:46:25
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:46:25
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:46:25
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:46:25
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:46:25
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:46:45
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:46:45
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:46:45
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:46:45
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_HPS_Economode">
          <StartTime>
2023-02-27 17:46:45
</StartTime>
          <StartTime>
2023-02-27 17:46:45
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobUserResolution']/psf:Option,name)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:HPS_Normal
</Output>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:HPS_Normal)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:46:45
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:46:45
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:46:45
</EndTime>
        </Statement>
        <Result>
FAIL
</Result>
        <EndTime>
2023-02-27 17:46:45
</EndTime>
      </Loop>
      <Result>
FAIL
</Result>
      <EndTime>
2023-02-27 17:46:45
</EndTime>
    </Repeat>
    <Result>
FAIL
</Result>
    <EndTime>
2023-02-27 17:46:45
</EndTime>
  </TestCase>
  <TestCase Name="49.Copy Count:2">
    <StartTime>
2023-02-27 17:46:45
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:46:45
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:46:45
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Copies_2">
          <StartTime>
2023-02-27 17:46:45
</StartTime>
          <StartTime>
2023-02-27 17:46:45
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Copies_2.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:46:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2023-02-27 17:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:47:16
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:47:16
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:47:22
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:22
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:47:22
</StartTime>
          <StartTime>
2023-02-27 17:47:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:22
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:22
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,2)">
          <StartTime>
2023-02-27 17:47:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:22
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:47:22
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17472267.png
</ScreenShot>
          <EndTime>
2023-02-27 17:47:22
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:47:22
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:27
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:47:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:27
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:47:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:47:32
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:47:32
</StartTime>
          <StartTime>
2023-02-27 17:47:32
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:47:33
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:47:35
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:47:35
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:47:55
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:47:55
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:47:55
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:47:55
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:47:55
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:47:55
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:47:55
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:47:55
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:15
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:15
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:48:15
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:15
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Copies_2">
          <StartTime>
2023-02-27 17:48:15
</StartTime>
          <StartTime>
2023-02-27 17:48:15
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:JobCopiesAllDocuments']/psf:Value)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <Output>
1
</Output>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},1)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:48:15
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:15
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:15
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:48:15
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:48:15
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:48:15
</EndTime>
  </TestCase>
  <TestCase Name="50.Copy Count:4">
    <StartTime>
2023-02-27 17:48:15
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:48:15
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:48:15
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Copies_4">
          <StartTime>
2023-02-27 17:48:15
</StartTime>
          <StartTime>
2023-02-27 17:48:15
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Copies_4.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:48:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2023-02-27 17:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:46
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:48:46
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:48:52
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:52
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:48:52
</StartTime>
          <StartTime>
2023-02-27 17:48:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:52
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:52
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,4)">
          <StartTime>
2023-02-27 17:48:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:52
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:48:52
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17485232.png
</ScreenShot>
          <EndTime>
2023-02-27 17:48:52
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:48:52
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:57
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:48:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:48:57
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:48:57
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:49:02
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:49:02
</StartTime>
          <StartTime>
2023-02-27 17:49:02
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:49:02
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:49:04
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:49:04
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:49:24
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:49:24
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:49:24
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:49:24
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:49:24
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:49:24
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:49:24
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:49:24
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:49:44
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:49:44
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:49:44
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:49:44
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:49:44
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Copies_4">
          <StartTime>
2023-02-27 17:49:44
</StartTime>
          <StartTime>
2023-02-27 17:49:44
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:49:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:49:44
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:JobCopiesAllDocuments']/psf:Value)">
            <StartTime>
2023-02-27 17:49:44
</StartTime>
            <Result>
Pass
</Result>
            <Output>
1
</Output>
            <EndTime>
2023-02-27 17:49:44
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},1)">
            <StartTime>
2023-02-27 17:49:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:49:44
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:49:44
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:49:44
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:49:44
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:49:45
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:49:45
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:49:45
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:49:45
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:49:45
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:49:45
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:49:45
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:49:45
</EndTime>
  </TestCase>
  <TestCase Name="51.Copy Count:6">
    <StartTime>
2023-02-27 17:49:45
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:49:45
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:49:45
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Copies_6">
          <StartTime>
2023-02-27 17:49:45
</StartTime>
          <StartTime>
2023-02-27 17:49:45
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Copies_6.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:49:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:50:15
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2023-02-27 17:50:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:50:15
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:50:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:50:15
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:50:15
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:50:21
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:21
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:21
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:50:21
</StartTime>
          <StartTime>
2023-02-27 17:50:21
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:21
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:21
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,6)">
          <StartTime>
2023-02-27 17:50:21
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:21
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:50:21
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17502189.png
</ScreenShot>
          <EndTime>
2023-02-27 17:50:21
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:50:21
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:26
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:50:26
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:27
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:50:27
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:50:32
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:50:32
</StartTime>
          <StartTime>
2023-02-27 17:50:32
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:50:32
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:50:34
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:50:34
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:50:54
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:50:54
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:50:54
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:50:54
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:50:54
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:50:54
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:50:54
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:50:54
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:14
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:14
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:51:14
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:14
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Copies_6">
          <StartTime>
2023-02-27 17:51:14
</StartTime>
          <StartTime>
2023-02-27 17:51:14
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Inner Text (${value},//*[@name='psk:JobCopiesAllDocuments']/psf:Value)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <Output>
1
</Output>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},1)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:51:14
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:14
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:14
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:51:14
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:51:14
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:51:14
</EndTime>
  </TestCase>
  <TestCase Name="52.Collate:On">
    <StartTime>
2023-02-27 17:51:14
</StartTime>
    <Repeat RepeatCount="1">
      <StartTime>
2023-02-27 17:51:14
</StartTime>
      <Loop LoopCount="1">
        <StartTime>
2023-02-27 17:51:14
</StartTime>
        <Statement StatementName="Destination_Selection_Application.Destination Selection_Collate_On">
          <StartTime>
2023-02-27 17:51:14
</StartTime>
          <StartTime>
2023-02-27 17:51:14
</StartTime>
          <Statement StatementName="Hallasan.Open File For Print (C:\GFriend_PotG\Potg_Driver\PotG Testfile\YMC_Collate_On.pdf,HP Smart Printing)">
            <StartTime>
2023-02-27 17:51:14
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:45
</EndTime>
          </Statement>
          <Statement StatementName="Hallasan.Get Driver Window(HP Smart Printing)">
            <StartTime>
2023-02-27 17:51:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:45
</EndTime>
          </Statement>
          <Statement StatementName="Windows.Wait For Name (HP Smart Printing,30)">
            <StartTime>
2023-02-27 17:51:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:45
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(6)">
            <StartTime>
2023-02-27 17:51:45
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:51:51
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:51
</EndTime>
        </Statement>
        <Statement StatementName="Used_Destination_Selection_Function.not Used Destination Selection Function">
          <StartTime>
2023-02-27 17:51:51
</StartTime>
          <StartTime>
2023-02-27 17:51:51
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:51
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:51
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set TextBox (Part.JobCopiesAllDocuments.TextBox,2)">
          <StartTime>
2023-02-27 17:51:51
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:51
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:51:51
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:56
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Set Toggle (Part.DocumentCollate,On)">
          <StartTime>
2023-02-27 17:51:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:51:56
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Capture Screen Shot(Capture.jpg)">
          <StartTime>
2023-02-27 17:51:56
</StartTime>
          <Result>
Pass
</Result>
          <ScreenShot>
.\Windows_Screenshot_230227_17515659.png
</ScreenShot>
          <EndTime>
2023-02-27 17:51:56
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:51:56
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:01
</EndTime>
        </Statement>
        <Statement StatementName="Hallasan.Confirm">
          <StartTime>
2023-02-27 17:52:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:01
</EndTime>
        </Statement>
        <Statement StatementName="Sleep(5)">
          <StartTime>
2023-02-27 17:52:01
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:06
</EndTime>
        </Statement>
        <Statement StatementName="Click_Print_Button.Print">
          <StartTime>
2023-02-27 17:52:06
</StartTime>
          <StartTime>
2023-02-27 17:52:06
</StartTime>
          <Statement StatementName="Hallasan.Click Print Button">
            <StartTime>
2023-02-27 17:52:06
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:52:08
</EndTime>
          </Statement>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:52:08
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:52:29
</EndTime>
          </Statement>
          <If Condition="If :  Hallasan.Close Application">
            <StartTime>
2023-02-27 17:52:29
</StartTime>
            <ConditionResult>
PASS
</ConditionResult>
            <StatementBlock Kind="PASS">
              <StartTime>
2023-02-27 17:52:29
</StartTime>
              <Block>
                <StartTime>
2023-02-27 17:52:29
</StartTime>
                <Result>
PASS
</Result>
                <EndTime>
2023-02-27 17:52:29
</EndTime>
              </Block>
              <EndTime>
2023-02-27 17:52:29
</EndTime>
              <Result>
PASS
</Result>
            </StatementBlock>
            <Result>
PASS
</Result>
            <EndTime>
2023-02-27 17:52:29
</EndTime>
          </If>
          <Statement StatementName="Sleep(20)">
            <StartTime>
2023-02-27 17:52:29
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:49
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:49
</EndTime>
        </Statement>
        <Statement StatementName="Windows.Click ID(PrintingToDialog.ui_ContentFrame.PrintButton)">
          <StartTime>
2023-02-27 17:52:49
</StartTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:49
</EndTime>
        </Statement>
        <Statement StatementName="Destination_Selection_Application.PT Value_Collated">
          <StartTime>
2023-02-27 17:52:49
</StartTime>
          <StartTime>
2023-02-27 17:52:49
</StartTime>
          <Statement StatementName="XML.Load From File (C:\temp\H_JobSetup_OutPT.xml)">
            <StartTime>
2023-02-27 17:52:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='psk:DocumentCollate']/psf:Option,name)">
            <StartTime>
2023-02-27 17:52:49
</StartTime>
            <Result>
Pass
</Result>
            <Output>
psk:Collated
</Output>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},psk:Collated)">
            <StartTime>
2023-02-27 17:52:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Statement StatementName="XML.Get Attribute (${value},//*[@name='ns0000:JobTelemetryUserOption']/psf:Option,name)">
            <StartTime>
2023-02-27 17:52:49
</StartTime>
            <Result>
Pass
</Result>
            <Output>
ns0000:OptIn
</Output>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Statement StatementName="Equals (${value},ns0000:OptIn)">
            <StartTime>
2023-02-27 17:52:49
</StartTime>
            <Result>
Pass
</Result>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Statement StatementName="Run Command(cmd /c copy c:\temp\H_JobSetup_OutPT.xml &quot;${OUTPUT_FOLDER}&quot;,${commandOutput},5)">
            <StartTime>
2023-02-27 17:52:49
</StartTime>
            <Result>
Pass
</Result>
            <Output>
        1 file(s) copied.

</Output>
            <EndTime>
2023-02-27 17:52:49
</EndTime>
          </Statement>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:49
</EndTime>
          <Result>
Pass
</Result>
          <EndTime>
2023-02-27 17:52:49
</EndTime>
        </Statement>
        <Result>
PASS
</Result>
        <EndTime>
2023-02-27 17:52:49
</EndTime>
      </Loop>
      <Result>
PASS
</Result>
      <EndTime>
2023-02-27 17:52:49
</EndTime>
    </Repeat>
    <Result>
PASS
</Result>
    <EndTime>
2023-02-27 17:52:49
</EndTime>
  </TestCase>
  <EndTime>
2023-02-27 17:52:49
</EndTime>
</TestSuite>